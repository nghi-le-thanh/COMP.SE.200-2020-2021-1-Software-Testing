{
  "stats": {
    "suites": 13,
    "tests": 61,
    "passes": 61,
    "pending": 0,
    "failures": 0,
    "start": "2020-12-01T00:12:53.448Z",
    "end": "2020-12-01T00:12:53.500Z",
    "duration": 52,
    "testsRegistered": 61,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "70ef7369-1740-42ed-868f-3a5ff62091ae",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "49504b2d-eae9-436e-a6d5-6c0976c0661f",
          "title": "add.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/add.test.js",
          "file": "/tests/add.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1 + 2 should return 3",
              "fullTitle": "add.js test 1 + 2 should return 3",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(1, 2)).to.equal(3);",
              "err": {},
              "uuid": "3983a7e4-227e-48a4-b3c0-868449102354",
              "parentUUID": "49504b2d-eae9-436e-a6d5-6c0976c0661f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "'1' + 5 should return 6, number type",
              "fullTitle": "add.js test '1' + 5 should return 6, number type",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  expect((0, _add[\"default\"])('1', 5)).to.equal(6);\n} catch (error) {\n  console.warn('\\'1\\' + 5 should return 6, number type. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "0ac77357-e4aa-4df6-b1af-8b55f23156a4",
              "parentUUID": "49504b2d-eae9-436e-a6d5-6c0976c0661f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "'1' + '5' should return 6, number type",
              "fullTitle": "add.js test '1' + '5' should return 6, number type",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  expect((0, _add[\"default\"])('1', '5')).to.equal(6);\n} catch (error) {\n  console.warn('\\'1\\' + \\'5\\' should return 6, number type. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "0b1d5c8d-524c-4bba-bd6c-0309f56cea40",
              "parentUUID": "49504b2d-eae9-436e-a6d5-6c0976c0661f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "1 + '5' should return 6, number type",
              "fullTitle": "add.js test 1 + '5' should return 6, number type",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  expect((0, _add[\"default\"])(1, '5')).to.equal(6);\n} catch (error) {\n  console.warn('1 + \\'5\\' should return 6, number type. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "5ee2e85e-6b15-4428-9290-0d74f022e798",
              "parentUUID": "49504b2d-eae9-436e-a6d5-6c0976c0661f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null + 5 should return 5",
              "fullTitle": "add.js test null + 5 should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(null, 5)).to.equal(5);",
              "err": {},
              "uuid": "f5f51439-4f62-488e-9313-22035368a6f9",
              "parentUUID": "49504b2d-eae9-436e-a6d5-6c0976c0661f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "5 + undefined should return 5",
              "fullTitle": "add.js test 5 + undefined should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(5, undefined)).to.equal(5);",
              "err": {},
              "uuid": "21a04578-f4c3-4965-962b-e3f614fc1c60",
              "parentUUID": "49504b2d-eae9-436e-a6d5-6c0976c0661f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null + undefined should return",
              "fullTitle": "add.js test null + undefined should return",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  expect((0, _add[\"default\"])(null, undefined)).to.equal(0);\n} catch (error) {\n  console.warn('null + undefined should return. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "fe1c7fff-e756-49fa-be5f-a2fca47e359c",
              "parentUUID": "49504b2d-eae9-436e-a6d5-6c0976c0661f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3983a7e4-227e-48a4-b3c0-868449102354",
            "0ac77357-e4aa-4df6-b1af-8b55f23156a4",
            "0b1d5c8d-524c-4bba-bd6c-0309f56cea40",
            "5ee2e85e-6b15-4428-9290-0d74f022e798",
            "f5f51439-4f62-488e-9313-22035368a6f9",
            "21a04578-f4c3-4965-962b-e3f614fc1c60",
            "fe1c7fff-e756-49fa-be5f-a2fca47e359c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a443f934-9cdd-464f-ab9d-c1e578d33bed",
          "title": "Test at.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/at.test.js",
          "file": "/tests/at.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return empty array",
              "fullTitle": "Test at.js function Give null to method, return empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(null)).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "c948341b-8ee7-498b-9f2e-f472421a79fd",
              "parentUUID": "a443f934-9cdd-464f-ab9d-c1e578d33bed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method with correct path, return empty array",
              "fullTitle": "Test at.js function Give undefined to method with correct path, return empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  expect((0, _at[\"default\"])(undefined, ['title'])).to.be.instanceOf(Array).that.eql([]);\n} catch (error) {\n  console.warn('Fail Give undefined to method with correct path, return empty array. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "3e755bc7-5739-4fc3-b010-f94b5393842d",
              "parentUUID": "a443f934-9cdd-464f-ab9d-c1e578d33bed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, return empty array",
              "fullTitle": "Test at.js function Give valid to method, return empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT)).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "4cf3be83-f2a1-42f7-965c-5dd05f4b9d49",
              "parentUUID": "a443f934-9cdd-464f-ab9d-c1e578d33bed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, with correct path. Return valid result",
              "fullTitle": "Test at.js function Give valid to method, with correct path. Return valid result",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT, ['title'])).to.be.instanceOf(Array).that.eql([VALID_OBJECT.title]);",
              "err": {},
              "uuid": "74ea0ea3-6746-489f-bd0d-7fdf5e4dca35",
              "parentUUID": "a443f934-9cdd-464f-ab9d-c1e578d33bed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, with correct paths. Return valid results",
              "fullTitle": "Test at.js function Give valid to method, with correct paths. Return valid results",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT, ['title', 'tags[0]'])).to.be.instanceOf(Array).that.eql([VALID_OBJECT.title, VALID_OBJECT.tags[0]]);",
              "err": {},
              "uuid": "747fd9dc-04a1-4931-935f-4b17ca5607f8",
              "parentUUID": "a443f934-9cdd-464f-ab9d-c1e578d33bed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c948341b-8ee7-498b-9f2e-f472421a79fd",
            "3e755bc7-5739-4fc3-b010-f94b5393842d",
            "4cf3be83-f2a1-42f7-965c-5dd05f4b9d49",
            "74ea0ea3-6746-489f-bd0d-7fdf5e4dca35",
            "747fd9dc-04a1-4931-935f-4b17ca5607f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3914d8fb-e4db-4342-b3a1-f5f7347b78ce",
          "title": "camelCase.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/camelCase.test.js",
          "file": "/tests/camelCase.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test assigning an object to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning an object to the method. Expect an empty string",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.strictEqual((0, _camelCase[\"default\"])({\n    foo: 'bar'\n  }), '');\n} catch (error) {\n  console.warn('Fail test camelCase an object. Reason:', error.message);\n}",
              "err": {},
              "uuid": "759a1577-a982-411d-ae99-023aa3a0be2b",
              "parentUUID": "3914d8fb-e4db-4342-b3a1-f5f7347b78ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning null to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning null to the method. Expect an empty string",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.strictEqual((0, _camelCase[\"default\"])(null), '');\n} catch (error) {\n  console.warn('Fail test camelCase null. Reason:', error.message);\n}",
              "err": {},
              "uuid": "7ae0b54b-e9b5-48ff-b8c0-9cae5903b145",
              "parentUUID": "3914d8fb-e4db-4342-b3a1-f5f7347b78ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning undefined to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning undefined to the method. Expect an empty string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.strictEqual((0, _camelCase[\"default\"])(undefined), '');\n} catch (error) {\n  console.warn('Fail test camelCase undefined. Reason:', error.message);\n}",
              "err": {},
              "uuid": "e99d8c19-263b-4471-8c35-ef1f4269c891",
              "parentUUID": "3914d8fb-e4db-4342-b3a1-f5f7347b78ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning true to the method. Expect boolean in lowercase",
              "fullTitle": "camelCase.js test Test assigning true to the method. Expect boolean in lowercase",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.strictEqual((0, _camelCase[\"default\"])(true), 'true');\n} catch (error) {\n  console.warn('Fail test camelCase boolean. Reason:', error.message);\n}",
              "err": {},
              "uuid": "6596b619-c0e7-4233-9265-c9f37e4b2e28",
              "parentUUID": "3914d8fb-e4db-4342-b3a1-f5f7347b78ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning valid string to the method. Expect correctly converted value",
              "fullTitle": "camelCase.js test Test assigning valid string to the method. Expect correctly converted value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.strictEqual((0, _camelCase[\"default\"])('hello world'), 'helloWorld');\n} catch (error) {\n  console.warn('Fail test camelCase valid string. Reason:', error.message);\n}",
              "err": {},
              "uuid": "f240ee85-60fe-400e-92eb-7cb2934c1278",
              "parentUUID": "3914d8fb-e4db-4342-b3a1-f5f7347b78ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning valid string with special chars to the method. Expect correctly converted value",
              "fullTitle": "camelCase.js test Test assigning valid string with special chars to the method. Expect correctly converted value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.strictEqual((0, _camelCase[\"default\"])('___hello-world! assignment^'), 'helloWorldAssignment');\n} catch (error) {\n  console.warn('Fail test camelCase valid string with special chars. Reason:', error.message);\n}",
              "err": {},
              "uuid": "8208ff88-151e-4740-b486-30b9629c041a",
              "parentUUID": "3914d8fb-e4db-4342-b3a1-f5f7347b78ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "759a1577-a982-411d-ae99-023aa3a0be2b",
            "7ae0b54b-e9b5-48ff-b8c0-9cae5903b145",
            "e99d8c19-263b-4471-8c35-ef1f4269c891",
            "6596b619-c0e7-4233-9265-c9f37e4b2e28",
            "f240ee85-60fe-400e-92eb-7cb2934c1278",
            "8208ff88-151e-4740-b486-30b9629c041a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1f5b1e27-85fd-4079-b2af-ec8bef58ede5",
          "title": "capitalize test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/capitalize.test.js",
          "file": "/tests/capitalize.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert FRED into Fred",
              "fullTitle": "capitalize test should convert FRED into Fred",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])('FRED')).to.equal('Fred');",
              "err": {},
              "uuid": "27afc1c1-f336-4119-97aa-ae7ff3a70621",
              "parentUUID": "1f5b1e27-85fd-4079-b2af-ec8bef58ede5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "capitalize should return string",
              "fullTitle": "capitalize test capitalize should return string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _capitalize[\"default\"])('fred');\nexpect(result).to.be.a('string');",
              "err": {},
              "uuid": "ec0addfb-1d2d-4350-8426-a9f98f37c01d",
              "parentUUID": "1f5b1e27-85fd-4079-b2af-ec8bef58ede5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, boolean, undefined, number",
              "fullTitle": "capitalize test should not return string for null, boolean, undefined, number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])(null)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(true)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(123)).to.not.equal('string');",
              "err": {},
              "uuid": "c8c00a30-58a0-4f7f-aa35-44a389d4fcd9",
              "parentUUID": "1f5b1e27-85fd-4079-b2af-ec8bef58ede5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "27afc1c1-f336-4119-97aa-ae7ff3a70621",
            "ec0addfb-1d2d-4350-8426-a9f98f37c01d",
            "c8c00a30-58a0-4f7f-aa35-44a389d4fcd9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7cc53542-231e-4083-b1ef-37a872a845b2",
          "title": "ceil test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/ceil.test.js",
          "file": "/tests/ceil.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "4.006 with precision 0 should return 5",
              "fullTitle": "ceil test 4.006 with precision 0 should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(4.006)).to.equal(5);",
              "err": {},
              "uuid": "2a9872e1-70c6-44c0-bb56-e790038bf2ff",
              "parentUUID": "7cc53542-231e-4083-b1ef-37a872a845b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6.004 with precision 2 should return 6.01",
              "fullTitle": "ceil test 6.004 with precision 2 should return 6.01",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(6.004, 2)).to.equal(6.01);",
              "err": {},
              "uuid": "c7cb5476-c4cd-4188-b9fb-e345e13a5457",
              "parentUUID": "7cc53542-231e-4083-b1ef-37a872a845b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6040 with precision -2 should return 6100",
              "fullTitle": "ceil test 6040 with precision -2 should return 6100",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(6040, -2)).to.equal(6100);",
              "err": {},
              "uuid": "aa2ed3a0-0586-41c7-9212-641499761a95",
              "parentUUID": "7cc53542-231e-4083-b1ef-37a872a845b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "passing null, undefined, NaN, string should not give results",
              "fullTitle": "ceil test passing null, undefined, NaN, string should not give results",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(null)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])(undefined)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])(NaN)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])('abc')).to.not.equal('number');",
              "err": {},
              "uuid": "e22435b6-7080-4487-ac23-5f8641838c90",
              "parentUUID": "7cc53542-231e-4083-b1ef-37a872a845b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2a9872e1-70c6-44c0-bb56-e790038bf2ff",
            "c7cb5476-c4cd-4188-b9fb-e345e13a5457",
            "aa2ed3a0-0586-41c7-9212-641499761a95",
            "e22435b6-7080-4487-ac23-5f8641838c90"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6e5dc892-e5db-4dfd-a8fb-dc0f5e79c33f",
          "title": "eq test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/eq.test.js",
          "file": "/tests/eq.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if same objects are compared",
              "fullTitle": "eq test should return true if same objects are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var object = {\n  'a': 1\n};\nvar result = (0, _eq[\"default\"])(object, object);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "b2320aeb-7017-4c8a-b946-246093870112",
              "parentUUID": "6e5dc892-e5db-4dfd-a8fb-dc0f5e79c33f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if same strings are compared",
              "fullTitle": "eq test should return true if same strings are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])('a', 'a')).to.be[\"true\"];",
              "err": {},
              "uuid": "70ab5124-880c-4984-9d61-a120ac459a4f",
              "parentUUID": "6e5dc892-e5db-4dfd-a8fb-dc0f5e79c33f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if same numbers are compared",
              "fullTitle": "eq test should return true if same numbers are compared",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])(123, 123)).to.be[\"true\"];",
              "err": {},
              "uuid": "9f271fa5-dc5f-4150-aef3-e70f4be7c7ba",
              "parentUUID": "6e5dc892-e5db-4dfd-a8fb-dc0f5e79c33f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if values are not quivalent",
              "fullTitle": "eq test should return false if values are not quivalent",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])('a', NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "e47648be-4845-4abc-aea7-be387f5776b7",
              "parentUUID": "6e5dc892-e5db-4dfd-a8fb-dc0f5e79c33f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if string and object is compared",
              "fullTitle": "eq test should return false if string and object is compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var object = {\n  'a': 1\n};\nexpect((0, _eq[\"default\"])('a', object)).to.be[\"false\"];",
              "err": {},
              "uuid": "29121835-4a06-4803-bad3-6817fe9c569e",
              "parentUUID": "6e5dc892-e5db-4dfd-a8fb-dc0f5e79c33f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b2320aeb-7017-4c8a-b946-246093870112",
            "70ab5124-880c-4984-9d61-a120ac459a4f",
            "9f271fa5-dc5f-4150-aef3-e70f4be7c7ba",
            "e47648be-4845-4abc-aea7-be387f5776b7",
            "29121835-4a06-4803-bad3-6817fe9c569e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f0d9974e-c74e-4706-8605-4a1a9718b9d6",
          "title": "every test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/every.test.js",
          "file": "/tests/every.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if all array elements pass the predicate check",
              "fullTitle": "every test should return true if all array elements pass the predicate check",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = ['1', 'yes'];\nvar result = (0, _every[\"default\"])(array, String);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "b32e15f0-1e3d-4f6c-9bbc-b0da9efaad40",
              "parentUUID": "f0d9974e-c74e-4706-8605-4a1a9718b9d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for empty arrays",
              "fullTitle": "every test should return true for empty arrays",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [];\nvar result = (0, _every[\"default\"])(array, String);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "a0f6ef8f-7e33-40d6-b8d9-357c255e9b55",
              "parentUUID": "f0d9974e-c74e-4706-8605-4a1a9718b9d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if all array elements did not pass the predicate check",
              "fullTitle": "every test should return false if all array elements did not pass the predicate check",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [true, 1, null, 'yes'];\nvar result = (0, _every[\"default\"])(array, Boolean);\nexpect(result).to.be[\"false\"];",
              "err": {},
              "uuid": "940442ea-3c21-4067-9875-3e7a5a83c494",
              "parentUUID": "f0d9974e-c74e-4706-8605-4a1a9718b9d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return boolean if array is not passed",
              "fullTitle": "every test should not return boolean if array is not passed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _every[\"default\"])('abc', String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(123, Number)).to.not.equal('boolean');",
              "err": {},
              "uuid": "955675ce-34c3-4d7e-819c-b111e1e8a68e",
              "parentUUID": "f0d9974e-c74e-4706-8605-4a1a9718b9d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return boolean if null, NaN, undefined is passed",
              "fullTitle": "every test should not return boolean if null, NaN, undefined is passed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _every[\"default\"])(null, String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(NaN, String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(undefined, String)).to.not.equal('boolean');",
              "err": {},
              "uuid": "9c454c06-e572-4811-ae0e-8a13168a7077",
              "parentUUID": "f0d9974e-c74e-4706-8605-4a1a9718b9d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b32e15f0-1e3d-4f6c-9bbc-b0da9efaad40",
            "a0f6ef8f-7e33-40d6-b8d9-357c255e9b55",
            "940442ea-3c21-4067-9875-3e7a5a83c494",
            "955675ce-34c3-4d7e-819c-b111e1e8a68e",
            "9c454c06-e572-4811-ae0e-8a13168a7077"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "317c82ac-b69a-4b44-a9dd-5de91436c374",
          "title": "isEmpty test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isEmpty.test.js",
          "file": "/tests/isEmpty.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is Empty",
              "fullTitle": "isEmpty test should return true if value is Empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])(null)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(true)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(1)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(undefined)).to.be[\"true\"];",
              "err": {},
              "uuid": "352f3826-f508-4aeb-a9cf-6fa5bc4c18c6",
              "parentUUID": "317c82ac-b69a-4b44-a9dd-5de91436c374",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not Empty",
              "fullTitle": "isEmpty test should return false if value is not Empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isEmpty[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isEmpty[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "5caa6516-7a1b-4a48-82bf-23999aeb0b61",
              "parentUUID": "317c82ac-b69a-4b44-a9dd-5de91436c374",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "352f3826-f508-4aeb-a9cf-6fa5bc4c18c6",
            "5caa6516-7a1b-4a48-82bf-23999aeb0b61"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "edc61ce1-2316-4d96-88ab-c490f98937b8",
          "title": "Test toFinite.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/toFinite.test.js",
          "file": "/tests/toFinite.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return NAN",
              "fullTitle": "Test toFinite.js function Give null to method, return NAN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])(null)).to.eql(0);",
              "err": {},
              "uuid": "f9b5c622-c2ca-48d4-bbe5-4ca2db7118ce",
              "parentUUID": "edc61ce1-2316-4d96-88ab-c490f98937b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, return NaN",
              "fullTitle": "Test toFinite.js function Give undefined to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])(undefined)).to.eql(0);",
              "err": {},
              "uuid": "9bd3c89e-90b1-4d4f-b923-79612d4adf96",
              "parentUUID": "edc61ce1-2316-4d96-88ab-c490f98937b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give invalid number string to method, return NaN",
              "fullTitle": "Test toFinite.js function Give invalid number string to method, return NaN",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])('a string with a value')).to.eql(0);",
              "err": {},
              "uuid": "96071ca8-fdb5-49ff-ba20-39104d131559",
              "parentUUID": "edc61ce1-2316-4d96-88ab-c490f98937b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give Hexadecimals number string to method, return converted base 10",
              "fullTitle": "Test toFinite.js function Give Hexadecimals number string to method, return converted base 10",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal((0, _toFinite[\"default\"])('0xabcdef'), 11259375);",
              "err": {},
              "uuid": "cb2e8c22-dc6b-4f11-bad3-7bc004483183",
              "parentUUID": "edc61ce1-2316-4d96-88ab-c490f98937b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid number to method, return number type and same value",
              "fullTitle": "Test toFinite.js function Give valid number to method, return number type and same value",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toFinite[\"default\"])(3.44532);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 3.44532);",
              "err": {},
              "uuid": "8b324942-4128-43d3-9147-ec50bea95c9a",
              "parentUUID": "edc61ce1-2316-4d96-88ab-c490f98937b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give maximum int value to method, return number type and converted value",
              "fullTitle": "Test toFinite.js function Give maximum int value to method, return number type and converted value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toFinite[\"default\"])(Infinity);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 1.7976931348623157e+308);",
              "err": {},
              "uuid": "60f88459-b4e2-4a66-a377-98fa28df2d9d",
              "parentUUID": "edc61ce1-2316-4d96-88ab-c490f98937b8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9b5c622-c2ca-48d4-bbe5-4ca2db7118ce",
            "9bd3c89e-90b1-4d4f-b923-79612d4adf96",
            "96071ca8-fdb5-49ff-ba20-39104d131559",
            "cb2e8c22-dc6b-4f11-bad3-7bc004483183",
            "8b324942-4128-43d3-9147-ec50bea95c9a",
            "60f88459-b4e2-4a66-a377-98fa28df2d9d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "79e1907e-47e0-483e-8fb0-594222e41f71",
          "title": "Test toNumber.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/toNumber.test.js",
          "file": "/tests/toNumber.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return NAN",
              "fullTitle": "Test toNumber.js function Give null to method, return NAN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  var expectedValue = (0, _toNumber[\"default\"])(null);\n  expect(expectedValue).to.be.NaN;\n} catch (error) {\n  console.warn('Failed test Give null to method, return NAN. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "642318cc-e0bd-4a88-ae73-5967cbf0cf6c",
              "parentUUID": "79e1907e-47e0-483e-8fb0-594222e41f71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, return NaN",
              "fullTitle": "Test toNumber.js function Give undefined to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])(undefined)).to.be.NaN;",
              "err": {},
              "uuid": "b6238097-0355-4fe4-a3a1-22e6ae7dd6d4",
              "parentUUID": "79e1907e-47e0-483e-8fb0-594222e41f71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give invalid number string to method, return NaN",
              "fullTitle": "Test toNumber.js function Give invalid number string to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])('Hello world!')).to.be.NaN;",
              "err": {},
              "uuid": "0d5a98d4-be9b-45a8-82e9-bb1d2abebf1e",
              "parentUUID": "79e1907e-47e0-483e-8fb0-594222e41f71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give Hexadecimals number string to method, return converted base 10",
              "fullTitle": "Test toNumber.js function Give Hexadecimals number string to method, return converted base 10",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal((0, _toNumber[\"default\"])('0xabcdef'), 11259375);",
              "err": {},
              "uuid": "a439ad7b-0b6b-43c1-bcba-24da6a528ff2",
              "parentUUID": "79e1907e-47e0-483e-8fb0-594222e41f71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid number string to method, return number type and same value",
              "fullTitle": "Test toNumber.js function Give valid number string to method, return number type and same value",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toNumber[\"default\"])(500);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 500);",
              "err": {},
              "uuid": "5a470cad-8346-463b-acf2-28850cbd510c",
              "parentUUID": "79e1907e-47e0-483e-8fb0-594222e41f71",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "642318cc-e0bd-4a88-ae73-5967cbf0cf6c",
            "b6238097-0355-4fe4-a3a1-22e6ae7dd6d4",
            "0d5a98d4-be9b-45a8-82e9-bb1d2abebf1e",
            "a439ad7b-0b6b-43c1-bcba-24da6a528ff2",
            "5a470cad-8346-463b-acf2-28850cbd510c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "056a6d69-6d6c-40cb-8407-9b5e3f19aad8",
          "title": "toString test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/toString.test.js",
          "file": "/tests/toString.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should preserved -0",
              "fullTitle": "toString test should preserved -0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(-0)).to.equal('-0');",
              "err": {},
              "uuid": "6ecd7c1f-9937-4bba-a1a0-e197478aea84",
              "parentUUID": "056a6d69-6d6c-40cb-8407-9b5e3f19aad8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert array into a string",
              "fullTitle": "toString test should convert array into a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])([1, 2, 3])).to.equal('1,2,3');",
              "err": {},
              "uuid": "a275fb79-41dc-4630-9f01-cbf6ae7efc4f",
              "parentUUID": "056a6d69-6d6c-40cb-8407-9b5e3f19aad8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, undefined, boolean, NaN",
              "fullTitle": "toString test should not return string for null, undefined, boolean, NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(null)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(true)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(NaN)).to.not.equal('string');",
              "err": {},
              "uuid": "58a5c2ba-17fb-436c-9c9d-37749105927f",
              "parentUUID": "056a6d69-6d6c-40cb-8407-9b5e3f19aad8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return string for number, object, string",
              "fullTitle": "toString test should return string for number, object, string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(123)).to.be.a('string');\nexpect((0, _toString[\"default\"])({\n  'a': 1\n})).to.be.a('string');\nexpect((0, _toString[\"default\"])('abc')).to.be.a('string');",
              "err": {},
              "uuid": "5dd8b06b-1ba9-4c33-a073-b627fee84d6d",
              "parentUUID": "056a6d69-6d6c-40cb-8407-9b5e3f19aad8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ecd7c1f-9937-4bba-a1a0-e197478aea84",
            "a275fb79-41dc-4630-9f01-cbf6ae7efc4f",
            "58a5c2ba-17fb-436c-9c9d-37749105927f",
            "5dd8b06b-1ba9-4c33-a073-b627fee84d6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dd656c5a-5278-4e0e-bffa-404a2173e632",
          "title": "upperFirst test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/upperFirst.test.js",
          "file": "/tests/upperFirst.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert fred into Fred",
              "fullTitle": "upperFirst test should convert fred into Fred",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])('fred')).to.equal('Fred');",
              "err": {},
              "uuid": "af641583-f433-42e7-82b9-fb2e048d6946",
              "parentUUID": "dd656c5a-5278-4e0e-bffa-404a2173e632",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert FRED into FRED",
              "fullTitle": "upperFirst test should convert FRED into FRED",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])('FRED')).to.equal('FRED');",
              "err": {},
              "uuid": "bf89096c-1687-4c93-af8c-4005c20486ff",
              "parentUUID": "dd656c5a-5278-4e0e-bffa-404a2173e632",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "upperFirst should return string",
              "fullTitle": "upperFirst test upperFirst should return string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _upperFirst[\"default\"])('fred');\nexpect(result).to.be.a('string');",
              "err": {},
              "uuid": "8afeaa25-b022-48f2-b9dc-75c89ad9f142",
              "parentUUID": "dd656c5a-5278-4e0e-bffa-404a2173e632",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, undefined, NaN",
              "fullTitle": "upperFirst test should not return string for null, undefined, NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])(null)).to.not.equal('string');\nexpect((0, _upperFirst[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _upperFirst[\"default\"])(NaN)).to.not.equal('string');",
              "err": {},
              "uuid": "ed88ed3a-e1b9-40bc-963e-984da5e41ca9",
              "parentUUID": "dd656c5a-5278-4e0e-bffa-404a2173e632",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af641583-f433-42e7-82b9-fb2e048d6946",
            "bf89096c-1687-4c93-af8c-4005c20486ff",
            "8afeaa25-b022-48f2-b9dc-75c89ad9f142",
            "ed88ed3a-e1b9-40bc-963e-984da5e41ca9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d4bc8712-13a4-4378-9937-e3d9f554d2d0",
          "title": "Test word.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/words.test.js",
          "file": "/tests/words.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, method is failed because match method of String is missing",
              "fullTitle": "Test word.js function Give null to method, method is failed because match method of String is missing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function () {\n  (0, _words[\"default\"])(null, null);\n}).to[\"throw\"](TypeError);",
              "err": {},
              "uuid": "928426ab-cb0b-4437-8019-321b4192131c",
              "parentUUID": "d4bc8712-13a4-4378-9937-e3d9f554d2d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, method is failed because match method of String is missing",
              "fullTitle": "Test word.js function Give undefined to method, method is failed because match method of String is missing",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function () {\n  (0, _words[\"default\"])(undefined, null);\n}).to[\"throw\"](TypeError);",
              "err": {},
              "uuid": "ee78e77a-10a8-42b4-a3eb-ba6da22fd35e",
              "parentUUID": "d4bc8712-13a4-4378-9937-e3d9f554d2d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give empty string without pattern, return empty array",
              "fullTitle": "Test word.js function Give empty string without pattern, return empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _words[\"default\"])('')).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "8afdac50-b030-440e-ac10-a0075771b6fe",
              "parentUUID": "d4bc8712-13a4-4378-9937-e3d9f554d2d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give sample valid string, return array with splitted words and remove all special chars",
              "fullTitle": "Test word.js function Give sample valid string, return array with splitted words and remove all special chars",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _words[\"default\"])('abc.a abc abb')).to.be.instanceOf(Array).that.eql(['abc', 'a', 'abc', 'abb']);\nexpect((0, _words[\"default\"])('abc.a a,bc ab|b')).to.be.instanceOf(Array).that.eql(['abc', 'a', 'a', 'bc', 'ab', 'b']);",
              "err": {},
              "uuid": "10296a5a-3b94-42e2-85b4-8bdc9d0a8b99",
              "parentUUID": "d4bc8712-13a4-4378-9937-e3d9f554d2d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give sample valid string, return array with splitted words match patterns",
              "fullTitle": "Test word.js function Give sample valid string, return array with splitted words match patterns",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var SPLIT_WORDS_BY_SPACE_AND_COMMA = /[^, ]+/g;\nexpect((0, _words[\"default\"])('abc.a ab,c abb', SPLIT_WORDS_BY_SPACE_AND_COMMA)).to.be.instanceOf(Array).that.eql(['abc.a', 'ab', 'c', 'abb']);",
              "err": {},
              "uuid": "28241e1c-b2bd-404f-9319-a3f1d145e730",
              "parentUUID": "d4bc8712-13a4-4378-9937-e3d9f554d2d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "928426ab-cb0b-4437-8019-321b4192131c",
            "ee78e77a-10a8-42b4-a3eb-ba6da22fd35e",
            "8afdac50-b030-440e-ac10-a0075771b6fe",
            "10296a5a-3b94-42e2-85b4-8bdc9d0a8b99",
            "28241e1c-b2bd-404f-9319-a3f1d145e730"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportFilename": "index"
      },
      "version": "5.1.0"
    }
  }
}