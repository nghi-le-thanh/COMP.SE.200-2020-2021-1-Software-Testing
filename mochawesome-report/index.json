{
  "stats": {
    "suites": 13,
    "tests": 61,
    "passes": 49,
    "pending": 0,
    "failures": 12,
    "start": "2020-12-01T01:13:39.285Z",
    "end": "2020-12-01T01:13:39.332Z",
    "duration": 47,
    "testsRegistered": 61,
    "passPercent": 80.32786885245902,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e3f81774-b0aa-4783-b8ca-ae4683ce7a3b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3eee93a3-1d8d-4bc1-af55-1247d02ded0d",
          "title": "add.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/add.test.js",
          "file": "/tests/add.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1 + 2 should return 3",
              "fullTitle": "add.js test 1 + 2 should return 3",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(1, 2)).to.equal(3);",
              "err": {},
              "uuid": "3292cc47-8f27-419c-8152-fca60f646eb9",
              "parentUUID": "3eee93a3-1d8d-4bc1-af55-1247d02ded0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "'1' + 5 should return 6, number type",
              "fullTitle": "add.js test '1' + 5 should return 6, number type",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])('1', 5)).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:13:32)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "8bc56935-a74c-4f98-9fb3-44bfe350ab4b",
              "parentUUID": "3eee93a3-1d8d-4bc1-af55-1247d02ded0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "'1' + '5' should return 6, number type",
              "fullTitle": "add.js test '1' + '5' should return 6, number type",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])('1', '5')).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:18:34)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "06b00f38-b01e-4cdf-9650-8b98384c33d9",
              "parentUUID": "3eee93a3-1d8d-4bc1-af55-1247d02ded0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "1 + '5' should return 6, number type",
              "fullTitle": "add.js test 1 + '5' should return 6, number type",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(1, '5')).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:23:32)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "3b4f7a39-91da-4889-aad0-e749eab99154",
              "parentUUID": "3eee93a3-1d8d-4bc1-af55-1247d02ded0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null + 5 should return 5",
              "fullTitle": "add.js test null + 5 should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(null, 5)).to.equal(5);",
              "err": {},
              "uuid": "7b9ea47d-d764-476a-8bc1-8d7b59f86a1a",
              "parentUUID": "3eee93a3-1d8d-4bc1-af55-1247d02ded0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "5 + undefined should return 5",
              "fullTitle": "add.js test 5 + undefined should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(5, undefined)).to.equal(5);",
              "err": {},
              "uuid": "d6c5a088-47de-45fe-95b5-4b434e742714",
              "parentUUID": "3eee93a3-1d8d-4bc1-af55-1247d02ded0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null + undefined should return",
              "fullTitle": "add.js test null + undefined should return",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(null, undefined)).to.equal(0);",
              "err": {
                "message": "AssertionError: expected null to equal 0",
                "estack": "AssertionError: expected null to equal 0\n    at Context.<anonymous> (tests/add.test.js:36:41)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "82c0babc-1bf7-4057-8e2b-8e936c723845",
              "parentUUID": "3eee93a3-1d8d-4bc1-af55-1247d02ded0d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3292cc47-8f27-419c-8152-fca60f646eb9",
            "7b9ea47d-d764-476a-8bc1-8d7b59f86a1a",
            "d6c5a088-47de-45fe-95b5-4b434e742714"
          ],
          "failures": [
            "8bc56935-a74c-4f98-9fb3-44bfe350ab4b",
            "06b00f38-b01e-4cdf-9650-8b98384c33d9",
            "3b4f7a39-91da-4889-aad0-e749eab99154",
            "82c0babc-1bf7-4057-8e2b-8e936c723845"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "32d486b2-644a-4a90-830c-8121100e0671",
          "title": "Test at.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/at.test.js",
          "file": "/tests/at.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return empty array",
              "fullTitle": "Test at.js function Give null to method, return empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(null)).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "85d88956-28f6-4344-8d25-8a71e04ae6f2",
              "parentUUID": "32d486b2-644a-4a90-830c-8121100e0671",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method with correct path, return empty array",
              "fullTitle": "Test at.js function Give undefined to method with correct path, return empty array",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(undefined, ['title'])).to.be.instanceOf(Array).that.eql([]);",
              "err": {
                "message": "AssertionError: expected [ undefined ] to deeply equal []",
                "estack": "AssertionError: expected [ undefined ] to deeply equal []\n    at Context.<anonymous> (tests/at.test.js:24:71)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- [\n-   [undefined]\n- ]\n+ []\n"
              },
              "uuid": "e52f39d3-148d-49d1-ac5e-9281a3640a82",
              "parentUUID": "32d486b2-644a-4a90-830c-8121100e0671",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, return empty array",
              "fullTitle": "Test at.js function Give valid to method, return empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT)).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "a8e75661-60ee-4c24-a942-f2cd399a0239",
              "parentUUID": "32d486b2-644a-4a90-830c-8121100e0671",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, with correct path. Return valid result",
              "fullTitle": "Test at.js function Give valid to method, with correct path. Return valid result",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT, ['title'])).to.be.instanceOf(Array).that.eql([VALID_OBJECT.title]);",
              "err": {},
              "uuid": "853bf2a8-5340-4219-8d3f-fcb061857df6",
              "parentUUID": "32d486b2-644a-4a90-830c-8121100e0671",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, with correct paths. Return valid results",
              "fullTitle": "Test at.js function Give valid to method, with correct paths. Return valid results",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT, ['title', 'tags[0]'])).to.be.instanceOf(Array).that.eql([VALID_OBJECT.title, VALID_OBJECT.tags[0]]);",
              "err": {},
              "uuid": "53893865-d4a9-41e9-9d83-6304ae8016a5",
              "parentUUID": "32d486b2-644a-4a90-830c-8121100e0671",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "85d88956-28f6-4344-8d25-8a71e04ae6f2",
            "a8e75661-60ee-4c24-a942-f2cd399a0239",
            "853bf2a8-5340-4219-8d3f-fcb061857df6",
            "53893865-d4a9-41e9-9d83-6304ae8016a5"
          ],
          "failures": [
            "e52f39d3-148d-49d1-ac5e-9281a3640a82"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d6be53b5-703a-42d9-9b66-9a79829625c4",
          "title": "camelCase.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/camelCase.test.js",
          "file": "/tests/camelCase.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test assigning an object to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning an object to the method. Expect an empty string",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])({\n  foo: 'bar'\n}), '');",
              "err": {
                "message": "AssertionError: expected ' objectObject' to equal ''",
                "estack": "AssertionError: expected ' objectObject' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:9:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  objectObject\n"
              },
              "uuid": "93fbf1c2-4860-4855-99a3-bb65b902b026",
              "parentUUID": "d6be53b5-703a-42d9-9b66-9a79829625c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning null to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning null to the method. Expect an empty string",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(null), '');",
              "err": {
                "message": "AssertionError: expected ' null' to equal ''",
                "estack": "AssertionError: expected ' null' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:14:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  null\n"
              },
              "uuid": "be91822e-afbe-467d-85a7-09fa055408fa",
              "parentUUID": "d6be53b5-703a-42d9-9b66-9a79829625c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning undefined to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning undefined to the method. Expect an empty string",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(undefined), '');",
              "err": {
                "message": "AssertionError: expected ' undefined' to equal ''",
                "estack": "AssertionError: expected ' undefined' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:19:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  undefined\n"
              },
              "uuid": "19612750-d0ce-4ac1-b342-3fe3c090a0bf",
              "parentUUID": "d6be53b5-703a-42d9-9b66-9a79829625c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning true to the method. Expect boolean in lowercase",
              "fullTitle": "camelCase.js test Test assigning true to the method. Expect boolean in lowercase",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(true), 'true');",
              "err": {
                "message": "AssertionError: expected ' true' to equal 'true'",
                "estack": "AssertionError: expected ' true' to equal 'true'\n    at Context.<anonymous> (tests/camelCase.test.js:24:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  true\n+ true\n"
              },
              "uuid": "96544745-ee20-4b74-9b94-4d2a5bc9a2ea",
              "parentUUID": "d6be53b5-703a-42d9-9b66-9a79829625c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning valid string to the method. Expect correctly converted value",
              "fullTitle": "camelCase.js test Test assigning valid string to the method. Expect correctly converted value",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])('hello world'), 'helloWorld');",
              "err": {
                "message": "AssertionError: expected ' helloWorld' to equal 'helloWorld'",
                "estack": "AssertionError: expected ' helloWorld' to equal 'helloWorld'\n    at Context.<anonymous> (tests/camelCase.test.js:29:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  helloWorld\n+ helloWorld\n"
              },
              "uuid": "d70cde75-a18a-4728-ae45-a14a00fdee88",
              "parentUUID": "d6be53b5-703a-42d9-9b66-9a79829625c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning valid string with special chars to the method. Expect correctly converted value",
              "fullTitle": "camelCase.js test Test assigning valid string with special chars to the method. Expect correctly converted value",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])('___hello-world! assignment^'), 'helloWorldAssignment');",
              "err": {
                "message": "AssertionError: expected ' helloWorldAssignment' to equal 'helloWorldAssignment'",
                "estack": "AssertionError: expected ' helloWorldAssignment' to equal 'helloWorldAssignment'\n    at Context.<anonymous> (tests/camelCase.test.js:34:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  helloWorldAssignment\n+ helloWorldAssignment\n"
              },
              "uuid": "8421f37a-f637-45ab-abfd-33f2ae8f7778",
              "parentUUID": "d6be53b5-703a-42d9-9b66-9a79829625c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "93fbf1c2-4860-4855-99a3-bb65b902b026",
            "be91822e-afbe-467d-85a7-09fa055408fa",
            "19612750-d0ce-4ac1-b342-3fe3c090a0bf",
            "96544745-ee20-4b74-9b94-4d2a5bc9a2ea",
            "d70cde75-a18a-4728-ae45-a14a00fdee88",
            "8421f37a-f637-45ab-abfd-33f2ae8f7778"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d9b7e130-c16a-4868-ac12-70cb218251fc",
          "title": "capitalize test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/capitalize.test.js",
          "file": "/tests/capitalize.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert FRED into Fred",
              "fullTitle": "capitalize test should convert FRED into Fred",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])('FRED')).to.equal('Fred');",
              "err": {},
              "uuid": "0c5aead5-5359-42f3-846e-c0b67928de66",
              "parentUUID": "d9b7e130-c16a-4868-ac12-70cb218251fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "capitalize should return string",
              "fullTitle": "capitalize test capitalize should return string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _capitalize[\"default\"])('fred');\nexpect(result).to.be.a('string');",
              "err": {},
              "uuid": "731b5712-f1af-475d-8323-e799780cefa1",
              "parentUUID": "d9b7e130-c16a-4868-ac12-70cb218251fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, boolean, undefined, number",
              "fullTitle": "capitalize test should not return string for null, boolean, undefined, number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])(null)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(true)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(123)).to.not.equal('string');",
              "err": {},
              "uuid": "11f224e2-1d4f-470d-a5bb-9571e4310103",
              "parentUUID": "d9b7e130-c16a-4868-ac12-70cb218251fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c5aead5-5359-42f3-846e-c0b67928de66",
            "731b5712-f1af-475d-8323-e799780cefa1",
            "11f224e2-1d4f-470d-a5bb-9571e4310103"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e8934547-89f5-4be4-847e-2c3a9f58dbec",
          "title": "ceil test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/ceil.test.js",
          "file": "/tests/ceil.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "4.006 with precision 0 should return 5",
              "fullTitle": "ceil test 4.006 with precision 0 should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(4.006)).to.equal(5);",
              "err": {},
              "uuid": "9c299cd7-422a-4e1a-a28e-752424b92d8e",
              "parentUUID": "e8934547-89f5-4be4-847e-2c3a9f58dbec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6.004 with precision 2 should return 6.01",
              "fullTitle": "ceil test 6.004 with precision 2 should return 6.01",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(6.004, 2)).to.equal(6.01);",
              "err": {},
              "uuid": "7958e1df-80bf-44a1-bd40-e0fdfc99b540",
              "parentUUID": "e8934547-89f5-4be4-847e-2c3a9f58dbec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6040 with precision -2 should return 6100",
              "fullTitle": "ceil test 6040 with precision -2 should return 6100",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(6040, -2)).to.equal(6100);",
              "err": {},
              "uuid": "33e02936-d36a-4f6d-b555-0e1fc42ebee6",
              "parentUUID": "e8934547-89f5-4be4-847e-2c3a9f58dbec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "passing null, undefined, NaN, string should not give results",
              "fullTitle": "ceil test passing null, undefined, NaN, string should not give results",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(null)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])(undefined)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])(NaN)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])('abc')).to.not.equal('number');",
              "err": {},
              "uuid": "61cde5fe-0423-4192-8f33-a6ec59a53894",
              "parentUUID": "e8934547-89f5-4be4-847e-2c3a9f58dbec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c299cd7-422a-4e1a-a28e-752424b92d8e",
            "7958e1df-80bf-44a1-bd40-e0fdfc99b540",
            "33e02936-d36a-4f6d-b555-0e1fc42ebee6",
            "61cde5fe-0423-4192-8f33-a6ec59a53894"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e33e678b-a70c-4477-a220-a6bb75d646b6",
          "title": "eq test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/eq.test.js",
          "file": "/tests/eq.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if same objects are compared",
              "fullTitle": "eq test should return true if same objects are compared",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var object = {\n  'a': 1\n};\nvar result = (0, _eq[\"default\"])(object, object);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "a4ddf4a0-e725-4a7e-9914-0a6750fcecb4",
              "parentUUID": "e33e678b-a70c-4477-a220-a6bb75d646b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if same strings are compared",
              "fullTitle": "eq test should return true if same strings are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])('a', 'a')).to.be[\"true\"];",
              "err": {},
              "uuid": "143ea967-6c0b-4089-85cc-b9e2fb4609e7",
              "parentUUID": "e33e678b-a70c-4477-a220-a6bb75d646b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if same numbers are compared",
              "fullTitle": "eq test should return true if same numbers are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])(123, 123)).to.be[\"true\"];",
              "err": {},
              "uuid": "13d09e94-7835-4794-86e6-4e9ed9760038",
              "parentUUID": "e33e678b-a70c-4477-a220-a6bb75d646b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if values are not quivalent",
              "fullTitle": "eq test should return false if values are not quivalent",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])('a', NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "bdefb5b3-5afc-48a3-85e0-d232370f4f12",
              "parentUUID": "e33e678b-a70c-4477-a220-a6bb75d646b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if string and object is compared",
              "fullTitle": "eq test should return false if string and object is compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var object = {\n  'a': 1\n};\nexpect((0, _eq[\"default\"])('a', object)).to.be[\"false\"];",
              "err": {},
              "uuid": "14b0e5c8-b00e-4ba2-8ace-e7f23b01fc29",
              "parentUUID": "e33e678b-a70c-4477-a220-a6bb75d646b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a4ddf4a0-e725-4a7e-9914-0a6750fcecb4",
            "143ea967-6c0b-4089-85cc-b9e2fb4609e7",
            "13d09e94-7835-4794-86e6-4e9ed9760038",
            "bdefb5b3-5afc-48a3-85e0-d232370f4f12",
            "14b0e5c8-b00e-4ba2-8ace-e7f23b01fc29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8f1c51b8-d2e9-4b46-af65-de6f322d857e",
          "title": "every test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/every.test.js",
          "file": "/tests/every.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if all array elements pass the predicate check",
              "fullTitle": "every test should return true if all array elements pass the predicate check",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = ['1', 'yes'];\nvar result = (0, _every[\"default\"])(array, String);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "9b54a79b-3763-4135-ad83-040a6c20f94c",
              "parentUUID": "8f1c51b8-d2e9-4b46-af65-de6f322d857e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for empty arrays",
              "fullTitle": "every test should return true for empty arrays",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [];\nvar result = (0, _every[\"default\"])(array, String);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "582cb3e7-a701-4758-ab4f-4ea27956a7ac",
              "parentUUID": "8f1c51b8-d2e9-4b46-af65-de6f322d857e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if all array elements did not pass the predicate check",
              "fullTitle": "every test should return false if all array elements did not pass the predicate check",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [true, 1, null, 'yes'];\nvar result = (0, _every[\"default\"])(array, Boolean);\nexpect(result).to.be[\"false\"];",
              "err": {},
              "uuid": "5fd98607-6e24-4c86-9a54-ef297a0cfc6f",
              "parentUUID": "8f1c51b8-d2e9-4b46-af65-de6f322d857e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return boolean if array is not passed",
              "fullTitle": "every test should not return boolean if array is not passed",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _every[\"default\"])('abc', String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(123, Number)).to.not.equal('boolean');",
              "err": {},
              "uuid": "cfecaf6c-b46c-4940-ad78-513fd90e989c",
              "parentUUID": "8f1c51b8-d2e9-4b46-af65-de6f322d857e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return boolean if null, NaN, undefined is passed",
              "fullTitle": "every test should not return boolean if null, NaN, undefined is passed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _every[\"default\"])(null, String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(NaN, String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(undefined, String)).to.not.equal('boolean');",
              "err": {},
              "uuid": "5ae5b624-b658-4998-89b8-3cc7a854d933",
              "parentUUID": "8f1c51b8-d2e9-4b46-af65-de6f322d857e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b54a79b-3763-4135-ad83-040a6c20f94c",
            "582cb3e7-a701-4758-ab4f-4ea27956a7ac",
            "5fd98607-6e24-4c86-9a54-ef297a0cfc6f",
            "cfecaf6c-b46c-4940-ad78-513fd90e989c",
            "5ae5b624-b658-4998-89b8-3cc7a854d933"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c1dce471-31d5-4b79-98bb-9042b0ce082d",
          "title": "isEmpty test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isEmpty.test.js",
          "file": "/tests/isEmpty.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is Empty",
              "fullTitle": "isEmpty test should return true if value is Empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])(null)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(true)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(1)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(undefined)).to.be[\"true\"];",
              "err": {},
              "uuid": "71aa5428-0bc3-4d33-a4d2-82a90fbedac5",
              "parentUUID": "c1dce471-31d5-4b79-98bb-9042b0ce082d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not Empty",
              "fullTitle": "isEmpty test should return false if value is not Empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isEmpty[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isEmpty[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "eb7eb813-ad8a-49f6-b5c5-57e96c46ed9c",
              "parentUUID": "c1dce471-31d5-4b79-98bb-9042b0ce082d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "71aa5428-0bc3-4d33-a4d2-82a90fbedac5",
            "eb7eb813-ad8a-49f6-b5c5-57e96c46ed9c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "65414b5a-851d-4d00-b740-83246b039619",
          "title": "Test toFinite.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/toFinite.test.js",
          "file": "/tests/toFinite.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return NAN",
              "fullTitle": "Test toFinite.js function Give null to method, return NAN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])(null)).to.eql(0);",
              "err": {},
              "uuid": "8a7f250b-4172-4d83-80d6-9e10fe6f165b",
              "parentUUID": "65414b5a-851d-4d00-b740-83246b039619",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, return NaN",
              "fullTitle": "Test toFinite.js function Give undefined to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])(undefined)).to.eql(0);",
              "err": {},
              "uuid": "51623f65-7a66-4bfc-bd11-443c485cd213",
              "parentUUID": "65414b5a-851d-4d00-b740-83246b039619",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give invalid number string to method, return NaN",
              "fullTitle": "Test toFinite.js function Give invalid number string to method, return NaN",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])('a string with a value')).to.eql(0);",
              "err": {},
              "uuid": "d1bf6776-8cba-4f3f-8f85-a78cd8954d34",
              "parentUUID": "65414b5a-851d-4d00-b740-83246b039619",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give Hexadecimals number string to method, return converted base 10",
              "fullTitle": "Test toFinite.js function Give Hexadecimals number string to method, return converted base 10",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal((0, _toFinite[\"default\"])('0xabcdef'), 11259375);",
              "err": {},
              "uuid": "4a280087-b5cc-4d5e-a3c8-a6ada0a42fa3",
              "parentUUID": "65414b5a-851d-4d00-b740-83246b039619",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid number to method, return number type and same value",
              "fullTitle": "Test toFinite.js function Give valid number to method, return number type and same value",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toFinite[\"default\"])(3.44532);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 3.44532);",
              "err": {},
              "uuid": "17798de6-2042-492e-84c1-d06d0aed2a47",
              "parentUUID": "65414b5a-851d-4d00-b740-83246b039619",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give maximum int value to method, return number type and converted value",
              "fullTitle": "Test toFinite.js function Give maximum int value to method, return number type and converted value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toFinite[\"default\"])(Infinity);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 1.7976931348623157e+308);",
              "err": {},
              "uuid": "758603c8-5cd9-4b74-8c2c-5900fb2dba09",
              "parentUUID": "65414b5a-851d-4d00-b740-83246b039619",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a7f250b-4172-4d83-80d6-9e10fe6f165b",
            "51623f65-7a66-4bfc-bd11-443c485cd213",
            "d1bf6776-8cba-4f3f-8f85-a78cd8954d34",
            "4a280087-b5cc-4d5e-a3c8-a6ada0a42fa3",
            "17798de6-2042-492e-84c1-d06d0aed2a47",
            "758603c8-5cd9-4b74-8c2c-5900fb2dba09"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d51444bb-10a5-4e54-b6b9-5a3c8a7a9b83",
          "title": "Test toNumber.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/toNumber.test.js",
          "file": "/tests/toNumber.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return NAN",
              "fullTitle": "Test toNumber.js function Give null to method, return NAN",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])(null)).to.be.NaN;",
              "err": {
                "message": "AssertionError: expected 0 to be NaN",
                "estack": "AssertionError: expected 0 to be NaN\n    at Context.<anonymous> (tests/toNumber.test.js:11:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "0cbf73ab-5692-48d9-bcec-6645e3ebffe6",
              "parentUUID": "d51444bb-10a5-4e54-b6b9-5a3c8a7a9b83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, return NaN",
              "fullTitle": "Test toNumber.js function Give undefined to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])(undefined)).to.be.NaN;",
              "err": {},
              "uuid": "c83ed5f0-e09b-46c8-a83d-b90e6632a585",
              "parentUUID": "d51444bb-10a5-4e54-b6b9-5a3c8a7a9b83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give invalid number string to method, return NaN",
              "fullTitle": "Test toNumber.js function Give invalid number string to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])('Hello world!')).to.be.NaN;",
              "err": {},
              "uuid": "68f4c042-68c2-4981-8d63-f9cafe9f8add",
              "parentUUID": "d51444bb-10a5-4e54-b6b9-5a3c8a7a9b83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give Hexadecimals number string to method, return converted base 10",
              "fullTitle": "Test toNumber.js function Give Hexadecimals number string to method, return converted base 10",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal((0, _toNumber[\"default\"])('0xabcdef'), 11259375);",
              "err": {},
              "uuid": "462c3f5d-4154-440b-8bd1-54556d40c7aa",
              "parentUUID": "d51444bb-10a5-4e54-b6b9-5a3c8a7a9b83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid number string to method, return number type and same value",
              "fullTitle": "Test toNumber.js function Give valid number string to method, return number type and same value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toNumber[\"default\"])(500);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 500);",
              "err": {},
              "uuid": "a9e1f5a7-a6e9-4a86-90cc-b05169b034d8",
              "parentUUID": "d51444bb-10a5-4e54-b6b9-5a3c8a7a9b83",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c83ed5f0-e09b-46c8-a83d-b90e6632a585",
            "68f4c042-68c2-4981-8d63-f9cafe9f8add",
            "462c3f5d-4154-440b-8bd1-54556d40c7aa",
            "a9e1f5a7-a6e9-4a86-90cc-b05169b034d8"
          ],
          "failures": [
            "0cbf73ab-5692-48d9-bcec-6645e3ebffe6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e5f5148d-1eac-4639-905b-bf228f0cddb9",
          "title": "toString test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/toString.test.js",
          "file": "/tests/toString.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should preserved -0",
              "fullTitle": "toString test should preserved -0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(-0)).to.equal('-0');",
              "err": {},
              "uuid": "1fdbcb0c-218f-4cad-aa4c-d89bda116294",
              "parentUUID": "e5f5148d-1eac-4639-905b-bf228f0cddb9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert array into a string",
              "fullTitle": "toString test should convert array into a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])([1, 2, 3])).to.equal('1,2,3');",
              "err": {},
              "uuid": "aefdb400-dd87-4e3e-87c1-94e13b6cdd37",
              "parentUUID": "e5f5148d-1eac-4639-905b-bf228f0cddb9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, undefined, boolean, NaN",
              "fullTitle": "toString test should not return string for null, undefined, boolean, NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(null)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(true)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(NaN)).to.not.equal('string');",
              "err": {},
              "uuid": "dc087bc9-69d7-4c00-beec-b85c1d4ccbc5",
              "parentUUID": "e5f5148d-1eac-4639-905b-bf228f0cddb9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return string for number, object, string",
              "fullTitle": "toString test should return string for number, object, string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(123)).to.be.a('string');\nexpect((0, _toString[\"default\"])({\n  'a': 1\n})).to.be.a('string');\nexpect((0, _toString[\"default\"])('abc')).to.be.a('string');",
              "err": {},
              "uuid": "575fede0-1e05-4b7e-8c47-c530bc2667c0",
              "parentUUID": "e5f5148d-1eac-4639-905b-bf228f0cddb9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1fdbcb0c-218f-4cad-aa4c-d89bda116294",
            "aefdb400-dd87-4e3e-87c1-94e13b6cdd37",
            "dc087bc9-69d7-4c00-beec-b85c1d4ccbc5",
            "575fede0-1e05-4b7e-8c47-c530bc2667c0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1e6f9098-0bcf-41ca-b0c0-d40aee67ed81",
          "title": "upperFirst test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/upperFirst.test.js",
          "file": "/tests/upperFirst.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert fred into Fred",
              "fullTitle": "upperFirst test should convert fred into Fred",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])('fred')).to.equal('Fred');",
              "err": {},
              "uuid": "f2020aca-eed7-40ec-a79b-f48ed381fa93",
              "parentUUID": "1e6f9098-0bcf-41ca-b0c0-d40aee67ed81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert FRED into FRED",
              "fullTitle": "upperFirst test should convert FRED into FRED",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])('FRED')).to.equal('FRED');",
              "err": {},
              "uuid": "7578fd96-e2c3-4052-ab43-b2c791894ed7",
              "parentUUID": "1e6f9098-0bcf-41ca-b0c0-d40aee67ed81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "upperFirst should return string",
              "fullTitle": "upperFirst test upperFirst should return string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _upperFirst[\"default\"])('fred');\nexpect(result).to.be.a('string');",
              "err": {},
              "uuid": "bb74a8d2-7fb8-48c0-aeb1-fe99e2c5c23f",
              "parentUUID": "1e6f9098-0bcf-41ca-b0c0-d40aee67ed81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, undefined, NaN",
              "fullTitle": "upperFirst test should not return string for null, undefined, NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])(null)).to.not.equal('string');\nexpect((0, _upperFirst[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _upperFirst[\"default\"])(NaN)).to.not.equal('string');",
              "err": {},
              "uuid": "75a985e0-5142-41c3-95a5-439827a3478c",
              "parentUUID": "1e6f9098-0bcf-41ca-b0c0-d40aee67ed81",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2020aca-eed7-40ec-a79b-f48ed381fa93",
            "7578fd96-e2c3-4052-ab43-b2c791894ed7",
            "bb74a8d2-7fb8-48c0-aeb1-fe99e2c5c23f",
            "75a985e0-5142-41c3-95a5-439827a3478c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "572febd0-e8bf-4e7a-b8ce-1533a2405e66",
          "title": "Test word.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/words.test.js",
          "file": "/tests/words.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, method is failed because match method of String is missing",
              "fullTitle": "Test word.js function Give null to method, method is failed because match method of String is missing",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function () {\n  (0, _words[\"default\"])(null, null);\n}).to[\"throw\"](TypeError);",
              "err": {},
              "uuid": "b9411ff4-436b-4eb9-82b0-c3acb666d5c1",
              "parentUUID": "572febd0-e8bf-4e7a-b8ce-1533a2405e66",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, method is failed because match method of String is missing",
              "fullTitle": "Test word.js function Give undefined to method, method is failed because match method of String is missing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function () {\n  (0, _words[\"default\"])(undefined, null);\n}).to[\"throw\"](TypeError);",
              "err": {},
              "uuid": "697be2ee-c6ee-42d5-8570-f055cf32cd6f",
              "parentUUID": "572febd0-e8bf-4e7a-b8ce-1533a2405e66",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give empty string without pattern, return empty array",
              "fullTitle": "Test word.js function Give empty string without pattern, return empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _words[\"default\"])('')).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "63a58e2f-fd10-4571-b448-decc1bbf833a",
              "parentUUID": "572febd0-e8bf-4e7a-b8ce-1533a2405e66",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give sample valid string, return array with splitted words and remove all special chars",
              "fullTitle": "Test word.js function Give sample valid string, return array with splitted words and remove all special chars",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _words[\"default\"])('abc.a abc abb')).to.be.instanceOf(Array).that.eql(['abc', 'a', 'abc', 'abb']);\nexpect((0, _words[\"default\"])('abc.a a,bc ab|b')).to.be.instanceOf(Array).that.eql(['abc', 'a', 'a', 'bc', 'ab', 'b']);",
              "err": {},
              "uuid": "b5ba08b2-bf78-4ff4-865d-017c8c3acd35",
              "parentUUID": "572febd0-e8bf-4e7a-b8ce-1533a2405e66",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give sample valid string, return array with splitted words match patterns",
              "fullTitle": "Test word.js function Give sample valid string, return array with splitted words match patterns",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var SPLIT_WORDS_BY_SPACE_AND_COMMA = /[^, ]+/g;\nexpect((0, _words[\"default\"])('abc.a ab,c abb', SPLIT_WORDS_BY_SPACE_AND_COMMA)).to.be.instanceOf(Array).that.eql(['abc.a', 'ab', 'c', 'abb']);",
              "err": {},
              "uuid": "4ff9aaec-f5d1-4069-ac10-3efa5cd6cc92",
              "parentUUID": "572febd0-e8bf-4e7a-b8ce-1533a2405e66",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b9411ff4-436b-4eb9-82b0-c3acb666d5c1",
            "697be2ee-c6ee-42d5-8570-f055cf32cd6f",
            "63a58e2f-fd10-4571-b448-decc1bbf833a",
            "b5ba08b2-bf78-4ff4-865d-017c8c3acd35",
            "4ff9aaec-f5d1-4069-ac10-3efa5cd6cc92"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportFilename": "index"
      },
      "version": "5.1.0"
    }
  }
}