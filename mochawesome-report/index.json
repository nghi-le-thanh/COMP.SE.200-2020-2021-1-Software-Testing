{
  "stats": {
    "suites": 15,
    "tests": 74,
    "passes": 62,
    "pending": 0,
    "failures": 12,
    "start": "2020-12-01T11:27:52.977Z",
    "end": "2020-12-01T11:27:53.036Z",
    "duration": 59,
    "testsRegistered": 74,
    "passPercent": 83.78378378378379,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5c6b592c-e4ea-46a4-9db4-58c6bffeb385",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5fadafdf-f3f2-4b26-bdf2-99e1b4195d26",
          "title": "add.js test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/add.test.js",
          "file": "/tests/add.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1 + 2 should return 3",
              "fullTitle": "add.js test 1 + 2 should return 3",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(1, 2)).to.equal(3);",
              "err": {},
              "uuid": "b7efab56-5c71-4839-a007-eb75feb31014",
              "parentUUID": "5fadafdf-f3f2-4b26-bdf2-99e1b4195d26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "'1' + 5 should return 6, number type",
              "fullTitle": "add.js test '1' + 5 should return 6, number type",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])('1', 5)).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:13:32)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "f295e260-3920-4bb5-8699-eaee651ad4b3",
              "parentUUID": "5fadafdf-f3f2-4b26-bdf2-99e1b4195d26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "'1' + '5' should return 6, number type",
              "fullTitle": "add.js test '1' + '5' should return 6, number type",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])('1', '5')).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:18:34)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "acf24f0d-d8d9-4d9e-b81f-fa376e965404",
              "parentUUID": "5fadafdf-f3f2-4b26-bdf2-99e1b4195d26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "1 + '5' should return 6, number type",
              "fullTitle": "add.js test 1 + '5' should return 6, number type",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(1, '5')).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:23:32)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "bad1d365-a243-4b46-85f1-4f9d4274b4f3",
              "parentUUID": "5fadafdf-f3f2-4b26-bdf2-99e1b4195d26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null + 5 should return 5",
              "fullTitle": "add.js test null + 5 should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(null, 5)).to.equal(5);",
              "err": {},
              "uuid": "a0eb1f2e-a9a4-451a-b964-eecbbda93659",
              "parentUUID": "5fadafdf-f3f2-4b26-bdf2-99e1b4195d26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "5 + undefined should return 5",
              "fullTitle": "add.js test 5 + undefined should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(5, undefined)).to.equal(5);",
              "err": {},
              "uuid": "1b869294-7a49-4fe2-ba24-4f99de76a94c",
              "parentUUID": "5fadafdf-f3f2-4b26-bdf2-99e1b4195d26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null + undefined should return",
              "fullTitle": "add.js test null + undefined should return",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(null, undefined)).to.equal(0);",
              "err": {
                "message": "AssertionError: expected null to equal 0",
                "estack": "AssertionError: expected null to equal 0\n    at Context.<anonymous> (tests/add.test.js:36:41)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "82805ae7-0da6-4675-b237-1bf0d88bcd70",
              "parentUUID": "5fadafdf-f3f2-4b26-bdf2-99e1b4195d26",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7efab56-5c71-4839-a007-eb75feb31014",
            "a0eb1f2e-a9a4-451a-b964-eecbbda93659",
            "1b869294-7a49-4fe2-ba24-4f99de76a94c"
          ],
          "failures": [
            "f295e260-3920-4bb5-8699-eaee651ad4b3",
            "acf24f0d-d8d9-4d9e-b81f-fa376e965404",
            "bad1d365-a243-4b46-85f1-4f9d4274b4f3",
            "82805ae7-0da6-4675-b237-1bf0d88bcd70"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6671e920-ded7-485d-a8d1-68eccbebb45b",
          "title": "Test at.js function",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/at.test.js",
          "file": "/tests/at.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return empty array",
              "fullTitle": "Test at.js function Give null to method, return empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(null)).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "eaaf5d92-8e96-4160-a01e-0575c6c1a6cb",
              "parentUUID": "6671e920-ded7-485d-a8d1-68eccbebb45b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method with correct path, return empty array",
              "fullTitle": "Test at.js function Give undefined to method with correct path, return empty array",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(undefined, ['title'])).to.be.instanceOf(Array).that.eql([]);",
              "err": {
                "message": "AssertionError: expected [ undefined ] to deeply equal []",
                "estack": "AssertionError: expected [ undefined ] to deeply equal []\n    at Context.<anonymous> (tests/at.test.js:24:71)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- [\n-   [undefined]\n- ]\n+ []\n"
              },
              "uuid": "9470929c-1023-4aac-9136-24cb10ffac3a",
              "parentUUID": "6671e920-ded7-485d-a8d1-68eccbebb45b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, return empty array",
              "fullTitle": "Test at.js function Give valid to method, return empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT)).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "956b3b81-f983-4c92-b833-903ce81394c5",
              "parentUUID": "6671e920-ded7-485d-a8d1-68eccbebb45b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, with correct path. Return valid result",
              "fullTitle": "Test at.js function Give valid to method, with correct path. Return valid result",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT, ['title'])).to.be.instanceOf(Array).that.eql([VALID_OBJECT.title]);",
              "err": {},
              "uuid": "43e6b16b-4769-43b4-acee-c9d885a93ceb",
              "parentUUID": "6671e920-ded7-485d-a8d1-68eccbebb45b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, with correct paths. Return valid results",
              "fullTitle": "Test at.js function Give valid to method, with correct paths. Return valid results",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT, ['title', 'tags[0]'])).to.be.instanceOf(Array).that.eql([VALID_OBJECT.title, VALID_OBJECT.tags[0]]);",
              "err": {},
              "uuid": "55c3e13c-4ac5-4d1e-ae09-91bb150a2e5c",
              "parentUUID": "6671e920-ded7-485d-a8d1-68eccbebb45b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eaaf5d92-8e96-4160-a01e-0575c6c1a6cb",
            "956b3b81-f983-4c92-b833-903ce81394c5",
            "43e6b16b-4769-43b4-acee-c9d885a93ceb",
            "55c3e13c-4ac5-4d1e-ae09-91bb150a2e5c"
          ],
          "failures": [
            "9470929c-1023-4aac-9136-24cb10ffac3a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "28504891-3d63-483e-890a-d37361b19e1d",
          "title": "camelCase.js test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/camelCase.test.js",
          "file": "/tests/camelCase.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test assigning an object to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning an object to the method. Expect an empty string",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])({\n  foo: 'bar'\n}), '');",
              "err": {
                "message": "AssertionError: expected ' objectObject' to equal ''",
                "estack": "AssertionError: expected ' objectObject' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:9:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  objectObject\n"
              },
              "uuid": "7ba77e92-4352-491b-8075-1e51676ad2a2",
              "parentUUID": "28504891-3d63-483e-890a-d37361b19e1d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning null to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning null to the method. Expect an empty string",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(null), '');",
              "err": {
                "message": "AssertionError: expected ' null' to equal ''",
                "estack": "AssertionError: expected ' null' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:14:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  null\n"
              },
              "uuid": "1649870c-c208-4dec-bc49-c96fbf3056da",
              "parentUUID": "28504891-3d63-483e-890a-d37361b19e1d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning undefined to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning undefined to the method. Expect an empty string",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(undefined), '');",
              "err": {
                "message": "AssertionError: expected ' undefined' to equal ''",
                "estack": "AssertionError: expected ' undefined' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:19:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  undefined\n"
              },
              "uuid": "dcb96083-904e-424d-a842-e6b6b0903523",
              "parentUUID": "28504891-3d63-483e-890a-d37361b19e1d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning true to the method. Expect boolean in lowercase",
              "fullTitle": "camelCase.js test Test assigning true to the method. Expect boolean in lowercase",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(true), 'true');",
              "err": {
                "message": "AssertionError: expected ' true' to equal 'true'",
                "estack": "AssertionError: expected ' true' to equal 'true'\n    at Context.<anonymous> (tests/camelCase.test.js:24:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  true\n+ true\n"
              },
              "uuid": "1d920495-54d2-456b-8cbc-62b52dd42ede",
              "parentUUID": "28504891-3d63-483e-890a-d37361b19e1d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning valid string to the method. Expect correctly converted value",
              "fullTitle": "camelCase.js test Test assigning valid string to the method. Expect correctly converted value",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])('hello world'), 'helloWorld');",
              "err": {
                "message": "AssertionError: expected ' helloWorld' to equal 'helloWorld'",
                "estack": "AssertionError: expected ' helloWorld' to equal 'helloWorld'\n    at Context.<anonymous> (tests/camelCase.test.js:29:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  helloWorld\n+ helloWorld\n"
              },
              "uuid": "578042e7-6215-4035-a3c8-be6b1a59ba48",
              "parentUUID": "28504891-3d63-483e-890a-d37361b19e1d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning valid string with special chars to the method. Expect correctly converted value",
              "fullTitle": "camelCase.js test Test assigning valid string with special chars to the method. Expect correctly converted value",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])('___hello-world! assignment^'), 'helloWorldAssignment');",
              "err": {
                "message": "AssertionError: expected ' helloWorldAssignment' to equal 'helloWorldAssignment'",
                "estack": "AssertionError: expected ' helloWorldAssignment' to equal 'helloWorldAssignment'\n    at Context.<anonymous> (tests/camelCase.test.js:34:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  helloWorldAssignment\n+ helloWorldAssignment\n"
              },
              "uuid": "81323ba6-6680-4fc4-8930-9008f011c56b",
              "parentUUID": "28504891-3d63-483e-890a-d37361b19e1d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7ba77e92-4352-491b-8075-1e51676ad2a2",
            "1649870c-c208-4dec-bc49-c96fbf3056da",
            "dcb96083-904e-424d-a842-e6b6b0903523",
            "1d920495-54d2-456b-8cbc-62b52dd42ede",
            "578042e7-6215-4035-a3c8-be6b1a59ba48",
            "81323ba6-6680-4fc4-8930-9008f011c56b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c70ddb79-a78b-4e1a-9672-d60a20f89ed3",
          "title": "capitalize test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/capitalize.test.js",
          "file": "/tests/capitalize.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert FRED into Fred",
              "fullTitle": "capitalize test should convert FRED into Fred",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])('FRED')).to.equal('Fred');",
              "err": {},
              "uuid": "868fff87-f4e3-4ba3-9ffd-37183c385702",
              "parentUUID": "c70ddb79-a78b-4e1a-9672-d60a20f89ed3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "capitalize should return string",
              "fullTitle": "capitalize test capitalize should return string",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _capitalize[\"default\"])('fred');\nexpect(result).to.be.a('string');",
              "err": {},
              "uuid": "3277a470-5479-4822-8036-072a18c4f417",
              "parentUUID": "c70ddb79-a78b-4e1a-9672-d60a20f89ed3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, boolean, undefined, number",
              "fullTitle": "capitalize test should not return string for null, boolean, undefined, number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])(null)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(true)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(123)).to.not.equal('string');",
              "err": {},
              "uuid": "e69043c1-1311-4dfb-927d-5bf75aac752b",
              "parentUUID": "c70ddb79-a78b-4e1a-9672-d60a20f89ed3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "868fff87-f4e3-4ba3-9ffd-37183c385702",
            "3277a470-5479-4822-8036-072a18c4f417",
            "e69043c1-1311-4dfb-927d-5bf75aac752b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "16df2191-b214-451f-a72f-bdf23478adeb",
          "title": "castArray.js test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/castArray.test.js",
          "file": "/tests/castArray.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cast null should return array with null as first item",
              "fullTitle": "castArray.js test cast null should return array with null as first item",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual([null], (0, _castArray[\"default\"])(null));",
              "err": {},
              "uuid": "f5e258a1-b0f1-49e3-b765-1efa1f894e38",
              "parentUUID": "16df2191-b214-451f-a72f-bdf23478adeb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast undefined should return array with undefined as first item",
              "fullTitle": "castArray.js test cast undefined should return array with undefined as first item",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual([undefined], (0, _castArray[\"default\"])(undefined));",
              "err": {},
              "uuid": "1a4b5686-1f4c-4256-a2f6-f456391849a1",
              "parentUUID": "16df2191-b214-451f-a72f-bdf23478adeb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast nothing should return an empty array",
              "fullTitle": "castArray.js test cast nothing should return an empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.deepEqual([], (0, _castArray[\"default\"])());\n} catch (error) {\n  console.warn('Fail test cast nothing should return an empty array. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "4deb4603-dc78-4f8e-a1ef-46d0bb310b3e",
              "parentUUID": "16df2191-b214-451f-a72f-bdf23478adeb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast parameters 1, 'a', 5 should return an array [1, 'a', 5] ",
              "fullTitle": "castArray.js test cast parameters 1, 'a', 5 should return an array [1, 'a', 5] ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.deepEqual((0, _castArray[\"default\"])(1, 'a', 5), [1, 'a', 5]);\n} catch (error) {\n  console.warn('Fail cast parameters 1, \\'a\\', 5 should return an array [1, \\'a\\', 5]. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "71c1aa4a-7c9a-44bf-80ab-848f3e6c4d90",
              "parentUUID": "16df2191-b214-451f-a72f-bdf23478adeb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast a parameter 'abc' should return an array ['abc'] ",
              "fullTitle": "castArray.js test cast a parameter 'abc' should return an array ['abc'] ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _castArray[\"default\"])('abc'), ['abc']);",
              "err": {},
              "uuid": "87c5af51-8e7e-4bcc-a336-ec3323d311ce",
              "parentUUID": "16df2191-b214-451f-a72f-bdf23478adeb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast a parameter {foo: 'abc'} should return an array [{foo: 'abc'}] ",
              "fullTitle": "castArray.js test cast a parameter {foo: 'abc'} should return an array [{foo: 'abc'}] ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _castArray[\"default\"])({\n  foo: 'abc'\n}), [{\n  foo: 'abc'\n}]);",
              "err": {},
              "uuid": "9519ac6a-11b8-4481-8a44-69a40afafcca",
              "parentUUID": "16df2191-b214-451f-a72f-bdf23478adeb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast parameters (3, [2, 3]) should return an array [3, 2, 3]",
              "fullTitle": "castArray.js test cast parameters (3, [2, 3]) should return an array [3, 2, 3]",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.deepEqual((0, _castArray[\"default\"])(3, [2, 3]), [3, 2, 3]);\n} catch (error) {\n  console.warn('Fail test cast parameters (3, [2, 3]) should return an array [3, 2, 3]. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "223ef4d8-8c72-4ae5-8a58-a24b33c4e932",
              "parentUUID": "16df2191-b214-451f-a72f-bdf23478adeb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f5e258a1-b0f1-49e3-b765-1efa1f894e38",
            "1a4b5686-1f4c-4256-a2f6-f456391849a1",
            "4deb4603-dc78-4f8e-a1ef-46d0bb310b3e",
            "71c1aa4a-7c9a-44bf-80ab-848f3e6c4d90",
            "87c5af51-8e7e-4bcc-a336-ec3323d311ce",
            "9519ac6a-11b8-4481-8a44-69a40afafcca",
            "223ef4d8-8c72-4ae5-8a58-a24b33c4e932"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9f380d52-8f53-4884-954e-69db67b1e559",
          "title": "ceil test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/ceil.test.js",
          "file": "/tests/ceil.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "4.006 with precision 0 should return 5",
              "fullTitle": "ceil test 4.006 with precision 0 should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(4.006)).to.equal(5);",
              "err": {},
              "uuid": "f7296d52-5742-4130-b057-532c925b4bb2",
              "parentUUID": "9f380d52-8f53-4884-954e-69db67b1e559",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6.004 with precision 2 should return 6.01",
              "fullTitle": "ceil test 6.004 with precision 2 should return 6.01",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(6.004, 2)).to.equal(6.01);",
              "err": {},
              "uuid": "670b4e00-ae9f-478d-823c-75e8f1fcfb61",
              "parentUUID": "9f380d52-8f53-4884-954e-69db67b1e559",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6040 with precision -2 should return 6100",
              "fullTitle": "ceil test 6040 with precision -2 should return 6100",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(6040, -2)).to.equal(6100);",
              "err": {},
              "uuid": "239d56af-8453-4d49-a018-30c689cbf35c",
              "parentUUID": "9f380d52-8f53-4884-954e-69db67b1e559",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "passing null, undefined, NaN, string should not give results",
              "fullTitle": "ceil test passing null, undefined, NaN, string should not give results",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(null)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])(undefined)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])(NaN)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])('abc')).to.not.equal('number');",
              "err": {},
              "uuid": "d09f166e-4c53-4d53-954b-a5158f7e07f6",
              "parentUUID": "9f380d52-8f53-4884-954e-69db67b1e559",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7296d52-5742-4130-b057-532c925b4bb2",
            "670b4e00-ae9f-478d-823c-75e8f1fcfb61",
            "239d56af-8453-4d49-a018-30c689cbf35c",
            "d09f166e-4c53-4d53-954b-a5158f7e07f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e7a7e593-0e30-41dc-8d45-a21a3281b5f8",
          "title": "chunk.js test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/chunk.test.js",
          "file": "/tests/chunk.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "chunk a valid array with zero size, expect return unchanged array",
              "fullTitle": "chunk.js test chunk a valid array with zero size, expect return unchanged array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.deepEqual((0, _chunk[\"default\"])([1, 2, 3], 0), [1, 2, 3]);\n} catch (error) {\n  console.warn('Fail test chunk a valid array with zero size, expect return unchanged array. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "0f3d73b3-45e4-4978-baf9-b32c6fa4771b",
              "parentUUID": "e7a7e593-0e30-41dc-8d45-a21a3281b5f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk a valid array with negavitve size, expect empty array",
              "fullTitle": "chunk.js test chunk a valid array with negavitve size, expect empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _chunk[\"default\"])([1, 2, 3], -100.55), []);",
              "err": {},
              "uuid": "f649d85a-5623-479b-ad58-4c8afa594be0",
              "parentUUID": "e7a7e593-0e30-41dc-8d45-a21a3281b5f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk an empty array with valid size, expect empty array",
              "fullTitle": "chunk.js test chunk an empty array with valid size, expect empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _chunk[\"default\"])([], 10), []);",
              "err": {},
              "uuid": "80693f22-6c92-4179-bbcf-71930a3e6ba1",
              "parentUUID": "e7a7e593-0e30-41dc-8d45-a21a3281b5f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk an empty array with negative size, expect empty array",
              "fullTitle": "chunk.js test chunk an empty array with negative size, expect empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _chunk[\"default\"])([], -10), []);",
              "err": {},
              "uuid": "1160954a-1019-44d1-b211-beb59809e6d8",
              "parentUUID": "e7a7e593-0e30-41dc-8d45-a21a3281b5f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk invalid type with valid size, expect thrown error",
              "fullTitle": "chunk.js test chunk invalid type with valid size, expect thrown error",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert[\"throws\"](function () {\n    (0, _chunk[\"default\"])(\"hello world\", 2);\n  }, 'Invalid input');\n} catch (error) {\n  console.warn('chunk invalid type with valid size, expect thrown error. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "b1607819-f830-4a9f-aac1-0c91afc61bda",
              "parentUUID": "e7a7e593-0e30-41dc-8d45-a21a3281b5f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk valid type with valid size, expect valid sub arrays",
              "fullTitle": "chunk.js test chunk valid type with valid size, expect valid sub arrays",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.deepEqual((0, _chunk[\"default\"])(['foo', 'doctor', 'hello'], 2), [['foo', 'doctor'], ['hello']]);\n} catch (error) {\n  console.warn('Unexpected fail test chunk valid type with valid size, expect valid sub arrays. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "b0467a92-d55a-4490-809f-7d5156f99fc6",
              "parentUUID": "e7a7e593-0e30-41dc-8d45-a21a3281b5f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f3d73b3-45e4-4978-baf9-b32c6fa4771b",
            "f649d85a-5623-479b-ad58-4c8afa594be0",
            "80693f22-6c92-4179-bbcf-71930a3e6ba1",
            "1160954a-1019-44d1-b211-beb59809e6d8",
            "b1607819-f830-4a9f-aac1-0c91afc61bda",
            "b0467a92-d55a-4490-809f-7d5156f99fc6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "639b0b05-6ac9-480b-879d-20f04f352a27",
          "title": "eq test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/eq.test.js",
          "file": "/tests/eq.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if same objects are compared",
              "fullTitle": "eq test should return true if same objects are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var object = {\n  'a': 1\n};\nvar result = (0, _eq[\"default\"])(object, object);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "7ffb44ec-df37-484e-a51d-4daa27a6e985",
              "parentUUID": "639b0b05-6ac9-480b-879d-20f04f352a27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if same strings are compared",
              "fullTitle": "eq test should return true if same strings are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])('a', 'a')).to.be[\"true\"];",
              "err": {},
              "uuid": "814e361a-2b33-4871-9794-e09a9b11993b",
              "parentUUID": "639b0b05-6ac9-480b-879d-20f04f352a27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if same numbers are compared",
              "fullTitle": "eq test should return true if same numbers are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])(123, 123)).to.be[\"true\"];",
              "err": {},
              "uuid": "7d549869-956d-4e81-876c-19f2282f6a93",
              "parentUUID": "639b0b05-6ac9-480b-879d-20f04f352a27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if values are not quivalent",
              "fullTitle": "eq test should return false if values are not quivalent",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])('a', NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "c84201a9-9952-4e6b-8f1c-f6c6ca87cacd",
              "parentUUID": "639b0b05-6ac9-480b-879d-20f04f352a27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if string and object is compared",
              "fullTitle": "eq test should return false if string and object is compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var object = {\n  'a': 1\n};\nexpect((0, _eq[\"default\"])('a', object)).to.be[\"false\"];",
              "err": {},
              "uuid": "4b77111e-0ff8-452e-977f-7f386213b5ee",
              "parentUUID": "639b0b05-6ac9-480b-879d-20f04f352a27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ffb44ec-df37-484e-a51d-4daa27a6e985",
            "814e361a-2b33-4871-9794-e09a9b11993b",
            "7d549869-956d-4e81-876c-19f2282f6a93",
            "c84201a9-9952-4e6b-8f1c-f6c6ca87cacd",
            "4b77111e-0ff8-452e-977f-7f386213b5ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ddacc171-6728-4480-80a4-932994ef79b5",
          "title": "every test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/every.test.js",
          "file": "/tests/every.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if all array elements pass the predicate check",
              "fullTitle": "every test should return true if all array elements pass the predicate check",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = ['1', 'yes'];\nvar result = (0, _every[\"default\"])(array, String);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "741f1528-1f68-4524-a927-0c5786665208",
              "parentUUID": "ddacc171-6728-4480-80a4-932994ef79b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for empty arrays",
              "fullTitle": "every test should return true for empty arrays",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [];\nvar result = (0, _every[\"default\"])(array, String);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "980489bb-f1ea-4c96-90dc-fb6df433cae2",
              "parentUUID": "ddacc171-6728-4480-80a4-932994ef79b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if all array elements did not pass the predicate check",
              "fullTitle": "every test should return false if all array elements did not pass the predicate check",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [true, 1, null, 'yes'];\nvar result = (0, _every[\"default\"])(array, Boolean);\nexpect(result).to.be[\"false\"];",
              "err": {},
              "uuid": "69561314-f1fa-4462-afdc-3909f322c684",
              "parentUUID": "ddacc171-6728-4480-80a4-932994ef79b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return boolean if array is not passed",
              "fullTitle": "every test should not return boolean if array is not passed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _every[\"default\"])('abc', String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(123, Number)).to.not.equal('boolean');",
              "err": {},
              "uuid": "e031e261-08aa-49f1-b067-499ac93a1110",
              "parentUUID": "ddacc171-6728-4480-80a4-932994ef79b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return boolean if null, NaN, undefined is passed",
              "fullTitle": "every test should not return boolean if null, NaN, undefined is passed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _every[\"default\"])(null, String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(NaN, String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(undefined, String)).to.not.equal('boolean');",
              "err": {},
              "uuid": "f1e34eca-ef63-47c1-a31b-55f6c67f2c97",
              "parentUUID": "ddacc171-6728-4480-80a4-932994ef79b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "741f1528-1f68-4524-a927-0c5786665208",
            "980489bb-f1ea-4c96-90dc-fb6df433cae2",
            "69561314-f1fa-4462-afdc-3909f322c684",
            "e031e261-08aa-49f1-b067-499ac93a1110",
            "f1e34eca-ef63-47c1-a31b-55f6c67f2c97"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3f5638b6-200b-4d11-bf85-fd512686bd9d",
          "title": "isEmpty test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/isEmpty.test.js",
          "file": "/tests/isEmpty.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is Empty",
              "fullTitle": "isEmpty test should return true if value is Empty",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])(null)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(true)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(1)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(undefined)).to.be[\"true\"];",
              "err": {},
              "uuid": "0bad2656-a390-4f94-bc18-702c6ec080be",
              "parentUUID": "3f5638b6-200b-4d11-bf85-fd512686bd9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not Empty",
              "fullTitle": "isEmpty test should return false if value is not Empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isEmpty[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isEmpty[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "086ca908-e9e4-4f59-822b-02ff553b41b0",
              "parentUUID": "3f5638b6-200b-4d11-bf85-fd512686bd9d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0bad2656-a390-4f94-bc18-702c6ec080be",
            "086ca908-e9e4-4f59-822b-02ff553b41b0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0ad3a267-a374-431d-898e-a1ece54b21e1",
          "title": "Test toFinite.js function",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/toFinite.test.js",
          "file": "/tests/toFinite.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return NAN",
              "fullTitle": "Test toFinite.js function Give null to method, return NAN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])(null)).to.eql(0);",
              "err": {},
              "uuid": "a07c0aa0-d111-4d55-92ae-f6f41868b4fe",
              "parentUUID": "0ad3a267-a374-431d-898e-a1ece54b21e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, return NaN",
              "fullTitle": "Test toFinite.js function Give undefined to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])(undefined)).to.eql(0);",
              "err": {},
              "uuid": "9535b02e-a50c-43b7-b692-c3c45a911161",
              "parentUUID": "0ad3a267-a374-431d-898e-a1ece54b21e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give invalid number string to method, return NaN",
              "fullTitle": "Test toFinite.js function Give invalid number string to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])('a string with a value')).to.eql(0);",
              "err": {},
              "uuid": "6cf7907f-e003-4d65-83c8-5d58b5390f68",
              "parentUUID": "0ad3a267-a374-431d-898e-a1ece54b21e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give Hexadecimals number string to method, return converted base 10",
              "fullTitle": "Test toFinite.js function Give Hexadecimals number string to method, return converted base 10",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal((0, _toFinite[\"default\"])('0xabcdef'), 11259375);",
              "err": {},
              "uuid": "30616a66-448b-4e54-b91c-abe2009209d1",
              "parentUUID": "0ad3a267-a374-431d-898e-a1ece54b21e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid number to method, return number type and same value",
              "fullTitle": "Test toFinite.js function Give valid number to method, return number type and same value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toFinite[\"default\"])(3.44532);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 3.44532);",
              "err": {},
              "uuid": "0ca80402-f4d7-43c8-955b-3c28d2d5647e",
              "parentUUID": "0ad3a267-a374-431d-898e-a1ece54b21e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give maximum int value to method, return number type and converted value",
              "fullTitle": "Test toFinite.js function Give maximum int value to method, return number type and converted value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toFinite[\"default\"])(Infinity);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 1.7976931348623157e+308);",
              "err": {},
              "uuid": "a11e2222-e0bf-46ea-8726-df2c14e955d9",
              "parentUUID": "0ad3a267-a374-431d-898e-a1ece54b21e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a07c0aa0-d111-4d55-92ae-f6f41868b4fe",
            "9535b02e-a50c-43b7-b692-c3c45a911161",
            "6cf7907f-e003-4d65-83c8-5d58b5390f68",
            "30616a66-448b-4e54-b91c-abe2009209d1",
            "0ca80402-f4d7-43c8-955b-3c28d2d5647e",
            "a11e2222-e0bf-46ea-8726-df2c14e955d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8c3a5345-e3ac-42a3-b07a-744086750b40",
          "title": "Test toNumber.js function",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/toNumber.test.js",
          "file": "/tests/toNumber.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return NAN",
              "fullTitle": "Test toNumber.js function Give null to method, return NAN",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])(null)).to.be.NaN;",
              "err": {
                "message": "AssertionError: expected 0 to be NaN",
                "estack": "AssertionError: expected 0 to be NaN\n    at Context.<anonymous> (tests/toNumber.test.js:11:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "a837e82f-a142-4e02-a6cc-f356d1950ac0",
              "parentUUID": "8c3a5345-e3ac-42a3-b07a-744086750b40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, return NaN",
              "fullTitle": "Test toNumber.js function Give undefined to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])(undefined)).to.be.NaN;",
              "err": {},
              "uuid": "d9ee8640-defc-472d-81d8-944d75d9101d",
              "parentUUID": "8c3a5345-e3ac-42a3-b07a-744086750b40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give invalid number string to method, return NaN",
              "fullTitle": "Test toNumber.js function Give invalid number string to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])('Hello world!')).to.be.NaN;",
              "err": {},
              "uuid": "3d6ac180-b11d-4dc0-a1ac-3a8155b442c7",
              "parentUUID": "8c3a5345-e3ac-42a3-b07a-744086750b40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give Hexadecimals number string to method, return converted base 10",
              "fullTitle": "Test toNumber.js function Give Hexadecimals number string to method, return converted base 10",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal((0, _toNumber[\"default\"])('0xabcdef'), 11259375);",
              "err": {},
              "uuid": "76245bf7-0175-4929-9b30-a34332895a3d",
              "parentUUID": "8c3a5345-e3ac-42a3-b07a-744086750b40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid number string to method, return number type and same value",
              "fullTitle": "Test toNumber.js function Give valid number string to method, return number type and same value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toNumber[\"default\"])(500);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 500);",
              "err": {},
              "uuid": "adc8dd54-bb9a-4718-a8e0-8effbda7f927",
              "parentUUID": "8c3a5345-e3ac-42a3-b07a-744086750b40",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d9ee8640-defc-472d-81d8-944d75d9101d",
            "3d6ac180-b11d-4dc0-a1ac-3a8155b442c7",
            "76245bf7-0175-4929-9b30-a34332895a3d",
            "adc8dd54-bb9a-4718-a8e0-8effbda7f927"
          ],
          "failures": [
            "a837e82f-a142-4e02-a6cc-f356d1950ac0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "58909b54-e725-4029-9ffe-e8ec0d36dd89",
          "title": "toString test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/toString.test.js",
          "file": "/tests/toString.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should preserved -0",
              "fullTitle": "toString test should preserved -0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(-0)).to.equal('-0');",
              "err": {},
              "uuid": "66cb3c39-510f-47a9-9740-e65791c1b582",
              "parentUUID": "58909b54-e725-4029-9ffe-e8ec0d36dd89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert array into a string",
              "fullTitle": "toString test should convert array into a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])([1, 2, 3])).to.equal('1,2,3');",
              "err": {},
              "uuid": "b34c85e9-9cb9-483c-8131-19551bfeab3d",
              "parentUUID": "58909b54-e725-4029-9ffe-e8ec0d36dd89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, undefined, boolean, NaN",
              "fullTitle": "toString test should not return string for null, undefined, boolean, NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(null)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(true)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(NaN)).to.not.equal('string');",
              "err": {},
              "uuid": "bcc64f4e-e41f-444e-bde2-720b9a975ad0",
              "parentUUID": "58909b54-e725-4029-9ffe-e8ec0d36dd89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return string for number, object, string",
              "fullTitle": "toString test should return string for number, object, string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(123)).to.be.a('string');\nexpect((0, _toString[\"default\"])({\n  'a': 1\n})).to.be.a('string');\nexpect((0, _toString[\"default\"])('abc')).to.be.a('string');",
              "err": {},
              "uuid": "efbc9e66-ad28-42c5-aaaa-80033fb82fd7",
              "parentUUID": "58909b54-e725-4029-9ffe-e8ec0d36dd89",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "66cb3c39-510f-47a9-9740-e65791c1b582",
            "b34c85e9-9cb9-483c-8131-19551bfeab3d",
            "bcc64f4e-e41f-444e-bde2-720b9a975ad0",
            "efbc9e66-ad28-42c5-aaaa-80033fb82fd7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c37a473b-91db-442f-97c0-1fa9ad3a0e3d",
          "title": "upperFirst test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/upperFirst.test.js",
          "file": "/tests/upperFirst.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert fred into Fred",
              "fullTitle": "upperFirst test should convert fred into Fred",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])('fred')).to.equal('Fred');",
              "err": {},
              "uuid": "f707bdf0-2ac6-46b9-8063-bdb6e854e46d",
              "parentUUID": "c37a473b-91db-442f-97c0-1fa9ad3a0e3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert FRED into FRED",
              "fullTitle": "upperFirst test should convert FRED into FRED",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])('FRED')).to.equal('FRED');",
              "err": {},
              "uuid": "416e0cd0-ee03-450c-b44c-2a2be8bd6006",
              "parentUUID": "c37a473b-91db-442f-97c0-1fa9ad3a0e3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "upperFirst should return string",
              "fullTitle": "upperFirst test upperFirst should return string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _upperFirst[\"default\"])('fred');\nexpect(result).to.be.a('string');",
              "err": {},
              "uuid": "3e6d55ca-ebad-4485-8d1f-0b70133327c6",
              "parentUUID": "c37a473b-91db-442f-97c0-1fa9ad3a0e3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, undefined, NaN",
              "fullTitle": "upperFirst test should not return string for null, undefined, NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])(null)).to.not.equal('string');\nexpect((0, _upperFirst[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _upperFirst[\"default\"])(NaN)).to.not.equal('string');",
              "err": {},
              "uuid": "198529ac-3856-4160-b3e7-e4009ef20ded",
              "parentUUID": "c37a473b-91db-442f-97c0-1fa9ad3a0e3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f707bdf0-2ac6-46b9-8063-bdb6e854e46d",
            "416e0cd0-ee03-450c-b44c-2a2be8bd6006",
            "3e6d55ca-ebad-4485-8d1f-0b70133327c6",
            "198529ac-3856-4160-b3e7-e4009ef20ded"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fee981c8-5b9c-40bd-b6e9-5e4004710a22",
          "title": "Test word.js function",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/words.test.js",
          "file": "/tests/words.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, method is failed because match method of String is missing",
              "fullTitle": "Test word.js function Give null to method, method is failed because match method of String is missing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function () {\n  (0, _words[\"default\"])(null, null);\n}).to[\"throw\"](TypeError);",
              "err": {},
              "uuid": "c436b9c0-da13-40e0-b776-cdb7d64491a2",
              "parentUUID": "fee981c8-5b9c-40bd-b6e9-5e4004710a22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, method is failed because match method of String is missing",
              "fullTitle": "Test word.js function Give undefined to method, method is failed because match method of String is missing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function () {\n  (0, _words[\"default\"])(undefined, null);\n}).to[\"throw\"](TypeError);",
              "err": {},
              "uuid": "6a3f174a-191e-422d-9abe-94285b85bd82",
              "parentUUID": "fee981c8-5b9c-40bd-b6e9-5e4004710a22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give empty string without pattern, return empty array",
              "fullTitle": "Test word.js function Give empty string without pattern, return empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _words[\"default\"])('')).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "44930f72-ee8c-4df7-a1b0-496443d5fe2c",
              "parentUUID": "fee981c8-5b9c-40bd-b6e9-5e4004710a22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give sample valid string, return array with splitted words and remove all special chars",
              "fullTitle": "Test word.js function Give sample valid string, return array with splitted words and remove all special chars",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _words[\"default\"])('abc.a abc abb')).to.be.instanceOf(Array).that.eql(['abc', 'a', 'abc', 'abb']);\nexpect((0, _words[\"default\"])('abc.a a,bc ab|b')).to.be.instanceOf(Array).that.eql(['abc', 'a', 'a', 'bc', 'ab', 'b']);",
              "err": {},
              "uuid": "f38cd60c-ee9f-4b12-b9df-96cd9a91547e",
              "parentUUID": "fee981c8-5b9c-40bd-b6e9-5e4004710a22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give sample valid string, return array with splitted words match patterns",
              "fullTitle": "Test word.js function Give sample valid string, return array with splitted words match patterns",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var SPLIT_WORDS_BY_SPACE_AND_COMMA = /[^, ]+/g;\nexpect((0, _words[\"default\"])('abc.a ab,c abb', SPLIT_WORDS_BY_SPACE_AND_COMMA)).to.be.instanceOf(Array).that.eql(['abc.a', 'ab', 'c', 'abb']);",
              "err": {},
              "uuid": "da247493-fce2-492a-825e-c1daefcee27d",
              "parentUUID": "fee981c8-5b9c-40bd-b6e9-5e4004710a22",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c436b9c0-da13-40e0-b776-cdb7d64491a2",
            "6a3f174a-191e-422d-9abe-94285b85bd82",
            "44930f72-ee8c-4df7-a1b0-496443d5fe2c",
            "f38cd60c-ee9f-4b12-b9df-96cd9a91547e",
            "da247493-fce2-492a-825e-c1daefcee27d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportFilename": "index"
      },
      "version": "5.1.0"
    }
  }
}