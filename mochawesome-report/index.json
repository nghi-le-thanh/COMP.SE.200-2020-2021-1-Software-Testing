{
  "stats": {
    "suites": 38,
    "tests": 172,
    "passes": 116,
    "pending": 0,
    "failures": 56,
    "start": "2020-12-03T20:43:05.621Z",
    "end": "2020-12-03T20:43:05.750Z",
    "duration": 129,
    "testsRegistered": 172,
    "passPercent": 67.44186046511628,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "38a0d04b-fc6d-4a77-9627-ed9016741559",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7cd16d77-9f0b-419c-bb0a-25caed8c7571",
          "title": "add.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/add.test.js",
          "file": "/tests/add.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1 + 2 should return 3",
              "fullTitle": "add.js test 1 + 2 should return 3",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(1, 2)).to.equal(3);",
              "err": {},
              "uuid": "66ba51b9-989f-4cd0-ba66-3325935c6e2b",
              "parentUUID": "7cd16d77-9f0b-419c-bb0a-25caed8c7571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "'1' + 5 should return 6, number type",
              "fullTitle": "add.js test '1' + 5 should return 6, number type",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])('1', 5)).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:13:32)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "d6fbe791-ecc8-4c21-afb3-11a5231b9387",
              "parentUUID": "7cd16d77-9f0b-419c-bb0a-25caed8c7571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "'1' + '5' should return 6, number type",
              "fullTitle": "add.js test '1' + '5' should return 6, number type",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])('1', '5')).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:18:34)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "104178ff-0c45-430d-a58e-3c3f2a35a2be",
              "parentUUID": "7cd16d77-9f0b-419c-bb0a-25caed8c7571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "1 + '5' should return 6, number type",
              "fullTitle": "add.js test 1 + '5' should return 6, number type",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(1, '5')).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:23:32)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "cf60ee6f-e6ac-4969-9ddd-5dfadb7bebd7",
              "parentUUID": "7cd16d77-9f0b-419c-bb0a-25caed8c7571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null + 5 should return 5",
              "fullTitle": "add.js test null + 5 should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(null, 5)).to.equal(5);",
              "err": {},
              "uuid": "533ad217-d41b-4672-b4a6-3bcb604e64a6",
              "parentUUID": "7cd16d77-9f0b-419c-bb0a-25caed8c7571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "5 + undefined should return 5",
              "fullTitle": "add.js test 5 + undefined should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(5, undefined)).to.equal(5);",
              "err": {},
              "uuid": "76fc7ab3-9736-4085-b450-0eb3e3d10b9d",
              "parentUUID": "7cd16d77-9f0b-419c-bb0a-25caed8c7571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null + undefined should return",
              "fullTitle": "add.js test null + undefined should return",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(null, undefined)).to.equal(0);",
              "err": {
                "message": "AssertionError: expected null to equal 0",
                "estack": "AssertionError: expected null to equal 0\n    at Context.<anonymous> (tests/add.test.js:36:41)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "a9ba4756-810c-41fc-8751-64221a968da7",
              "parentUUID": "7cd16d77-9f0b-419c-bb0a-25caed8c7571",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "66ba51b9-989f-4cd0-ba66-3325935c6e2b",
            "533ad217-d41b-4672-b4a6-3bcb604e64a6",
            "76fc7ab3-9736-4085-b450-0eb3e3d10b9d"
          ],
          "failures": [
            "d6fbe791-ecc8-4c21-afb3-11a5231b9387",
            "104178ff-0c45-430d-a58e-3c3f2a35a2be",
            "cf60ee6f-e6ac-4969-9ddd-5dfadb7bebd7",
            "a9ba4756-810c-41fc-8751-64221a968da7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a626f03e-4402-4894-8ee0-7746bf81b7a1",
          "title": "Test at.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/at.test.js",
          "file": "/tests/at.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return empty array",
              "fullTitle": "Test at.js function Give null to method, return empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(null)).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "564df0f4-11d2-4b4a-af81-1f37eed49b0b",
              "parentUUID": "a626f03e-4402-4894-8ee0-7746bf81b7a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method with correct path, return empty array",
              "fullTitle": "Test at.js function Give undefined to method with correct path, return empty array",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(undefined, ['title'])).to.be.instanceOf(Array).that.eql([]);",
              "err": {
                "message": "AssertionError: expected [ undefined ] to deeply equal []",
                "estack": "AssertionError: expected [ undefined ] to deeply equal []\n    at Context.<anonymous> (tests/at.test.js:24:71)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- [\n-   [undefined]\n- ]\n+ []\n"
              },
              "uuid": "cf9477df-53a3-4ca9-a71b-2b41c09b07ed",
              "parentUUID": "a626f03e-4402-4894-8ee0-7746bf81b7a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, return empty array",
              "fullTitle": "Test at.js function Give valid to method, return empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT)).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "0b99e2a1-9f86-4f57-9cad-0a4adf54cc38",
              "parentUUID": "a626f03e-4402-4894-8ee0-7746bf81b7a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, with correct path. Return valid result",
              "fullTitle": "Test at.js function Give valid to method, with correct path. Return valid result",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT, ['title'])).to.be.instanceOf(Array).that.eql([VALID_OBJECT.title]);",
              "err": {},
              "uuid": "b8d67912-db9b-4fc1-a690-52ba2262b3ee",
              "parentUUID": "a626f03e-4402-4894-8ee0-7746bf81b7a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, with correct paths. Return valid results",
              "fullTitle": "Test at.js function Give valid to method, with correct paths. Return valid results",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT, ['title', 'tags[0]'])).to.be.instanceOf(Array).that.eql([VALID_OBJECT.title, VALID_OBJECT.tags[0]]);",
              "err": {},
              "uuid": "ec9c23ef-1281-4299-a3ae-0226dcc12577",
              "parentUUID": "a626f03e-4402-4894-8ee0-7746bf81b7a1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "564df0f4-11d2-4b4a-af81-1f37eed49b0b",
            "0b99e2a1-9f86-4f57-9cad-0a4adf54cc38",
            "b8d67912-db9b-4fc1-a690-52ba2262b3ee",
            "ec9c23ef-1281-4299-a3ae-0226dcc12577"
          ],
          "failures": [
            "cf9477df-53a3-4ca9-a71b-2b41c09b07ed"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2e8eb8bc-528d-41eb-a285-12da33ba4f23",
          "title": "camelCase.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/camelCase.test.js",
          "file": "/tests/camelCase.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test assigning an object to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning an object to the method. Expect an empty string",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])({\n  foo: 'bar'\n}), '');",
              "err": {
                "message": "AssertionError: expected ' objectObject' to equal ''",
                "estack": "AssertionError: expected ' objectObject' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:9:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  objectObject\n"
              },
              "uuid": "e8176146-bbbb-434a-8343-cc43c0b3d6f4",
              "parentUUID": "2e8eb8bc-528d-41eb-a285-12da33ba4f23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning null to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning null to the method. Expect an empty string",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(null), '');",
              "err": {
                "message": "AssertionError: expected ' null' to equal ''",
                "estack": "AssertionError: expected ' null' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:14:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  null\n"
              },
              "uuid": "eaffdd50-4d59-4854-b2df-00f0b6433d69",
              "parentUUID": "2e8eb8bc-528d-41eb-a285-12da33ba4f23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning undefined to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning undefined to the method. Expect an empty string",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(undefined), '');",
              "err": {
                "message": "AssertionError: expected ' undefined' to equal ''",
                "estack": "AssertionError: expected ' undefined' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:19:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  undefined\n"
              },
              "uuid": "8b8e7c8e-c9e7-46b1-b711-5579d5dbfe31",
              "parentUUID": "2e8eb8bc-528d-41eb-a285-12da33ba4f23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning true to the method. Expect boolean in lowercase",
              "fullTitle": "camelCase.js test Test assigning true to the method. Expect boolean in lowercase",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(true), 'true');",
              "err": {
                "message": "AssertionError: expected ' true' to equal 'true'",
                "estack": "AssertionError: expected ' true' to equal 'true'\n    at Context.<anonymous> (tests/camelCase.test.js:24:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  true\n+ true\n"
              },
              "uuid": "730afd98-1f26-461d-af40-9947cf2e540a",
              "parentUUID": "2e8eb8bc-528d-41eb-a285-12da33ba4f23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning valid string to the method. Expect correctly converted value",
              "fullTitle": "camelCase.js test Test assigning valid string to the method. Expect correctly converted value",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])('hello world'), 'helloWorld');",
              "err": {
                "message": "AssertionError: expected ' helloWorld' to equal 'helloWorld'",
                "estack": "AssertionError: expected ' helloWorld' to equal 'helloWorld'\n    at Context.<anonymous> (tests/camelCase.test.js:29:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  helloWorld\n+ helloWorld\n"
              },
              "uuid": "fc46abaa-f951-492c-97c6-3d5017f44e30",
              "parentUUID": "2e8eb8bc-528d-41eb-a285-12da33ba4f23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning valid string with special chars to the method. Expect correctly converted value",
              "fullTitle": "camelCase.js test Test assigning valid string with special chars to the method. Expect correctly converted value",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])('___hello-world! assignment^'), 'helloWorldAssignment');",
              "err": {
                "message": "AssertionError: expected ' helloWorldAssignment' to equal 'helloWorldAssignment'",
                "estack": "AssertionError: expected ' helloWorldAssignment' to equal 'helloWorldAssignment'\n    at Context.<anonymous> (tests/camelCase.test.js:34:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  helloWorldAssignment\n+ helloWorldAssignment\n"
              },
              "uuid": "a6320e81-6c46-4fc0-9ce7-d22f3770c280",
              "parentUUID": "2e8eb8bc-528d-41eb-a285-12da33ba4f23",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e8176146-bbbb-434a-8343-cc43c0b3d6f4",
            "eaffdd50-4d59-4854-b2df-00f0b6433d69",
            "8b8e7c8e-c9e7-46b1-b711-5579d5dbfe31",
            "730afd98-1f26-461d-af40-9947cf2e540a",
            "fc46abaa-f951-492c-97c6-3d5017f44e30",
            "a6320e81-6c46-4fc0-9ce7-d22f3770c280"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a7895fef-109b-46c0-895e-2762f807eb20",
          "title": "capitalize test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/capitalize.test.js",
          "file": "/tests/capitalize.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert FRED into Fred",
              "fullTitle": "capitalize test should convert FRED into Fred",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])('FRED')).to.equal('Fred');",
              "err": {},
              "uuid": "aeeae2e9-66db-49db-a688-6380cb8dbd3f",
              "parentUUID": "a7895fef-109b-46c0-895e-2762f807eb20",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "capitalize should return string",
              "fullTitle": "capitalize test capitalize should return string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _capitalize[\"default\"])('fred');\nexpect(result).to.be.a('string');",
              "err": {},
              "uuid": "52d8d866-5a5a-4546-892b-3add28092053",
              "parentUUID": "a7895fef-109b-46c0-895e-2762f807eb20",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, boolean, undefined, number",
              "fullTitle": "capitalize test should not return string for null, boolean, undefined, number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])(null)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(true)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(123)).to.not.equal('string');",
              "err": {},
              "uuid": "a05f0d06-e58c-4236-abd1-62539a7f465a",
              "parentUUID": "a7895fef-109b-46c0-895e-2762f807eb20",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aeeae2e9-66db-49db-a688-6380cb8dbd3f",
            "52d8d866-5a5a-4546-892b-3add28092053",
            "a05f0d06-e58c-4236-abd1-62539a7f465a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6dc336c3-06e4-40a9-a42c-a2987794aa7c",
          "title": "castArray.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/castArray.test.js",
          "file": "/tests/castArray.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cast null should return array with null as first item",
              "fullTitle": "castArray.js test cast null should return array with null as first item",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual([null], (0, _castArray[\"default\"])(null));",
              "err": {},
              "uuid": "0191edcc-b4ce-4e51-892b-6b1f42233401",
              "parentUUID": "6dc336c3-06e4-40a9-a42c-a2987794aa7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast undefined should return array with undefined as first item",
              "fullTitle": "castArray.js test cast undefined should return array with undefined as first item",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual([undefined], (0, _castArray[\"default\"])(undefined));",
              "err": {},
              "uuid": "771d45cc-cb27-4a1a-873c-557c6e73a489",
              "parentUUID": "6dc336c3-06e4-40a9-a42c-a2987794aa7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast nothing should return an empty array",
              "fullTitle": "castArray.js test cast nothing should return an empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.deepEqual([], (0, _castArray[\"default\"])());\n} catch (error) {\n  console.warn('Fail test cast nothing should return an empty array. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "f6ca9ef0-b02d-4129-824a-489dd2e2bebd",
              "parentUUID": "6dc336c3-06e4-40a9-a42c-a2987794aa7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast parameters 1, 'a', 5 should return an array [1, 'a', 5] ",
              "fullTitle": "castArray.js test cast parameters 1, 'a', 5 should return an array [1, 'a', 5] ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.deepEqual((0, _castArray[\"default\"])(1, 'a', 5), [1, 'a', 5]);\n} catch (error) {\n  console.warn('Fail cast parameters 1, \\'a\\', 5 should return an array [1, \\'a\\', 5]. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "4ffdd622-0709-4923-86ad-259a4b7f50a1",
              "parentUUID": "6dc336c3-06e4-40a9-a42c-a2987794aa7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast a parameter 'abc' should return an array ['abc'] ",
              "fullTitle": "castArray.js test cast a parameter 'abc' should return an array ['abc'] ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _castArray[\"default\"])('abc'), ['abc']);",
              "err": {},
              "uuid": "97de3ea5-878a-44ad-a80e-898b791d8856",
              "parentUUID": "6dc336c3-06e4-40a9-a42c-a2987794aa7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast a parameter {foo: 'abc'} should return an array [{foo: 'abc'}] ",
              "fullTitle": "castArray.js test cast a parameter {foo: 'abc'} should return an array [{foo: 'abc'}] ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _castArray[\"default\"])({\n  foo: 'abc'\n}), [{\n  foo: 'abc'\n}]);",
              "err": {},
              "uuid": "d83ef66b-fa6b-4640-8828-520f3a5d49a8",
              "parentUUID": "6dc336c3-06e4-40a9-a42c-a2987794aa7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast parameters (3, [2, 3]) should return an array [3, 2, 3]",
              "fullTitle": "castArray.js test cast parameters (3, [2, 3]) should return an array [3, 2, 3]",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.deepEqual((0, _castArray[\"default\"])(3, [2, 3]), [3, 2, 3]);\n} catch (error) {\n  console.warn('Fail test cast parameters (3, [2, 3]) should return an array [3, 2, 3]. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "4e9dc1ce-e8d2-4810-a9c1-ed97c3b733d2",
              "parentUUID": "6dc336c3-06e4-40a9-a42c-a2987794aa7c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0191edcc-b4ce-4e51-892b-6b1f42233401",
            "771d45cc-cb27-4a1a-873c-557c6e73a489",
            "f6ca9ef0-b02d-4129-824a-489dd2e2bebd",
            "4ffdd622-0709-4923-86ad-259a4b7f50a1",
            "97de3ea5-878a-44ad-a80e-898b791d8856",
            "d83ef66b-fa6b-4640-8828-520f3a5d49a8",
            "4e9dc1ce-e8d2-4810-a9c1-ed97c3b733d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8c79419d-0ca3-49ab-bb9b-6116fd0ddc12",
          "title": "ceil test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/ceil.test.js",
          "file": "/tests/ceil.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "4.006 with precision 0 should return 5",
              "fullTitle": "ceil test 4.006 with precision 0 should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(4.006)).to.equal(5);",
              "err": {},
              "uuid": "94667846-3930-47bb-8022-7745c712a92b",
              "parentUUID": "8c79419d-0ca3-49ab-bb9b-6116fd0ddc12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6.004 with precision 2 should return 6.01",
              "fullTitle": "ceil test 6.004 with precision 2 should return 6.01",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(6.004, 2)).to.equal(6.01);",
              "err": {},
              "uuid": "642d013d-8661-44de-9841-600d2ede3dac",
              "parentUUID": "8c79419d-0ca3-49ab-bb9b-6116fd0ddc12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6040 with precision -2 should return 6100",
              "fullTitle": "ceil test 6040 with precision -2 should return 6100",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(6040, -2)).to.equal(6100);",
              "err": {},
              "uuid": "fac0c2b2-12d5-4be2-9cb6-adc60d803c2b",
              "parentUUID": "8c79419d-0ca3-49ab-bb9b-6116fd0ddc12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "passing null, undefined, NaN, string should not give results",
              "fullTitle": "ceil test passing null, undefined, NaN, string should not give results",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(null)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])(undefined)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])(NaN)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])('abc')).to.not.equal('number');",
              "err": {},
              "uuid": "124b054e-0d67-4e51-8101-6d73a27b1d5a",
              "parentUUID": "8c79419d-0ca3-49ab-bb9b-6116fd0ddc12",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "94667846-3930-47bb-8022-7745c712a92b",
            "642d013d-8661-44de-9841-600d2ede3dac",
            "fac0c2b2-12d5-4be2-9cb6-adc60d803c2b",
            "124b054e-0d67-4e51-8101-6d73a27b1d5a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e99a8e25-7e2a-4de2-9161-8b2c6d8d92e3",
          "title": "chunk.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/chunk.test.js",
          "file": "/tests/chunk.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "chunk a valid array with zero size, expect return unchanged array",
              "fullTitle": "chunk.js test chunk a valid array with zero size, expect return unchanged array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.deepEqual((0, _chunk[\"default\"])([1, 2, 3], 0), [1, 2, 3]);\n} catch (error) {\n  console.warn('Fail test chunk a valid array with zero size, expect return unchanged array. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "141ad170-1fda-4f8e-ac51-09f2360231a1",
              "parentUUID": "e99a8e25-7e2a-4de2-9161-8b2c6d8d92e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk a valid array with negavitve size, expect empty array",
              "fullTitle": "chunk.js test chunk a valid array with negavitve size, expect empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _chunk[\"default\"])([1, 2, 3], -100.55), []);",
              "err": {},
              "uuid": "dd79e0ec-c655-45ce-aa66-33a9c0cf04fa",
              "parentUUID": "e99a8e25-7e2a-4de2-9161-8b2c6d8d92e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk an empty array with valid size, expect empty array",
              "fullTitle": "chunk.js test chunk an empty array with valid size, expect empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _chunk[\"default\"])([], 10), []);",
              "err": {},
              "uuid": "dd489e9c-a6a3-44b2-99be-3fadc757d230",
              "parentUUID": "e99a8e25-7e2a-4de2-9161-8b2c6d8d92e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk an empty array with negative size, expect empty array",
              "fullTitle": "chunk.js test chunk an empty array with negative size, expect empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _chunk[\"default\"])([], -10), []);",
              "err": {},
              "uuid": "5f890176-6701-4671-8aa8-584766506a75",
              "parentUUID": "e99a8e25-7e2a-4de2-9161-8b2c6d8d92e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk invalid type with valid size, expect thrown error",
              "fullTitle": "chunk.js test chunk invalid type with valid size, expect thrown error",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert[\"throws\"](function () {\n    (0, _chunk[\"default\"])(\"hello world\", 2);\n  }, 'Invalid input');\n} catch (error) {\n  console.warn('chunk invalid type with valid size, expect thrown error. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "4bb6db25-18d1-4464-86e5-410bee6fd91c",
              "parentUUID": "e99a8e25-7e2a-4de2-9161-8b2c6d8d92e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk valid type with valid size, expect valid sub arrays",
              "fullTitle": "chunk.js test chunk valid type with valid size, expect valid sub arrays",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.deepEqual((0, _chunk[\"default\"])(['foo', 'doctor', 'hello'], 2), [['foo', 'doctor'], ['hello']]);\n} catch (error) {\n  console.warn('Unexpected fail test chunk valid type with valid size, expect valid sub arrays. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "e176bcf4-4112-4e0e-9f7f-e7869e949566",
              "parentUUID": "e99a8e25-7e2a-4de2-9161-8b2c6d8d92e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "141ad170-1fda-4f8e-ac51-09f2360231a1",
            "dd79e0ec-c655-45ce-aa66-33a9c0cf04fa",
            "dd489e9c-a6a3-44b2-99be-3fadc757d230",
            "5f890176-6701-4671-8aa8-584766506a75",
            "4bb6db25-18d1-4464-86e5-410bee6fd91c",
            "e176bcf4-4112-4e0e-9f7f-e7869e949566"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "37cb09b1-b754-41ac-b706-13fc02020783",
          "title": "clamp.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/clamp.test.js",
          "file": "/tests/clamp.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "clamp null in range, should throw error",
              "fullTitle": "clamp.js test clamp null in range, should throw error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _clamp[\"default\"])(null, 1, 10);\n}, 'Invalid Argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/clamp.test.js:8:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "7b4f63c7-615b-46e8-9d4a-5251b6aca035",
              "parentUUID": "37cb09b1-b754-41ac-b706-13fc02020783",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clamp undefined in range, should throw error",
              "fullTitle": "clamp.js test clamp undefined in range, should throw error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _clamp[\"default\"])(undefined, 1, 10);\n}, 'Invalid Argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/clamp.test.js:14:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "a90dff54-2391-43b2-a8a2-cc88cb892a88",
              "parentUUID": "37cb09b1-b754-41ac-b706-13fc02020783",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clamp without parameters, should throw error",
              "fullTitle": "clamp.js test clamp without parameters, should throw error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _clamp[\"default\"])();\n}, 'Invalid Argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/clamp.test.js:20:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "7b81ae11-cba5-4f62-adec-af34df45874d",
              "parentUUID": "37cb09b1-b754-41ac-b706-13fc02020783",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clamp number in incorrect range, should thrown error",
              "fullTitle": "clamp.js test clamp number in incorrect range, should thrown error",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _clamp[\"default\"])(10, 100, 1);\n}, 'Invalid Range');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/clamp.test.js:26:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "4b731ccd-5336-4db7-8561-c96833541e88",
              "parentUUID": "37cb09b1-b754-41ac-b706-13fc02020783",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clamp number in range without lower, should thrown error",
              "fullTitle": "clamp.js test clamp number in range without lower, should thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _clamp[\"default\"])(10, null, 1);\n}, 'Invalid Range');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/clamp.test.js:32:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "52f354e3-d42d-4339-96bc-f259751f7fc7",
              "parentUUID": "37cb09b1-b754-41ac-b706-13fc02020783",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clamp number in range without upper, should thrown error",
              "fullTitle": "clamp.js test clamp number in range without upper, should thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _clamp[\"default\"])(10, 1);\n}, 'Invalid Range');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/clamp.test.js:38:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "15ea6111-b73d-46ff-a1fa-f3fa6914b0da",
              "parentUUID": "37cb09b1-b754-41ac-b706-13fc02020783",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clamp number in range, return number itself",
              "fullTitle": "clamp.js test clamp number in range, return number itself",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _clamp[\"default\"])(42, 0, 1337), 42);",
              "err": {
                "message": "AssertionError: expected 0 to equal 42",
                "estack": "AssertionError: expected 0 to equal 42\n    at Context.<anonymous> (tests/clamp.test.js:44:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- 0\n+ 42\n"
              },
              "uuid": "929e48ea-5fad-469b-a463-507ead7cfe24",
              "parentUUID": "37cb09b1-b754-41ac-b706-13fc02020783",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clamp number less than range, return range lowest number",
              "fullTitle": "clamp.js test clamp number less than range, return range lowest number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _clamp[\"default\"])(42, 1337, 9000), 1337);",
              "err": {},
              "uuid": "4309a78b-a579-4819-9af4-e759b251a017",
              "parentUUID": "37cb09b1-b754-41ac-b706-13fc02020783",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clamp number greater than range, return range largest number",
              "fullTitle": "clamp.js test clamp number greater than range, return range largest number",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _clamp[\"default\"])(42, 0, 10), 10);",
              "err": {
                "message": "AssertionError: expected 0 to equal 10",
                "estack": "AssertionError: expected 0 to equal 10\n    at Context.<anonymous> (tests/clamp.test.js:52:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- 0\n+ 10\n"
              },
              "uuid": "2585bb26-163e-4229-999e-0c1809bbd779",
              "parentUUID": "37cb09b1-b754-41ac-b706-13fc02020783",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4309a78b-a579-4819-9af4-e759b251a017"
          ],
          "failures": [
            "7b4f63c7-615b-46e8-9d4a-5251b6aca035",
            "a90dff54-2391-43b2-a8a2-cc88cb892a88",
            "7b81ae11-cba5-4f62-adec-af34df45874d",
            "4b731ccd-5336-4db7-8561-c96833541e88",
            "52f354e3-d42d-4339-96bc-f259751f7fc7",
            "15ea6111-b73d-46ff-a1fa-f3fa6914b0da",
            "929e48ea-5fad-469b-a463-507ead7cfe24",
            "2585bb26-163e-4229-999e-0c1809bbd779"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e578b3d9-07ed-4b5e-88f4-c99ccd1265e2",
          "title": "compact.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/compact.test.js",
          "file": "/tests/compact.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "compact an empty array, return empty array",
              "fullTitle": "compact.js test compact an empty array, return empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _compact[\"default\"])([]), []);",
              "err": {},
              "uuid": "016280f9-705a-4736-ac8d-a4d0eb89929b",
              "parentUUID": "e578b3d9-07ed-4b5e-88f4-c99ccd1265e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "compact null, expect throws error",
              "fullTitle": "compact.js test compact null, expect throws error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throw\"](function () {\n  (0, _compact[\"default\"])(null);\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'object null is not iterable (cannot read property Symbol(Symbol.iterator))'",
                "estack": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'object null is not iterable (cannot read property Symbol(Symbol.iterator))'\n    at Context.<anonymous> (tests/compact.test.js:13:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- object null is not iterable (cannot read property Symbol(Symbol.iterator))\n+ Invalid argument\n"
              },
              "uuid": "c3bb1a98-e7f5-42d0-b637-7829c960c235",
              "parentUUID": "e578b3d9-07ed-4b5e-88f4-c99ccd1265e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "compact undefined, expect throws error",
              "fullTitle": "compact.js test compact undefined, expect throws error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throw\"](function () {\n  (0, _compact[\"default\"])(undefined);\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'undefined is not iterable (cannot read property Symbol(Symbol.iterator))'",
                "estack": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'undefined is not iterable (cannot read property Symbol(Symbol.iterator))'\n    at Context.<anonymous> (tests/compact.test.js:19:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- undefined is not iterable (cannot read property Symbol(Symbol.iterator))\n+ Invalid argument\n"
              },
              "uuid": "4d660d50-8fbd-44a0-b93e-2339178e770d",
              "parentUUID": "e578b3d9-07ed-4b5e-88f4-c99ccd1265e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "compact string, expect throws error",
              "fullTitle": "compact.js test compact string, expect throws error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throw\"](function () {\n  (0, _compact[\"default\"])(\"Hello\");\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/compact.test.js:25:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "46f87ed8-a5d7-4f3e-9d5f-8022c6549b2b",
              "parentUUID": "e578b3d9-07ed-4b5e-88f4-c99ccd1265e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "compact object, expect throws error",
              "fullTitle": "compact.js test compact object, expect throws error",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throw\"](function () {\n  (0, _compact[\"default\"])({\n    foo: 'bar'\n  });\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'",
                "estack": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'\n    at Context.<anonymous> (tests/compact.test.js:31:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- Invalid attempt to iterate non-iterable instance.\n- In order to be iterable, non-array objects must have a [Symbol.iterator]() method.\n+ Invalid argument\n"
              },
              "uuid": "03dccaf0-fbab-4b38-af07-97d8b0d5ce97",
              "parentUUID": "e578b3d9-07ed-4b5e-88f4-c99ccd1265e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "compact an array with valid and falsey values, return array with valid values",
              "fullTitle": "compact.js test compact an array with valid and falsey values, return array with valid values",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _compact[\"default\"])([123, undefined, 'Hello', null, '', false, {\n  foo: 'bar'\n}, 0, 5.55]), [123, 'Hello', {\n  foo: 'bar'\n}, 5.55]);",
              "err": {
                "message": "AssertionError: expected [ Array(3) ] to deeply equal [ 123, 'Hello', { foo: 'bar' }, 5.55 ]",
                "estack": "AssertionError: expected [ Array(3) ] to deeply equal [ 123, 'Hello', { foo: 'bar' }, 5.55 ]\n    at Context.<anonymous> (tests/compact.test.js:37:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": " [\n+   123\n   \"Hello\"\n   {\n     \"foo\": \"bar\"\n   }\n"
              },
              "uuid": "0903d6f1-e2fd-4031-a93e-ad799d71fc94",
              "parentUUID": "e578b3d9-07ed-4b5e-88f4-c99ccd1265e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "016280f9-705a-4736-ac8d-a4d0eb89929b"
          ],
          "failures": [
            "c3bb1a98-e7f5-42d0-b637-7829c960c235",
            "4d660d50-8fbd-44a0-b93e-2339178e770d",
            "46f87ed8-a5d7-4f3e-9d5f-8022c6549b2b",
            "03dccaf0-fbab-4b38-af07-97d8b0d5ce97",
            "0903d6f1-e2fd-4031-a93e-ad799d71fc94"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "47d6e7e1-6355-4bd3-8017-4d51e410b3a2",
          "title": "countBy.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/countBy.test.js",
          "file": "/tests/countBy.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "countBy a valid array with valid iteratee, expect return compacted object",
              "fullTitle": "countBy.js test countBy a valid array with valid iteratee, expect return compacted object",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var countedObject = (0, _countBy[\"default\"])(USERS, function (user) {\n  return user.active;\n});\nassert.equal(countedObject[\"true\"], 2);\nassert.equal(countedObject[\"false\"], 1);",
              "err": {
                "message": "AssertionError: expected 1 to equal 2",
                "estack": "AssertionError: expected 1 to equal 2\n    at Context.<anonymous> (tests/countBy.test.js:15:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- 1\n+ 2\n"
              },
              "uuid": "f7ef1cf7-22c4-4412-8a0f-aba2743c8f4e",
              "parentUUID": "47d6e7e1-6355-4bd3-8017-4d51e410b3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "countBy a valid array with invalid iteratee, expect return empty object",
              "fullTitle": "countBy.js test countBy a valid array with invalid iteratee, expect return empty object",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _countBy[\"default\"])(USERS, function (user) {\n  return user.title;\n}), {});",
              "err": {
                "message": "AssertionError: expected { undefined: 2 } to deeply equal {}",
                "estack": "AssertionError: expected { undefined: 2 } to deeply equal {}\n    at Context.<anonymous> (tests/countBy.test.js:20:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- {\n-   \"undefined\": 2\n- }\n+ {}\n"
              },
              "uuid": "064b773e-68f8-46b9-94b3-2359cab9014c",
              "parentUUID": "47d6e7e1-6355-4bd3-8017-4d51e410b3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "countBy a valid array with void return iteratee, expect return empty object",
              "fullTitle": "countBy.js test countBy a valid array with void return iteratee, expect return empty object",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _countBy[\"default\"])(USERS, function (user) {}), {});",
              "err": {
                "message": "AssertionError: expected { undefined: 2 } to deeply equal {}",
                "estack": "AssertionError: expected { undefined: 2 } to deeply equal {}\n    at Context.<anonymous> (tests/countBy.test.js:24:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- {\n-   \"undefined\": 2\n- }\n+ {}\n"
              },
              "uuid": "1935b068-574d-4dce-b551-bec895502bfc",
              "parentUUID": "47d6e7e1-6355-4bd3-8017-4d51e410b3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "countBy a valid array without iterator, expect thrown message",
              "fullTitle": "countBy.js test countBy a valid array without iterator, expect thrown message",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _countBy[\"default\"])(USERS);\n}, 'Invalid Iteratee');",
              "err": {
                "message": "AssertionError: expected [Function] to throw error including 'Invalid Iteratee' but got 'iteratee is not a function'",
                "estack": "AssertionError: expected [Function] to throw error including 'Invalid Iteratee' but got 'iteratee is not a function'\n    at Context.<anonymous> (tests/countBy.test.js:28:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- iteratee is not a function\n+ Invalid Iteratee\n"
              },
              "uuid": "50495d3b-e933-4fcc-906d-b6ab1162380c",
              "parentUUID": "47d6e7e1-6355-4bd3-8017-4d51e410b3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "countBy invalid array with valid iterator, expect thrown message",
              "fullTitle": "countBy.js test countBy invalid array with valid iterator, expect thrown message",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _countBy[\"default\"])(undefined, function (user) {\n    return user.active;\n  });\n}, 'Invalid Argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/countBy.test.js:34:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "f78cff1f-9e96-476e-943f-77d21083eb0a",
              "parentUUID": "47d6e7e1-6355-4bd3-8017-4d51e410b3a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f7ef1cf7-22c4-4412-8a0f-aba2743c8f4e",
            "064b773e-68f8-46b9-94b3-2359cab9014c",
            "1935b068-574d-4dce-b551-bec895502bfc",
            "50495d3b-e933-4fcc-906d-b6ab1162380c",
            "f78cff1f-9e96-476e-943f-77d21083eb0a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ae2cbbfe-3248-4298-93a3-4242cc91753b",
          "title": "defaultTo.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/defaultTo.test.js",
          "file": "/tests/defaultTo.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "defaultTo null, expect return 2nd parameter",
              "fullTitle": "defaultTo.js test defaultTo null, expect return 2nd parameter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _defaultTo[\"default\"])(null, 100), 100);",
              "err": {},
              "uuid": "c64b1800-7861-4ded-a2be-a6596fd5d3f7",
              "parentUUID": "ae2cbbfe-3248-4298-93a3-4242cc91753b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "defaultTo NaN, expect return 2nd parameter",
              "fullTitle": "defaultTo.js test defaultTo NaN, expect return 2nd parameter",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _defaultTo[\"default\"])(NaN, 100), 100);",
              "err": {
                "message": "AssertionError: expected NaN to equal 100",
                "estack": "AssertionError: expected NaN to equal 100\n    at Context.<anonymous> (tests/defaultTo.test.js:12:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- NaN\n+ 100\n"
              },
              "uuid": "0f440a37-e56b-444e-9c2e-dff833e21ca5",
              "parentUUID": "ae2cbbfe-3248-4298-93a3-4242cc91753b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "defaultTo undefined, expect return 2nd parameter",
              "fullTitle": "defaultTo.js test defaultTo undefined, expect return 2nd parameter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _defaultTo[\"default\"])(undefined, 100), 100);",
              "err": {},
              "uuid": "cda946b0-1089-4ce2-98f9-0cef729762bb",
              "parentUUID": "ae2cbbfe-3248-4298-93a3-4242cc91753b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "defaultTo valid 1st parameter , expect return 1st parameter",
              "fullTitle": "defaultTo.js test defaultTo valid 1st parameter , expect return 1st parameter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _defaultTo[\"default\"])('foo', 100), 'foo');",
              "err": {},
              "uuid": "c29d05a9-7b67-4fa3-b650-14fa2574fad1",
              "parentUUID": "ae2cbbfe-3248-4298-93a3-4242cc91753b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c64b1800-7861-4ded-a2be-a6596fd5d3f7",
            "cda946b0-1089-4ce2-98f9-0cef729762bb",
            "c29d05a9-7b67-4fa3-b650-14fa2574fad1"
          ],
          "failures": [
            "0f440a37-e56b-444e-9c2e-dff833e21ca5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8d9636e6-8224-428e-b9ed-e69ef979cf19",
          "title": "defaultToAny.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/defaultToAny.test.js",
          "file": "/tests/defaultToAny.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "defaultToAny null as 1st and 2nd parameters expect return last parameter",
              "fullTitle": "defaultToAny.js test defaultToAny null as 1st and 2nd parameters expect return last parameter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _defaultToAny[\"default\"])(null, null, 100), 100);",
              "err": {},
              "uuid": "af556342-5f5c-4523-bbbe-1c6f33359241",
              "parentUUID": "8d9636e6-8224-428e-b9ed-e69ef979cf19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "defaultToAny NaN, null as 2nd paramter, expect return last parameter",
              "fullTitle": "defaultToAny.js test defaultToAny NaN, null as 2nd paramter, expect return last parameter",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _defaultToAny[\"default\"])(NaN, null, 100), 100);",
              "err": {
                "message": "AssertionError: expected NaN to equal 100",
                "estack": "AssertionError: expected NaN to equal 100\n    at Context.<anonymous> (tests/defaultToAny.test.js:12:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- NaN\n+ 100\n"
              },
              "uuid": "082fd8d5-d78e-4d99-a244-4caf4b880463",
              "parentUUID": "8d9636e6-8224-428e-b9ed-e69ef979cf19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "defaultToAny undefined as 1st parameter, null as 2nd paramter, NaN as 3rd parameter, expect return last parameter",
              "fullTitle": "defaultToAny.js test defaultToAny undefined as 1st parameter, null as 2nd paramter, NaN as 3rd parameter, expect return last parameter",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _defaultToAny[\"default\"])(undefined, null, NaN, 100), 100);",
              "err": {
                "message": "AssertionError: expected NaN to equal 100",
                "estack": "AssertionError: expected NaN to equal 100\n    at Context.<anonymous> (tests/defaultToAny.test.js:16:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- NaN\n+ 100\n"
              },
              "uuid": "3ff19d6f-f06d-45b5-a275-ff69a5eab795",
              "parentUUID": "8d9636e6-8224-428e-b9ed-e69ef979cf19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "defaultToAny valid 1st parameter, return 1st parameter",
              "fullTitle": "defaultToAny.js test defaultToAny valid 1st parameter, return 1st parameter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _defaultToAny[\"default\"])(5.55, null, undefined), 5.55);",
              "err": {},
              "uuid": "4c5fc987-6f1c-437e-9e9f-ce3e79719f31",
              "parentUUID": "8d9636e6-8224-428e-b9ed-e69ef979cf19",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af556342-5f5c-4523-bbbe-1c6f33359241",
            "4c5fc987-6f1c-437e-9e9f-ce3e79719f31"
          ],
          "failures": [
            "082fd8d5-d78e-4d99-a244-4caf4b880463",
            "3ff19d6f-f06d-45b5-a275-ff69a5eab795"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "12dffcae-11f3-4d5f-b42b-2ad3eb9172bf",
          "title": "difference.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/difference.test.js",
          "file": "/tests/difference.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "difference [2, 1] and [2, 3], expect return [1]",
              "fullTitle": "difference.js test difference [2, 1] and [2, 3], expect return [1]",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _difference[\"default\"])([2, 1], [2, 3]), [1]);",
              "err": {},
              "uuid": "12fa0875-24a1-4c32-baa7-6c8044150732",
              "parentUUID": "12dffcae-11f3-4d5f-b42b-2ad3eb9172bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "difference [2, null] and [1, 2, null, 3], expect return []",
              "fullTitle": "difference.js test difference [2, null] and [1, 2, null, 3], expect return []",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _difference[\"default\"])([2, null], [1, 2, null, 3]), []);",
              "err": {},
              "uuid": "cb50269f-1b97-4ddd-902a-19645cd9fa16",
              "parentUUID": "12dffcae-11f3-4d5f-b42b-2ad3eb9172bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "difference [] and [3, 4, 5], expect return []",
              "fullTitle": "difference.js test difference [] and [3, 4, 5], expect return []",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _difference[\"default\"])([], [3, 4, 5]), []);",
              "err": {},
              "uuid": "413f5320-090c-44fd-bca8-3bcdeebd6bee",
              "parentUUID": "12dffcae-11f3-4d5f-b42b-2ad3eb9172bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "difference null and [3, 4, 5], expect return []",
              "fullTitle": "difference.js test difference null and [3, 4, 5], expect return []",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _difference[\"default\"])(null, [3, 4, 5]), []);",
              "err": {},
              "uuid": "7723fc76-1218-47b9-bbcc-fbab3b824af6",
              "parentUUID": "12dffcae-11f3-4d5f-b42b-2ad3eb9172bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "difference undefined and [3, 4, 5], expect return []",
              "fullTitle": "difference.js test difference undefined and [3, 4, 5], expect return []",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _difference[\"default\"])(undefined, [3, 4, 5]), []);",
              "err": {},
              "uuid": "cd700f73-4370-426e-8178-a2931dea5a65",
              "parentUUID": "12dffcae-11f3-4d5f-b42b-2ad3eb9172bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "difference not array type and [3, 4, 5], expect return []",
              "fullTitle": "difference.js test difference not array type and [3, 4, 5], expect return []",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _difference[\"default\"])({\n  foo: 'bar'\n}, [3, 4, 5]), []);",
              "err": {},
              "uuid": "4ea565d0-b51a-4ddf-a8d5-db04dd6981d1",
              "parentUUID": "12dffcae-11f3-4d5f-b42b-2ad3eb9172bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "12fa0875-24a1-4c32-baa7-6c8044150732",
            "cb50269f-1b97-4ddd-902a-19645cd9fa16",
            "413f5320-090c-44fd-bca8-3bcdeebd6bee",
            "7723fc76-1218-47b9-bbcc-fbab3b824af6",
            "cd700f73-4370-426e-8178-a2931dea5a65",
            "4ea565d0-b51a-4ddf-a8d5-db04dd6981d1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a8a2b863-0ada-4f73-8c43-72caf90eabfa",
          "title": "divide.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/divide.test.js",
          "file": "/tests/divide.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "divide 6 by 3, expect return 2",
              "fullTitle": "divide.js test divide 6 by 3, expect return 2",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _divide[\"default\"])(6, 3), 2);",
              "err": {
                "message": "AssertionError: expected 1 to equal 2",
                "estack": "AssertionError: expected 1 to equal 2\n    at Context.<anonymous> (tests/divide.test.js:8:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- 1\n+ 2\n"
              },
              "uuid": "c8ccb12a-c061-4d5a-8c82-3c7481d4cd69",
              "parentUUID": "a8a2b863-0ada-4f73-8c43-72caf90eabfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "divide 10 by 2, expect return 5",
              "fullTitle": "divide.js test divide 10 by 2, expect return 5",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _divide[\"default\"])(10, 5), 2);",
              "err": {
                "message": "AssertionError: expected 1 to equal 2",
                "estack": "AssertionError: expected 1 to equal 2\n    at Context.<anonymous> (tests/divide.test.js:12:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- 1\n+ 2\n"
              },
              "uuid": "f5bea1f4-b067-48a9-8011-5cecf9b2061f",
              "parentUUID": "a8a2b863-0ada-4f73-8c43-72caf90eabfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "divide '10' by 2, expect return 5",
              "fullTitle": "divide.js test divide '10' by 2, expect return 5",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _divide[\"default\"])('10', 5), 2);",
              "err": {
                "message": "AssertionError: expected 1 to equal 2",
                "estack": "AssertionError: expected 1 to equal 2\n    at Context.<anonymous> (tests/divide.test.js:16:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- 1\n+ 2\n"
              },
              "uuid": "40c36503-85f2-4aff-8fd6-fec4f792da4d",
              "parentUUID": "a8a2b863-0ada-4f73-8c43-72caf90eabfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "divide 6 by '3', expect return 2",
              "fullTitle": "divide.js test divide 6 by '3', expect return 2",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _divide[\"default\"])(6, '3'), 2);",
              "err": {
                "message": "AssertionError: expected 1 to equal 2",
                "estack": "AssertionError: expected 1 to equal 2\n    at Context.<anonymous> (tests/divide.test.js:20:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- 1\n+ 2\n"
              },
              "uuid": "841aadbc-46c4-4e78-ba14-a49010ab57e8",
              "parentUUID": "a8a2b863-0ada-4f73-8c43-72caf90eabfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "divide 'foo' by 3, expect thrown error",
              "fullTitle": "divide.js test divide 'foo' by 3, expect thrown error",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _divide[\"default\"])('foo', 3);\n}, 'Illegal Argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/divide.test.js:24:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "33a5079a-5ab0-4fc7-a370-bbf3fccb5d1c",
              "parentUUID": "a8a2b863-0ada-4f73-8c43-72caf90eabfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "divide null by 3, expect thrown error",
              "fullTitle": "divide.js test divide null by 3, expect thrown error",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _divide[\"default\"])(null, 3);\n}, 'Illegal Argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/divide.test.js:30:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "2a78d693-2c5f-4a43-a60d-89e6c3fcbf01",
              "parentUUID": "a8a2b863-0ada-4f73-8c43-72caf90eabfa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c8ccb12a-c061-4d5a-8c82-3c7481d4cd69",
            "f5bea1f4-b067-48a9-8011-5cecf9b2061f",
            "40c36503-85f2-4aff-8fd6-fec4f792da4d",
            "841aadbc-46c4-4e78-ba14-a49010ab57e8",
            "33a5079a-5ab0-4fc7-a370-bbf3fccb5d1c",
            "2a78d693-2c5f-4a43-a60d-89e6c3fcbf01"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c30ce2db-08cd-4e5a-ad4d-b170ae80ca78",
          "title": "drop.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/drop.test.js",
          "file": "/tests/drop.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "drop [1, 2, 3] without n elements drop, default n is 1, expect [2, 3]",
              "fullTitle": "drop.js test drop [1, 2, 3] without n elements drop, default n is 1, expect [2, 3]",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _drop[\"default\"])([1, 2, 3]), [2, 3]);",
              "err": {},
              "uuid": "b37c6647-be1c-4509-a651-44c7299dfe67",
              "parentUUID": "c30ce2db-08cd-4e5a-ad4d-b170ae80ca78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "drop [1, 2, 3] and drop 2 elements, expect return [3]",
              "fullTitle": "drop.js test drop [1, 2, 3] and drop 2 elements, expect return [3]",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _drop[\"default\"])([1, 2, 3], 2), [3]);",
              "err": {},
              "uuid": "9b466709-1951-4c16-85a7-62be88668a4e",
              "parentUUID": "c30ce2db-08cd-4e5a-ad4d-b170ae80ca78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "drop [1, 2, 3] and drop 5 elements, expect return []",
              "fullTitle": "drop.js test drop [1, 2, 3] and drop 5 elements, expect return []",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _drop[\"default\"])([1, 2, 3], 5), []);",
              "err": {},
              "uuid": "aaf23681-4c86-42e2-b5d0-bc9048b737f3",
              "parentUUID": "c30ce2db-08cd-4e5a-ad4d-b170ae80ca78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "drop [1, 2, 3] and drop 0 elements, expect return [1, 2, 3]",
              "fullTitle": "drop.js test drop [1, 2, 3] and drop 0 elements, expect return [1, 2, 3]",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _drop[\"default\"])([1, 2, 3], 0), [1, 2, 3]);",
              "err": {},
              "uuid": "f465ec9d-1b36-4042-bf87-743a663bc4d0",
              "parentUUID": "c30ce2db-08cd-4e5a-ad4d-b170ae80ca78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "drop [1, 2, 3] and drop -3 elements, expect return [1, 2, 3]",
              "fullTitle": "drop.js test drop [1, 2, 3] and drop -3 elements, expect return [1, 2, 3]",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _drop[\"default\"])([1, 2, 3], -3), [1, 2, 3]);",
              "err": {},
              "uuid": "dbb40d74-a7b7-47d3-9025-4ec39ceff30d",
              "parentUUID": "c30ce2db-08cd-4e5a-ad4d-b170ae80ca78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "drop [] and drop 3 elements, expect return []",
              "fullTitle": "drop.js test drop [] and drop 3 elements, expect return []",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _drop[\"default\"])([], 3), []);",
              "err": {},
              "uuid": "0bd937c2-3b4e-4a6f-8316-32b74e381d66",
              "parentUUID": "c30ce2db-08cd-4e5a-ad4d-b170ae80ca78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "drop false and drop 3 elements, expect thrown error",
              "fullTitle": "drop.js test drop false and drop 3 elements, expect thrown error",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _drop[\"default\"])(false, 3);\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/drop.test.js:32:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "5ef7a859-6650-4f28-b1cc-6521c7d63b93",
              "parentUUID": "c30ce2db-08cd-4e5a-ad4d-b170ae80ca78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "drop null and drop 10 elements, expect return []",
              "fullTitle": "drop.js test drop null and drop 10 elements, expect return []",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _drop[\"default\"])(null, 10), []);",
              "err": {},
              "uuid": "d0dc9412-ce49-4d1f-9301-29f7472d4737",
              "parentUUID": "c30ce2db-08cd-4e5a-ad4d-b170ae80ca78",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b37c6647-be1c-4509-a651-44c7299dfe67",
            "9b466709-1951-4c16-85a7-62be88668a4e",
            "aaf23681-4c86-42e2-b5d0-bc9048b737f3",
            "f465ec9d-1b36-4042-bf87-743a663bc4d0",
            "dbb40d74-a7b7-47d3-9025-4ec39ceff30d",
            "0bd937c2-3b4e-4a6f-8316-32b74e381d66",
            "d0dc9412-ce49-4d1f-9301-29f7472d4737"
          ],
          "failures": [
            "5ef7a859-6650-4f28-b1cc-6521c7d63b93"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "84260d82-1c68-4c11-9a93-7f3c23e7efa9",
          "title": "endsWith.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/endsWith.test.js",
          "file": "/tests/endsWith.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "endsWith 'abc', expect 'c', return true ",
              "fullTitle": "endsWith.js test endsWith 'abc', expect 'c', return true ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _endsWith[\"default\"])('abc', 'c'), true);",
              "err": {},
              "uuid": "279785af-893c-4cf7-98d8-4d11a98016f4",
              "parentUUID": "84260d82-1c68-4c11-9a93-7f3c23e7efa9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "endsWith 'abc', expect 'b', return false ",
              "fullTitle": "endsWith.js test endsWith 'abc', expect 'b', return false ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _endsWith[\"default\"])('abc', 'b'), false);",
              "err": {},
              "uuid": "6120047b-4c77-45a3-8c71-82b22f051920",
              "parentUUID": "84260d82-1c68-4c11-9a93-7f3c23e7efa9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "endsWith 'abc', expect 'b' ends at position 1, return true ",
              "fullTitle": "endsWith.js test endsWith 'abc', expect 'b' ends at position 1, return true ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _endsWith[\"default\"])('abc', 'b', 1), false);",
              "err": {},
              "uuid": "d16c0baf-7909-4e71-98e9-52c375fd1684",
              "parentUUID": "84260d82-1c68-4c11-9a93-7f3c23e7efa9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "endsWith 'abc', expect 'b' ends at position more than length, position is end of string, return false",
              "fullTitle": "endsWith.js test endsWith 'abc', expect 'b' ends at position more than length, position is end of string, return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _endsWith[\"default\"])('abc', 'b', 100), false);",
              "err": {},
              "uuid": "ded4b14a-e725-4968-9710-b5bb2516f130",
              "parentUUID": "84260d82-1c68-4c11-9a93-7f3c23e7efa9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "endsWith 'abc', expect 'b' ends at negative position, position is start of string, return true",
              "fullTitle": "endsWith.js test endsWith 'abc', expect 'b' ends at negative position, position is start of string, return true",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _endsWith[\"default\"])('abc', 'a', -100), true);",
              "err": {
                "message": "AssertionError: expected false to equal true",
                "estack": "AssertionError: expected false to equal true\n    at Context.<anonymous> (tests/endsWith.test.js:24:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- false\n+ true\n"
              },
              "uuid": "24ef6083-a5d0-46fc-9844-4b56f7eb2cf9",
              "parentUUID": "84260d82-1c68-4c11-9a93-7f3c23e7efa9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "endsWith null, expect throwns error ",
              "fullTitle": "endsWith.js test endsWith null, expect throwns error ",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _endsWith[\"default\"])(null);\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'Cannot read property \\'length\\' of null'",
                "estack": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'Cannot read property \\'length\\' of null'\n    at Context.<anonymous> (tests/endsWith.test.js:28:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- Cannot read property 'length' of null\n+ Invalid argument\n"
              },
              "uuid": "3ef8ef46-0849-4e81-b6ab-b5795e74dd77",
              "parentUUID": "84260d82-1c68-4c11-9a93-7f3c23e7efa9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "endsWith undefined, expect throwns error ",
              "fullTitle": "endsWith.js test endsWith undefined, expect throwns error ",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _endsWith[\"default\"])(undefined);\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'Cannot read property \\'length\\' of undefined'",
                "estack": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'Cannot read property \\'length\\' of undefined'\n    at Context.<anonymous> (tests/endsWith.test.js:34:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- Cannot read property 'length' of undefined\n+ Invalid argument\n"
              },
              "uuid": "df94bbbc-ee32-468d-b557-f25c1d57c2d1",
              "parentUUID": "84260d82-1c68-4c11-9a93-7f3c23e7efa9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "endsWith incorrect type, expect throwns error ",
              "fullTitle": "endsWith.js test endsWith incorrect type, expect throwns error ",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _endsWith[\"default\"])(123);\n}, 'Invalid type');",
              "err": {
                "message": "AssertionError: expected [Function] to throw error including 'Invalid type' but got 'Cannot read property \\'length\\' of undefined'",
                "estack": "AssertionError: expected [Function] to throw error including 'Invalid type' but got 'Cannot read property \\'length\\' of undefined'\n    at Context.<anonymous> (tests/endsWith.test.js:40:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- Cannot read property 'length' of undefined\n+ Invalid type\n"
              },
              "uuid": "72443a5a-ecbf-415a-a9e5-d8383e8a8020",
              "parentUUID": "84260d82-1c68-4c11-9a93-7f3c23e7efa9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "279785af-893c-4cf7-98d8-4d11a98016f4",
            "6120047b-4c77-45a3-8c71-82b22f051920",
            "d16c0baf-7909-4e71-98e9-52c375fd1684",
            "ded4b14a-e725-4968-9710-b5bb2516f130"
          ],
          "failures": [
            "24ef6083-a5d0-46fc-9844-4b56f7eb2cf9",
            "3ef8ef46-0849-4e81-b6ab-b5795e74dd77",
            "df94bbbc-ee32-468d-b557-f25c1d57c2d1",
            "72443a5a-ecbf-415a-a9e5-d8383e8a8020"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0d84b656-578c-47d5-a33e-ad1fabc9b33f",
          "title": "eq test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/eq.test.js",
          "file": "/tests/eq.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if same objects are compared",
              "fullTitle": "eq test should return true if same objects are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var object = {\n  'a': 1\n};\nvar result = (0, _eq[\"default\"])(object, object);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "1252b80c-78b6-4122-8863-c665b7a6087c",
              "parentUUID": "0d84b656-578c-47d5-a33e-ad1fabc9b33f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if same strings are compared",
              "fullTitle": "eq test should return true if same strings are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])('a', 'a')).to.be[\"true\"];",
              "err": {},
              "uuid": "a85b74d5-d99e-4724-8173-1ce273a6a386",
              "parentUUID": "0d84b656-578c-47d5-a33e-ad1fabc9b33f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if same numbers are compared",
              "fullTitle": "eq test should return true if same numbers are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])(123, 123)).to.be[\"true\"];",
              "err": {},
              "uuid": "79cc4da6-a6b5-4da6-aee4-994ef37ce5de",
              "parentUUID": "0d84b656-578c-47d5-a33e-ad1fabc9b33f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if values are not quivalent",
              "fullTitle": "eq test should return false if values are not quivalent",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])('a', NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "df05b870-8007-429d-a5ea-ef30ce629569",
              "parentUUID": "0d84b656-578c-47d5-a33e-ad1fabc9b33f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if string and object is compared",
              "fullTitle": "eq test should return false if string and object is compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var object = {\n  'a': 1\n};\nexpect((0, _eq[\"default\"])('a', object)).to.be[\"false\"];",
              "err": {},
              "uuid": "9efa054d-8ccd-445b-9260-ae3fd9026ec7",
              "parentUUID": "0d84b656-578c-47d5-a33e-ad1fabc9b33f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1252b80c-78b6-4122-8863-c665b7a6087c",
            "a85b74d5-d99e-4724-8173-1ce273a6a386",
            "79cc4da6-a6b5-4da6-aee4-994ef37ce5de",
            "df05b870-8007-429d-a5ea-ef30ce629569",
            "9efa054d-8ccd-445b-9260-ae3fd9026ec7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "97b71d2a-dbbc-4d54-bd84-a27771245f5a",
          "title": "every test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/every.test.js",
          "file": "/tests/every.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if all array elements pass the predicate check",
              "fullTitle": "every test should return true if all array elements pass the predicate check",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = ['1', 'yes'];\nvar result = (0, _every[\"default\"])(array, String);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "fb2cd389-1510-404a-9c06-2cc846dcf726",
              "parentUUID": "97b71d2a-dbbc-4d54-bd84-a27771245f5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for empty arrays",
              "fullTitle": "every test should return true for empty arrays",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [];\nvar result = (0, _every[\"default\"])(array, String);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "84bda30d-309f-4c76-8df8-5670bd8e5605",
              "parentUUID": "97b71d2a-dbbc-4d54-bd84-a27771245f5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if all array elements did not pass the predicate check",
              "fullTitle": "every test should return false if all array elements did not pass the predicate check",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [true, 1, null, 'yes'];\nvar result = (0, _every[\"default\"])(array, Boolean);\nexpect(result).to.be[\"false\"];",
              "err": {},
              "uuid": "2077680e-6bc0-464d-ad00-a88b7753197e",
              "parentUUID": "97b71d2a-dbbc-4d54-bd84-a27771245f5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return boolean if array is not passed",
              "fullTitle": "every test should not return boolean if array is not passed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _every[\"default\"])('abc', String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(123, Number)).to.not.equal('boolean');",
              "err": {},
              "uuid": "1c564bf8-aac1-440b-b685-277fc3570993",
              "parentUUID": "97b71d2a-dbbc-4d54-bd84-a27771245f5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return boolean if null, NaN, undefined is passed",
              "fullTitle": "every test should not return boolean if null, NaN, undefined is passed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _every[\"default\"])(null, String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(NaN, String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(undefined, String)).to.not.equal('boolean');",
              "err": {},
              "uuid": "ca873fe8-c69f-4966-b5a7-8ffdee837a16",
              "parentUUID": "97b71d2a-dbbc-4d54-bd84-a27771245f5a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb2cd389-1510-404a-9c06-2cc846dcf726",
            "84bda30d-309f-4c76-8df8-5670bd8e5605",
            "2077680e-6bc0-464d-ad00-a88b7753197e",
            "1c564bf8-aac1-440b-b685-277fc3570993",
            "ca873fe8-c69f-4966-b5a7-8ffdee837a16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8f553045-6fc4-4ee1-b704-f758dbc10bba",
          "title": "filter.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/filter.test.js",
          "file": "/tests/filter.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "filter user list and take only active user, expect array of active users",
              "fullTitle": "filter.js test filter user list and take only active user, expect array of active users",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var filteredUser = (0, _filter[\"default\"])(USERS, function (_ref) {\n  var active = _ref.active;\n  return active;\n});\nassert.deepEqual(USERS[0], filteredUser[0]);",
              "err": {},
              "uuid": "a52bef90-da97-4b36-be66-a8935d52777d",
              "parentUUID": "8f553045-6fc4-4ee1-b704-f758dbc10bba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "filter empty user list and take only active user, expect array of empty array",
              "fullTitle": "filter.js test filter empty user list and take only active user, expect array of empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _filter[\"default\"])([], function (_ref2) {\n  var active = _ref2.active;\n  return active;\n}), [[]]);",
              "err": {},
              "uuid": "82daabe3-2de9-45c4-bff4-d1b2705b9d3a",
              "parentUUID": "8f553045-6fc4-4ee1-b704-f758dbc10bba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "filter empty user list with incorrect predicate, expect array of empty array",
              "fullTitle": "filter.js test filter empty user list with incorrect predicate, expect array of empty array",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _filter[\"default\"])(USERS, function (_ref3) {\n  var title = _ref3.title;\n  return title.length > 0;\n}), [[]]);",
              "err": {
                "message": "TypeError: Cannot read property 'length' of undefined",
                "estack": "TypeError: Cannot read property 'length' of undefined\n    at predicate (tests/filter.test.js:21:59)\n    at filter (src/filter.js:32:9)\n    at Context.<anonymous> (tests/filter.test.js:21:26)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "c97bb5da-5f5b-4b04-ad4b-a0fa91862175",
              "parentUUID": "8f553045-6fc4-4ee1-b704-f758dbc10bba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "filter null, expect thrown error",
              "fullTitle": "filter.js test filter null, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _filter[\"default\"])(null, function (_ref4) {\n    var active = _ref4.active;\n    return active;\n  });\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/filter.test.js:25:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "af262f22-d730-4424-8f1d-869e6c0eac03",
              "parentUUID": "8f553045-6fc4-4ee1-b704-f758dbc10bba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "filter undefined, expect thrown error",
              "fullTitle": "filter.js test filter undefined, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _filter[\"default\"])(undefined, function (_ref5) {\n    var active = _ref5.active;\n    return active;\n  });\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/filter.test.js:31:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "73e153a6-46c2-4cec-ace1-0841508da6c8",
              "parentUUID": "8f553045-6fc4-4ee1-b704-f758dbc10bba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "filter non array type, expect thrown error",
              "fullTitle": "filter.js test filter non array type, expect thrown error",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _filter[\"default\"])('12345', function (_ref6) {\n    var active = _ref6.active;\n    return active;\n  });\n}, 'Invalid type of parameter');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/filter.test.js:37:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "432f8b07-ad16-4334-af47-70e074b74f40",
              "parentUUID": "8f553045-6fc4-4ee1-b704-f758dbc10bba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a52bef90-da97-4b36-be66-a8935d52777d",
            "82daabe3-2de9-45c4-bff4-d1b2705b9d3a"
          ],
          "failures": [
            "c97bb5da-5f5b-4b04-ad4b-a0fa91862175",
            "af262f22-d730-4424-8f1d-869e6c0eac03",
            "73e153a6-46c2-4cec-ace1-0841508da6c8",
            "432f8b07-ad16-4334-af47-70e074b74f40"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "778bc820-320b-40f2-8988-e343554ea31d",
          "title": "isArguments test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isArguments.test.js",
          "file": "/tests/isArguments.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is an arguments object",
              "fullTitle": "isArguments test should return true if value is an arguments object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isArguments[\"default\"])(function () {\n  return arguments;\n}())).to.be[\"true\"];",
              "err": {},
              "uuid": "84ec018c-58f0-489c-a545-d6d061bc9de8",
              "parentUUID": "778bc820-320b-40f2-8988-e343554ea31d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not an arguments object",
              "fullTitle": "isArguments test should return false if value is not an arguments object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isArguments[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isArguments[\"default\"])(Function)).to.be[\"false\"];\nexpect((0, _isArguments[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isArguments[\"default\"])(Infinity)).to.be[\"false\"];\nexpect((0, _isArguments[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isArguments[\"default\"])(NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "c258f9f1-b896-4ba3-ae5c-fe239ec2e211",
              "parentUUID": "778bc820-320b-40f2-8988-e343554ea31d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84ec018c-58f0-489c-a545-d6d061bc9de8",
            "c258f9f1-b896-4ba3-ae5c-fe239ec2e211"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5f9f14da-b9ee-488f-ab33-8b090b1736fb",
          "title": "isArrayLike test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isArrayLike.test.js",
          "file": "/tests/isArrayLike.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is array-like",
              "fullTitle": "isArrayLike test should return true if value is array-like",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isArrayLike[\"default\"])([1, 2, 3])).to.be[\"true\"];\nexpect((0, _isArrayLike[\"default\"])('abc')).to.be[\"true\"];\nexpect((0, _isArrayLike[\"default\"])([])).to.be[\"true\"];",
              "err": {},
              "uuid": "776444da-8ecb-49a6-aef9-367b0b6f10ce",
              "parentUUID": "5f9f14da-b9ee-488f-ab33-8b090b1736fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not an array-like",
              "fullTitle": "isArrayLike test should return false if value is not an array-like",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isArrayLike[\"default\"])(23)).to.be[\"false\"];\nexpect((0, _isArrayLike[\"default\"])(Function)).to.be[\"false\"];\nexpect((0, _isArrayLike[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isArrayLike[\"default\"])(Infinity)).to.be[\"false\"];\nexpect((0, _isArrayLike[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isArrayLike[\"default\"])(NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "2aebe071-fbc7-4461-ade7-91b2aa170561",
              "parentUUID": "5f9f14da-b9ee-488f-ab33-8b090b1736fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "776444da-8ecb-49a6-aef9-367b0b6f10ce",
            "2aebe071-fbc7-4461-ade7-91b2aa170561"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "498e6b8d-c646-4a01-8fc8-4dafb05e7d69",
          "title": "isArrayLikeObject test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isArrayLikeObject.test.js",
          "file": "/tests/isArrayLikeObject.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is array-like object",
              "fullTitle": "isArrayLikeObject test should return true if value is array-like object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var a1 = {\n  length: 0\n};\nvar a2 = {\n  0: 'foo',\n  5: 'bar',\n  length: 6\n};\nexpect((0, _isArrayLikeObject[\"default\"])([1, 2, 3])).to.be[\"true\"];\nexpect((0, _isArrayLikeObject[\"default\"])(a1)).to.be[\"true\"];\nexpect((0, _isArrayLikeObject[\"default\"])(a2)).to.be[\"true\"];",
              "err": {},
              "uuid": "9b595cc6-75d3-4e78-b882-233698e96674",
              "parentUUID": "498e6b8d-c646-4a01-8fc8-4dafb05e7d69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not an array-like object",
              "fullTitle": "isArrayLikeObject test should return false if value is not an array-like object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isArrayLikeObject[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isArrayLikeObject[\"default\"])(Function)).to.be[\"false\"];\nexpect((0, _isArrayLikeObject[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isArrayLikeObject[\"default\"])(Infinity)).to.be[\"false\"];\nexpect((0, _isArrayLikeObject[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isArrayLikeObject[\"default\"])(NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "77e5c82a-d65c-44cc-b961-4581d2c3c2c0",
              "parentUUID": "498e6b8d-c646-4a01-8fc8-4dafb05e7d69",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b595cc6-75d3-4e78-b882-233698e96674",
            "77e5c82a-d65c-44cc-b961-4581d2c3c2c0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "14b215ff-9624-4eb7-931e-567693c8fb53",
          "title": "isBoolean test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isBoolean.test.js",
          "file": "/tests/isBoolean.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is Boolean",
              "fullTitle": "isBoolean test should return true if value is Boolean",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isBoolean[\"default\"])(true)).to.be[\"true\"];\nexpect((0, _isBoolean[\"default\"])(false)).to.be[\"true\"];",
              "err": {},
              "uuid": "8135d999-f5be-4774-9b65-8a3b16f8fc74",
              "parentUUID": "14b215ff-9624-4eb7-931e-567693c8fb53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not Boolean",
              "fullTitle": "isBoolean test should return false if value is not Boolean",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isBoolean[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isBoolean[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isBoolean[\"default\"])(12)).to.be[\"false\"];\nexpect((0, _isBoolean[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isBoolean[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isBoolean[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "a3af8438-1726-40d8-9233-1b6c1641a1b0",
              "parentUUID": "14b215ff-9624-4eb7-931e-567693c8fb53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8135d999-f5be-4774-9b65-8a3b16f8fc74",
            "a3af8438-1726-40d8-9233-1b6c1641a1b0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "117727e2-9138-4fc1-be35-57db40e6a785",
          "title": "isBuffer test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isBuffer.test.js",
          "file": "/tests/isBuffer.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is a Buffer",
              "fullTitle": "isBuffer test should return true if value is a Buffer",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isBuffer[\"default\"])(Buffer.from('abc'))).to.be[\"true\"];\nexpect((0, _isBuffer[\"default\"])(Buffer.alloc(2))).to.be[\"true\"];\nexpect((0, _isBuffer[\"default\"])(Buffer.from([1, 2, 3]))).to.be[\"true\"];",
              "err": {},
              "uuid": "19aff606-708f-4d53-9712-0f0419254328",
              "parentUUID": "117727e2-9138-4fc1-be35-57db40e6a785",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not a Buffer",
              "fullTitle": "isBuffer test should return false if value is not a Buffer",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isBuffer[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isBuffer[\"default\"])(12)).to.be[\"false\"];\nexpect((0, _isBuffer[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isBuffer[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isBuffer[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "c034486f-e5cd-4e8c-a57c-1de8dec31c48",
              "parentUUID": "117727e2-9138-4fc1-be35-57db40e6a785",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "19aff606-708f-4d53-9712-0f0419254328",
            "c034486f-e5cd-4e8c-a57c-1de8dec31c48"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "04ae1a8f-67fc-4b9b-9ce8-0c4a7f2fbd67",
          "title": "isDate test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isDate.test.js",
          "file": "/tests/isDate.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is a Date object",
              "fullTitle": "isDate test should return true if value is a Date object",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])(new Date())).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11, 24, 10, 33, 30, 0))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11, 24, 10, 33, 30))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11, 24, 10, 33))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11, 24, 10))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11, 24))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(\"October 13, 2014 11:13:00\"))).to.be[\"true\"];",
              "err": {},
              "uuid": "5c7d76da-5b84-41ea-9e12-483c66db9f3f",
              "parentUUID": "04ae1a8f-67fc-4b9b-9ce8-0c4a7f2fbd67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not a Date object",
              "fullTitle": "isDate test should return false if value is not a Date object",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])('Mon April 23 2012')).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])(12)).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "ad6af3d3-ab86-43c1-9598-8c811b1eae09",
              "parentUUID": "04ae1a8f-67fc-4b9b-9ce8-0c4a7f2fbd67",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c7d76da-5b84-41ea-9e12-483c66db9f3f",
            "ad6af3d3-ab86-43c1-9598-8c811b1eae09"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "284c9d15-694e-4995-a359-1addbb4c42c9",
          "title": "isEmpty test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isEmpty.test.js",
          "file": "/tests/isEmpty.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is Empty",
              "fullTitle": "isEmpty test should return true if value is Empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])(null)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(true)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(1)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(undefined)).to.be[\"true\"];",
              "err": {},
              "uuid": "22e12339-4615-4da8-9e4b-2616211dbf9f",
              "parentUUID": "284c9d15-694e-4995-a359-1addbb4c42c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not Empty",
              "fullTitle": "isEmpty test should return false if value is not Empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isEmpty[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isEmpty[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "06048d42-e3e6-4964-88f3-1f03a4404236",
              "parentUUID": "284c9d15-694e-4995-a359-1addbb4c42c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "22e12339-4615-4da8-9e4b-2616211dbf9f",
            "06048d42-e3e6-4964-88f3-1f03a4404236"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dbf59f74-c70c-48de-8235-b6e3ca7b7592",
          "title": "isLength test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isLength.test.js",
          "file": "/tests/isLength.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is a valid length",
              "fullTitle": "isLength test should return true if value is a valid length",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isLength[\"default\"])(3)).to.be[\"true\"];\nexpect((0, _isLength[\"default\"])(Number.MAX_SAFE_INTEGER)).to.be[\"true\"];",
              "err": {},
              "uuid": "8b49fa6a-4267-4e84-8303-98449dbc9fad",
              "parentUUID": "dbf59f74-c70c-48de-8235-b6e3ca7b7592",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not a valid length",
              "fullTitle": "isLength test should return false if value is not a valid length",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isLength[\"default\"])(Number.MAX_VALUE)).to.be[\"false\"];\nexpect((0, _isLength[\"default\"])(Number.MIN_VALUE)).to.be[\"false\"];\nexpect((0, _isLength[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isLength[\"default\"])(Infinity)).to.be[\"false\"];\nexpect((0, _isLength[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isLength[\"default\"])(NaN)).to.be[\"false\"];\nexpect((0, _isLength[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isLength[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "f47275fa-1956-4dc7-9701-47069b2eefa0",
              "parentUUID": "dbf59f74-c70c-48de-8235-b6e3ca7b7592",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b49fa6a-4267-4e84-8303-98449dbc9fad",
            "f47275fa-1956-4dc7-9701-47069b2eefa0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e27d8a61-c279-422d-a274-cec862a74c81",
          "title": "isObject test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isObject.test.js",
          "file": "/tests/isObject.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is an object",
              "fullTitle": "isObject test should return true if value is an object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isObject[\"default\"])({})).to.be[\"true\"];\nexpect((0, _isObject[\"default\"])({\n  'a': 1\n})).to.be[\"true\"];\nexpect((0, _isObject[\"default\"])([1, 2, 3])).to.be[\"true\"];\nexpect((0, _isObject[\"default\"])(Function)).to.be[\"true\"];\nexpect((0, _isObject[\"default\"])(new Number(0))).to.be[\"true\"];\nexpect((0, _isObject[\"default\"])(new String('a'))).to.be[\"true\"];",
              "err": {},
              "uuid": "af2288a1-49e3-44e4-aca3-0fb64b66ccfc",
              "parentUUID": "e27d8a61-c279-422d-a274-cec862a74c81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not an object",
              "fullTitle": "isObject test should return false if value is not an object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isObject[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isObject[\"default\"])(Infinity)).to.be[\"false\"];\nexpect((0, _isObject[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isObject[\"default\"])(NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "d4009321-443f-4749-8af7-652b11de01c1",
              "parentUUID": "e27d8a61-c279-422d-a274-cec862a74c81",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af2288a1-49e3-44e4-aca3-0fb64b66ccfc",
            "d4009321-443f-4749-8af7-652b11de01c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "15062a9c-bd0a-49f6-83f1-6571b9be6892",
          "title": "isObjectLike test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isObjectLike.test.js",
          "file": "/tests/isObjectLike.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is an object-like",
              "fullTitle": "isObjectLike test should return true if value is an object-like",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isObjectLike[\"default\"])({})).to.be[\"true\"];\nexpect((0, _isObjectLike[\"default\"])({\n  'a': 1\n})).to.be[\"true\"];\nexpect((0, _isObjectLike[\"default\"])([1, 2, 3])).to.be[\"true\"];\nexpect((0, _isObjectLike[\"default\"])(new Number(0))).to.be[\"true\"];\nexpect((0, _isObjectLike[\"default\"])(new String('a'))).to.be[\"true\"];",
              "err": {},
              "uuid": "2344706a-01b0-462e-a2b8-dc9a50b89961",
              "parentUUID": "15062a9c-bd0a-49f6-83f1-6571b9be6892",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not an object-like",
              "fullTitle": "isObjectLike test should return false if value is not an object-like",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isObjectLike[\"default\"])(Function)).to.be[\"false\"];\nexpect((0, _isObjectLike[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isObjectLike[\"default\"])(Infinity)).to.be[\"false\"];\nexpect((0, _isObjectLike[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isObjectLike[\"default\"])(NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "f814aa33-3d3e-47e9-8d9f-b1f18081c779",
              "parentUUID": "15062a9c-bd0a-49f6-83f1-6571b9be6892",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2344706a-01b0-462e-a2b8-dc9a50b89961",
            "f814aa33-3d3e-47e9-8d9f-b1f18081c779"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bcfaef6c-7f28-473f-a7de-1227f2cad671",
          "title": "isSymbol test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isSymbol.test.js",
          "file": "/tests/isSymbol.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is symbol",
              "fullTitle": "isSymbol test should return true if value is symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var sym = Symbol('foo');\nexpect((0, _isSymbol[\"default\"])(Symbol.iterator)).to.be[\"true\"];\nexpect((0, _isSymbol[\"default\"])(sym)).to.be[\"true\"];\nexpect((0, _isSymbol[\"default\"])(Object(sym))).to.be[\"true\"];",
              "err": {},
              "uuid": "869fc81a-4ed8-4c94-92c6-40d6dce47fe9",
              "parentUUID": "bcfaef6c-7f28-473f-a7de-1227f2cad671",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not a symbol",
              "fullTitle": "isSymbol test should return false if value is not a symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isSymbol[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isSymbol[\"default\"])(Function)).to.be[\"false\"];\nexpect((0, _isSymbol[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isSymbol[\"default\"])(Infinity)).to.be[\"false\"];\nexpect((0, _isSymbol[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isSymbol[\"default\"])(NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "27dd653d-6e27-4acf-883c-e557f2fccc25",
              "parentUUID": "bcfaef6c-7f28-473f-a7de-1227f2cad671",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "869fc81a-4ed8-4c94-92c6-40d6dce47fe9",
            "27dd653d-6e27-4acf-883c-e557f2fccc25"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5d897599-63e5-4b58-8585-5a937ff23886",
          "title": "isTypedArray test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isTypedArray.test.js",
          "file": "/tests/isTypedArray.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is a typed array",
              "fullTitle": "isTypedArray test should return true if value is a typed array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isTypedArray[\"default\"])(Int8Array.from('123'))).to.be[\"true\"];\nexpect((0, _isTypedArray[\"default\"])(Uint8Array.from('123'))).to.be[\"true\"];\nexpect((0, _isTypedArray[\"default\"])(Uint8ClampedArray.from('123'))).to.be[\"true\"];\nexpect((0, _isTypedArray[\"default\"])(Int16Array.from('123'))).to.be[\"true\"];\nexpect((0, _isTypedArray[\"default\"])(Uint16Array.from('123'))).to.be[\"true\"];\nexpect((0, _isTypedArray[\"default\"])(Int32Array.from('123'))).to.be[\"true\"];\nexpect((0, _isTypedArray[\"default\"])(Uint32Array.from('123'))).to.be[\"true\"];\nexpect((0, _isTypedArray[\"default\"])(BigInt64Array.from('123'))).to.be[\"true\"];\nexpect((0, _isTypedArray[\"default\"])(BigUint64Array.from('123'))).to.be[\"true\"];",
              "err": {},
              "uuid": "49baafd6-7385-4d8b-8ce5-7ce26a6e0490",
              "parentUUID": "5d897599-63e5-4b58-8585-5a937ff23886",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not a typed array",
              "fullTitle": "isTypedArray test should return false if value is not a typed array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isTypedArray[\"default\"])([])).to.be[\"false\"];\nexpect((0, _isTypedArray[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isTypedArray[\"default\"])(Function)).to.be[\"false\"];\nexpect((0, _isTypedArray[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isTypedArray[\"default\"])(Infinity)).to.be[\"false\"];\nexpect((0, _isTypedArray[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isTypedArray[\"default\"])(NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "8fc81006-3ab6-4864-8de8-09b5398dd926",
              "parentUUID": "5d897599-63e5-4b58-8585-5a937ff23886",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "49baafd6-7385-4d8b-8ce5-7ce26a6e0490",
            "8fc81006-3ab6-4864-8de8-09b5398dd926"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5956cfaf-7f62-460a-ab6e-26e33169f483",
          "title": "keys.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/keys.test.js",
          "file": "/tests/keys.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "keys sample object, expect an array of object properties",
              "fullTitle": "keys.js test keys sample object, expect an array of object properties",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _keys[\"default\"])({\n  a: '1',\n  b: '2',\n  c: '3',\n  d: '4'\n})).to.include.members(['a', 'b', 'c', 'd']);",
              "err": {},
              "uuid": "24701bcf-b23e-41b5-b563-78b34397c455",
              "parentUUID": "5956cfaf-7f62-460a-ab6e-26e33169f483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "keys empty object, expect an empty array",
              "fullTitle": "keys.js test keys empty object, expect an empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _keys[\"default\"])({}), []);",
              "err": {},
              "uuid": "5b94d94f-f8f9-4e64-9315-bd8212469392",
              "parentUUID": "5956cfaf-7f62-460a-ab6e-26e33169f483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "keys a string, expect an array with values of character index",
              "fullTitle": "keys.js test keys a string, expect an array with values of character index",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _keys[\"default\"])('abcd')).to.include.members(['0', '1', '2', '3']);",
              "err": {},
              "uuid": "1699e3fc-f363-45c1-99ea-cb281902b474",
              "parentUUID": "5956cfaf-7f62-460a-ab6e-26e33169f483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "keys a number, expect an empty array",
              "fullTitle": "keys.js test keys a number, expect an empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _keys[\"default\"])(100), []);",
              "err": {},
              "uuid": "bb218567-b547-41c2-870b-416373dde494",
              "parentUUID": "5956cfaf-7f62-460a-ab6e-26e33169f483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "keys null, expect thrown error",
              "fullTitle": "keys.js test keys null, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _keys[\"default\"])(null);\n}, 'Invalid arguments');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/keys.test.js:30:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "91261fe5-4c35-4ea1-bcba-5ade0418434f",
              "parentUUID": "5956cfaf-7f62-460a-ab6e-26e33169f483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "keys undefined, expect thrown error",
              "fullTitle": "keys.js test keys undefined, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _keys[\"default\"])(undefined);\n}, 'Invalid arguments');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/keys.test.js:36:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "241b157d-3d80-4b28-b6ab-6efb6137f2ca",
              "parentUUID": "5956cfaf-7f62-460a-ab6e-26e33169f483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "keys undefined, expect thrown error",
              "fullTitle": "keys.js test keys undefined, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _keys[\"default\"])(undefined);\n}, 'Invalid arguments');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/keys.test.js:42:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "13cc97a3-57af-42a4-9122-fa50ef1b4bdb",
              "parentUUID": "5956cfaf-7f62-460a-ab6e-26e33169f483",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "24701bcf-b23e-41b5-b563-78b34397c455",
            "5b94d94f-f8f9-4e64-9315-bd8212469392",
            "1699e3fc-f363-45c1-99ea-cb281902b474",
            "bb218567-b547-41c2-870b-416373dde494"
          ],
          "failures": [
            "91261fe5-4c35-4ea1-bcba-5ade0418434f",
            "241b157d-3d80-4b28-b6ab-6efb6137f2ca",
            "13cc97a3-57af-42a4-9122-fa50ef1b4bdb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "261c3e9f-2251-44dd-a471-5a980c0693d5",
          "title": "map.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/map.test.js",
          "file": "/tests/map.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "map double array of number, expect array with double value",
              "fullTitle": "map.js test map double array of number, expect array with double value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _map[\"default\"])([1, 2, 3, 4], function (num) {\n  return num * 2;\n}), [2, 4, 6, 8]);",
              "err": {},
              "uuid": "6af84fc1-8bea-4226-b428-8a5bea8c32a3",
              "parentUUID": "261c3e9f-2251-44dd-a471-5a980c0693d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "map empty array, expect an empty array",
              "fullTitle": "map.js test map empty array, expect an empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _map[\"default\"])([], function (num) {\n  return num * 2;\n}), []);",
              "err": {},
              "uuid": "a2c02b10-7d2f-42e9-9dc5-ebf8c03b6124",
              "parentUUID": "261c3e9f-2251-44dd-a471-5a980c0693d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "map an array without iteratee, expect the same array",
              "fullTitle": "map.js test map an array without iteratee, expect the same array",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _map[\"default\"])([1, 2, 3]), [1, 2, 3]);",
              "err": {
                "message": "TypeError: iteratee is not a function",
                "estack": "TypeError: iteratee is not a function\n    at map (src/map.js:25:21)\n    at Context.<anonymous> (tests/map.test.js:24:13)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "49ea015f-8e8a-4956-94e5-0f7da1ab896a",
              "parentUUID": "261c3e9f-2251-44dd-a471-5a980c0693d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "map string, expect thrown error",
              "fullTitle": "map.js test map string, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _map[\"default\"])('123', function (_char) {\n    return _char.toUpperCase();\n  });\n}, 'Invalid type parameter');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/map.test.js:30:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "4cb2bf6d-1e6c-41e8-bf84-a6d2f3a763d1",
              "parentUUID": "261c3e9f-2251-44dd-a471-5a980c0693d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "map number, expect thrown error",
              "fullTitle": "map.js test map number, expect thrown error",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _map[\"default\"])(5000, function (num) {\n    return num * 3;\n  });\n}, 'Invalid type parameter');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/map.test.js:36:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "dfbbb9f3-a067-43cc-9360-24d61d24783a",
              "parentUUID": "261c3e9f-2251-44dd-a471-5a980c0693d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "map null, expect thrown error",
              "fullTitle": "map.js test map null, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _map[\"default\"])(null);\n}, 'Invalid arguments');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/map.test.js:42:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "6fa53318-3876-44ca-9859-b78217195ff9",
              "parentUUID": "261c3e9f-2251-44dd-a471-5a980c0693d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "map undefined, expect thrown error",
              "fullTitle": "map.js test map undefined, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _map[\"default\"])(undefined);\n}, 'Invalid arguments');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/map.test.js:48:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "a0af7f2c-4cf0-47f9-8fb0-8219303a8811",
              "parentUUID": "261c3e9f-2251-44dd-a471-5a980c0693d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6af84fc1-8bea-4226-b428-8a5bea8c32a3",
            "a2c02b10-7d2f-42e9-9dc5-ebf8c03b6124"
          ],
          "failures": [
            "49ea015f-8e8a-4956-94e5-0f7da1ab896a",
            "4cb2bf6d-1e6c-41e8-bf84-a6d2f3a763d1",
            "dfbbb9f3-a067-43cc-9360-24d61d24783a",
            "6fa53318-3876-44ca-9859-b78217195ff9",
            "a0af7f2c-4cf0-47f9-8fb0-8219303a8811"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6829272c-f4d1-4f2d-b846-322f1d3ddb08",
          "title": "Test toFinite.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/toFinite.test.js",
          "file": "/tests/toFinite.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return NAN",
              "fullTitle": "Test toFinite.js function Give null to method, return NAN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])(null)).to.eql(0);",
              "err": {},
              "uuid": "f1b107c5-4b4e-4179-b7b5-110b24cfbd27",
              "parentUUID": "6829272c-f4d1-4f2d-b846-322f1d3ddb08",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, return NaN",
              "fullTitle": "Test toFinite.js function Give undefined to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])(undefined)).to.eql(0);",
              "err": {},
              "uuid": "a67f052e-cd07-46b5-857d-9d2ecd93871f",
              "parentUUID": "6829272c-f4d1-4f2d-b846-322f1d3ddb08",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give invalid number string to method, return NaN",
              "fullTitle": "Test toFinite.js function Give invalid number string to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])('a string with a value')).to.eql(0);",
              "err": {},
              "uuid": "bdd56dae-c8ea-4dae-b075-56702e3e8409",
              "parentUUID": "6829272c-f4d1-4f2d-b846-322f1d3ddb08",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give Hexadecimals number string to method, return converted base 10",
              "fullTitle": "Test toFinite.js function Give Hexadecimals number string to method, return converted base 10",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal((0, _toFinite[\"default\"])('0xabcdef'), 11259375);",
              "err": {},
              "uuid": "b50e0239-dcb6-4b62-b274-7ffbfc218481",
              "parentUUID": "6829272c-f4d1-4f2d-b846-322f1d3ddb08",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid number to method, return number type and same value",
              "fullTitle": "Test toFinite.js function Give valid number to method, return number type and same value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toFinite[\"default\"])(3.44532);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 3.44532);",
              "err": {},
              "uuid": "808c094a-8ae1-4ff2-b80d-8641d14dfd88",
              "parentUUID": "6829272c-f4d1-4f2d-b846-322f1d3ddb08",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give maximum int value to method, return number type and converted value",
              "fullTitle": "Test toFinite.js function Give maximum int value to method, return number type and converted value",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toFinite[\"default\"])(Infinity);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 1.7976931348623157e+308);",
              "err": {},
              "uuid": "ecc51bf1-ef85-42a8-924f-82b14621e29f",
              "parentUUID": "6829272c-f4d1-4f2d-b846-322f1d3ddb08",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1b107c5-4b4e-4179-b7b5-110b24cfbd27",
            "a67f052e-cd07-46b5-857d-9d2ecd93871f",
            "bdd56dae-c8ea-4dae-b075-56702e3e8409",
            "b50e0239-dcb6-4b62-b274-7ffbfc218481",
            "808c094a-8ae1-4ff2-b80d-8641d14dfd88",
            "ecc51bf1-ef85-42a8-924f-82b14621e29f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2497c83a-21fe-48d9-9cf0-25cb0fe741fd",
          "title": "Test toNumber.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/toNumber.test.js",
          "file": "/tests/toNumber.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return NAN",
              "fullTitle": "Test toNumber.js function Give null to method, return NAN",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])(null)).to.be.NaN;",
              "err": {
                "message": "AssertionError: expected 0 to be NaN",
                "estack": "AssertionError: expected 0 to be NaN\n    at Context.<anonymous> (tests/toNumber.test.js:11:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "bf70f066-69a6-4d0f-98a9-a64fd46b5f68",
              "parentUUID": "2497c83a-21fe-48d9-9cf0-25cb0fe741fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, return NaN",
              "fullTitle": "Test toNumber.js function Give undefined to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])(undefined)).to.be.NaN;",
              "err": {},
              "uuid": "ea2c61f4-0f36-4ba6-bdfe-adef9c326a13",
              "parentUUID": "2497c83a-21fe-48d9-9cf0-25cb0fe741fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give invalid number string to method, return NaN",
              "fullTitle": "Test toNumber.js function Give invalid number string to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])('Hello world!')).to.be.NaN;",
              "err": {},
              "uuid": "4f89a22a-eef7-465c-a2da-b90aaed34b1a",
              "parentUUID": "2497c83a-21fe-48d9-9cf0-25cb0fe741fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give Hexadecimals number string to method, return converted base 10",
              "fullTitle": "Test toNumber.js function Give Hexadecimals number string to method, return converted base 10",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal((0, _toNumber[\"default\"])('0xabcdef'), 11259375);",
              "err": {},
              "uuid": "11c09506-8942-4b0c-a6f8-564a1ef58596",
              "parentUUID": "2497c83a-21fe-48d9-9cf0-25cb0fe741fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid number string to method, return number type and same value",
              "fullTitle": "Test toNumber.js function Give valid number string to method, return number type and same value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toNumber[\"default\"])(500);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 500);",
              "err": {},
              "uuid": "ce4801ba-5073-47f5-96ae-21a5f3679ccb",
              "parentUUID": "2497c83a-21fe-48d9-9cf0-25cb0fe741fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea2c61f4-0f36-4ba6-bdfe-adef9c326a13",
            "4f89a22a-eef7-465c-a2da-b90aaed34b1a",
            "11c09506-8942-4b0c-a6f8-564a1ef58596",
            "ce4801ba-5073-47f5-96ae-21a5f3679ccb"
          ],
          "failures": [
            "bf70f066-69a6-4d0f-98a9-a64fd46b5f68"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "14375f7c-5191-460b-9e50-f0d12692d5b2",
          "title": "toString test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/toString.test.js",
          "file": "/tests/toString.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should preserved -0",
              "fullTitle": "toString test should preserved -0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(-0)).to.equal('-0');",
              "err": {},
              "uuid": "7d60ef60-76f9-4680-a482-588621cd9c5e",
              "parentUUID": "14375f7c-5191-460b-9e50-f0d12692d5b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert array into a string",
              "fullTitle": "toString test should convert array into a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])([1, 2, 3])).to.equal('1,2,3');",
              "err": {},
              "uuid": "14d70403-3de2-4188-8863-7e2c99b34a16",
              "parentUUID": "14375f7c-5191-460b-9e50-f0d12692d5b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, undefined, boolean, NaN",
              "fullTitle": "toString test should not return string for null, undefined, boolean, NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(null)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(true)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(NaN)).to.not.equal('string');",
              "err": {},
              "uuid": "b76b6aa5-54d8-435b-8ed0-14c37978238e",
              "parentUUID": "14375f7c-5191-460b-9e50-f0d12692d5b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return string for number, object, string",
              "fullTitle": "toString test should return string for number, object, string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(123)).to.be.a('string');\nexpect((0, _toString[\"default\"])({\n  'a': 1\n})).to.be.a('string');\nexpect((0, _toString[\"default\"])('abc')).to.be.a('string');",
              "err": {},
              "uuid": "2576e9ef-1ce9-4722-9ea4-9d484a5a08e6",
              "parentUUID": "14375f7c-5191-460b-9e50-f0d12692d5b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d60ef60-76f9-4680-a482-588621cd9c5e",
            "14d70403-3de2-4188-8863-7e2c99b34a16",
            "b76b6aa5-54d8-435b-8ed0-14c37978238e",
            "2576e9ef-1ce9-4722-9ea4-9d484a5a08e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "da8ad8de-ce34-4eb5-a34c-96610cca42c2",
          "title": "upperFirst test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/upperFirst.test.js",
          "file": "/tests/upperFirst.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert fred into Fred",
              "fullTitle": "upperFirst test should convert fred into Fred",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])('fred')).to.equal('Fred');",
              "err": {},
              "uuid": "4b459c7d-7d6e-4dc7-9b0f-dd1cea50cbdd",
              "parentUUID": "da8ad8de-ce34-4eb5-a34c-96610cca42c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert FRED into FRED",
              "fullTitle": "upperFirst test should convert FRED into FRED",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])('FRED')).to.equal('FRED');",
              "err": {},
              "uuid": "a277cd51-e3d3-49fc-bfcb-8d11a42c75b4",
              "parentUUID": "da8ad8de-ce34-4eb5-a34c-96610cca42c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "upperFirst should return string",
              "fullTitle": "upperFirst test upperFirst should return string",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _upperFirst[\"default\"])('fred');\nexpect(result).to.be.a('string');",
              "err": {},
              "uuid": "7a3fb852-49c6-41d3-989f-d2aa1e3e5f8a",
              "parentUUID": "da8ad8de-ce34-4eb5-a34c-96610cca42c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, undefined, NaN",
              "fullTitle": "upperFirst test should not return string for null, undefined, NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])(null)).to.not.equal('string');\nexpect((0, _upperFirst[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _upperFirst[\"default\"])(NaN)).to.not.equal('string');",
              "err": {},
              "uuid": "60097e51-218b-4413-b4e6-ab8b0da0c2ea",
              "parentUUID": "da8ad8de-ce34-4eb5-a34c-96610cca42c2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4b459c7d-7d6e-4dc7-9b0f-dd1cea50cbdd",
            "a277cd51-e3d3-49fc-bfcb-8d11a42c75b4",
            "7a3fb852-49c6-41d3-989f-d2aa1e3e5f8a",
            "60097e51-218b-4413-b4e6-ab8b0da0c2ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f3ebc821-67a6-4b56-9ff1-9f5238479a50",
          "title": "Test word.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/words.test.js",
          "file": "/tests/words.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, method is failed because match method of String is missing",
              "fullTitle": "Test word.js function Give null to method, method is failed because match method of String is missing",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function () {\n  (0, _words[\"default\"])(null, null);\n}).to[\"throw\"](TypeError);",
              "err": {},
              "uuid": "be6f6c04-b9f3-4f0f-8256-1bfa8015f601",
              "parentUUID": "f3ebc821-67a6-4b56-9ff1-9f5238479a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, method is failed because match method of String is missing",
              "fullTitle": "Test word.js function Give undefined to method, method is failed because match method of String is missing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function () {\n  (0, _words[\"default\"])(undefined, null);\n}).to[\"throw\"](TypeError);",
              "err": {},
              "uuid": "9d11acde-7ac9-4ae4-af48-02ae62a1f449",
              "parentUUID": "f3ebc821-67a6-4b56-9ff1-9f5238479a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give empty string without pattern, return empty array",
              "fullTitle": "Test word.js function Give empty string without pattern, return empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _words[\"default\"])('')).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "d782207c-dc51-42b6-aaaf-1b564c0e008e",
              "parentUUID": "f3ebc821-67a6-4b56-9ff1-9f5238479a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give sample valid string, return array with splitted words and remove all special chars",
              "fullTitle": "Test word.js function Give sample valid string, return array with splitted words and remove all special chars",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _words[\"default\"])('abc.a abc abb')).to.be.instanceOf(Array).that.eql(['abc', 'a', 'abc', 'abb']);\nexpect((0, _words[\"default\"])('abc.a a,bc ab|b')).to.be.instanceOf(Array).that.eql(['abc', 'a', 'a', 'bc', 'ab', 'b']);",
              "err": {},
              "uuid": "dfc432c8-c401-43d2-8d48-e8bc174f51fa",
              "parentUUID": "f3ebc821-67a6-4b56-9ff1-9f5238479a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give sample valid string, return array with splitted words match patterns",
              "fullTitle": "Test word.js function Give sample valid string, return array with splitted words match patterns",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var SPLIT_WORDS_BY_SPACE_AND_COMMA = /[^, ]+/g;\nexpect((0, _words[\"default\"])('abc.a ab,c abb', SPLIT_WORDS_BY_SPACE_AND_COMMA)).to.be.instanceOf(Array).that.eql(['abc.a', 'ab', 'c', 'abb']);",
              "err": {},
              "uuid": "2106227a-0f75-4c25-a8e9-4467f45b24c4",
              "parentUUID": "f3ebc821-67a6-4b56-9ff1-9f5238479a50",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be6f6c04-b9f3-4f0f-8256-1bfa8015f601",
            "9d11acde-7ac9-4ae4-af48-02ae62a1f449",
            "d782207c-dc51-42b6-aaaf-1b564c0e008e",
            "dfc432c8-c401-43d2-8d48-e8bc174f51fa",
            "2106227a-0f75-4c25-a8e9-4467f45b24c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportFilename": "index"
      },
      "version": "5.1.0"
    }
  }
}