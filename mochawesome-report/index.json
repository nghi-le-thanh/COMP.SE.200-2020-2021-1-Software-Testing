{
  "stats": {
    "suites": 18,
    "tests": 80,
    "passes": 68,
    "pending": 0,
    "failures": 12,
    "start": "2020-12-01T14:10:15.237Z",
    "end": "2020-12-01T14:10:15.290Z",
    "duration": 53,
    "testsRegistered": 80,
    "passPercent": 85,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1ceb645c-0447-42c8-834e-d50d8a9a87d5",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ce4a2f68-486b-47f9-99e6-00109a4b234b",
          "title": "add.js test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/add.test.js",
          "file": "/tests/add.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1 + 2 should return 3",
              "fullTitle": "add.js test 1 + 2 should return 3",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(1, 2)).to.equal(3);",
              "err": {},
              "uuid": "0fc2ba30-646a-4232-974e-3635fc43f09a",
              "parentUUID": "ce4a2f68-486b-47f9-99e6-00109a4b234b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "'1' + 5 should return 6, number type",
              "fullTitle": "add.js test '1' + 5 should return 6, number type",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])('1', 5)).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:13:32)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "fbe86661-8a57-47e0-98f2-a12882ca7555",
              "parentUUID": "ce4a2f68-486b-47f9-99e6-00109a4b234b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "'1' + '5' should return 6, number type",
              "fullTitle": "add.js test '1' + '5' should return 6, number type",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])('1', '5')).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:18:34)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "23c52df9-de4f-4ff0-af17-7407ba9b9bd4",
              "parentUUID": "ce4a2f68-486b-47f9-99e6-00109a4b234b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "1 + '5' should return 6, number type",
              "fullTitle": "add.js test 1 + '5' should return 6, number type",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(1, '5')).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:23:32)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "2f3d99cc-6ace-477d-a4b2-cdb007b0969f",
              "parentUUID": "ce4a2f68-486b-47f9-99e6-00109a4b234b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null + 5 should return 5",
              "fullTitle": "add.js test null + 5 should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(null, 5)).to.equal(5);",
              "err": {},
              "uuid": "d54e8cba-a512-4e02-99b9-b9ca47e1dfd2",
              "parentUUID": "ce4a2f68-486b-47f9-99e6-00109a4b234b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "5 + undefined should return 5",
              "fullTitle": "add.js test 5 + undefined should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(5, undefined)).to.equal(5);",
              "err": {},
              "uuid": "46c6db00-59c0-41c4-892b-a9b350e56b2a",
              "parentUUID": "ce4a2f68-486b-47f9-99e6-00109a4b234b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null + undefined should return",
              "fullTitle": "add.js test null + undefined should return",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(null, undefined)).to.equal(0);",
              "err": {
                "message": "AssertionError: expected null to equal 0",
                "estack": "AssertionError: expected null to equal 0\n    at Context.<anonymous> (tests/add.test.js:36:41)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "faf53c92-6d18-43f8-99b7-62bdb9f4ec53",
              "parentUUID": "ce4a2f68-486b-47f9-99e6-00109a4b234b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0fc2ba30-646a-4232-974e-3635fc43f09a",
            "d54e8cba-a512-4e02-99b9-b9ca47e1dfd2",
            "46c6db00-59c0-41c4-892b-a9b350e56b2a"
          ],
          "failures": [
            "fbe86661-8a57-47e0-98f2-a12882ca7555",
            "23c52df9-de4f-4ff0-af17-7407ba9b9bd4",
            "2f3d99cc-6ace-477d-a4b2-cdb007b0969f",
            "faf53c92-6d18-43f8-99b7-62bdb9f4ec53"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "330d3615-eba4-4e5f-ad2d-be2906c1f1ac",
          "title": "Test at.js function",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/at.test.js",
          "file": "/tests/at.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return empty array",
              "fullTitle": "Test at.js function Give null to method, return empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(null)).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "993b0956-2f59-403e-845b-4709be8d729f",
              "parentUUID": "330d3615-eba4-4e5f-ad2d-be2906c1f1ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method with correct path, return empty array",
              "fullTitle": "Test at.js function Give undefined to method with correct path, return empty array",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(undefined, ['title'])).to.be.instanceOf(Array).that.eql([]);",
              "err": {
                "message": "AssertionError: expected [ undefined ] to deeply equal []",
                "estack": "AssertionError: expected [ undefined ] to deeply equal []\n    at Context.<anonymous> (tests/at.test.js:24:71)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- [\n-   [undefined]\n- ]\n+ []\n"
              },
              "uuid": "b958169f-e746-4e3d-b428-46432932717a",
              "parentUUID": "330d3615-eba4-4e5f-ad2d-be2906c1f1ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, return empty array",
              "fullTitle": "Test at.js function Give valid to method, return empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT)).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "439b293e-21f8-4fce-bf44-8990ca98947d",
              "parentUUID": "330d3615-eba4-4e5f-ad2d-be2906c1f1ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, with correct path. Return valid result",
              "fullTitle": "Test at.js function Give valid to method, with correct path. Return valid result",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT, ['title'])).to.be.instanceOf(Array).that.eql([VALID_OBJECT.title]);",
              "err": {},
              "uuid": "f4db2e20-61b0-4223-b4a5-aa60644b200e",
              "parentUUID": "330d3615-eba4-4e5f-ad2d-be2906c1f1ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, with correct paths. Return valid results",
              "fullTitle": "Test at.js function Give valid to method, with correct paths. Return valid results",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT, ['title', 'tags[0]'])).to.be.instanceOf(Array).that.eql([VALID_OBJECT.title, VALID_OBJECT.tags[0]]);",
              "err": {},
              "uuid": "89ecfefb-23ca-4da5-ba56-ce78dfe53001",
              "parentUUID": "330d3615-eba4-4e5f-ad2d-be2906c1f1ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "993b0956-2f59-403e-845b-4709be8d729f",
            "439b293e-21f8-4fce-bf44-8990ca98947d",
            "f4db2e20-61b0-4223-b4a5-aa60644b200e",
            "89ecfefb-23ca-4da5-ba56-ce78dfe53001"
          ],
          "failures": [
            "b958169f-e746-4e3d-b428-46432932717a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d3e005ff-a561-4e94-982d-5b868f3aea63",
          "title": "camelCase.js test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/camelCase.test.js",
          "file": "/tests/camelCase.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test assigning an object to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning an object to the method. Expect an empty string",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])({\n  foo: 'bar'\n}), '');",
              "err": {
                "message": "AssertionError: expected ' objectObject' to equal ''",
                "estack": "AssertionError: expected ' objectObject' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:9:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  objectObject\n"
              },
              "uuid": "c30e4d95-3464-48ca-bc6e-48bce8f17ef8",
              "parentUUID": "d3e005ff-a561-4e94-982d-5b868f3aea63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning null to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning null to the method. Expect an empty string",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(null), '');",
              "err": {
                "message": "AssertionError: expected ' null' to equal ''",
                "estack": "AssertionError: expected ' null' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:14:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  null\n"
              },
              "uuid": "5353c34f-b015-4e9d-930b-60982b355576",
              "parentUUID": "d3e005ff-a561-4e94-982d-5b868f3aea63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning undefined to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning undefined to the method. Expect an empty string",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(undefined), '');",
              "err": {
                "message": "AssertionError: expected ' undefined' to equal ''",
                "estack": "AssertionError: expected ' undefined' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:19:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  undefined\n"
              },
              "uuid": "5dbeed55-85d6-4a90-a6f7-2cb4cdff00a5",
              "parentUUID": "d3e005ff-a561-4e94-982d-5b868f3aea63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning true to the method. Expect boolean in lowercase",
              "fullTitle": "camelCase.js test Test assigning true to the method. Expect boolean in lowercase",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(true), 'true');",
              "err": {
                "message": "AssertionError: expected ' true' to equal 'true'",
                "estack": "AssertionError: expected ' true' to equal 'true'\n    at Context.<anonymous> (tests/camelCase.test.js:24:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  true\n+ true\n"
              },
              "uuid": "70ceeec6-492f-47c5-962e-fc3bf8058be2",
              "parentUUID": "d3e005ff-a561-4e94-982d-5b868f3aea63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning valid string to the method. Expect correctly converted value",
              "fullTitle": "camelCase.js test Test assigning valid string to the method. Expect correctly converted value",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])('hello world'), 'helloWorld');",
              "err": {
                "message": "AssertionError: expected ' helloWorld' to equal 'helloWorld'",
                "estack": "AssertionError: expected ' helloWorld' to equal 'helloWorld'\n    at Context.<anonymous> (tests/camelCase.test.js:29:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  helloWorld\n+ helloWorld\n"
              },
              "uuid": "63f7ad86-2f1d-426f-810e-b4eea964ae5f",
              "parentUUID": "d3e005ff-a561-4e94-982d-5b868f3aea63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning valid string with special chars to the method. Expect correctly converted value",
              "fullTitle": "camelCase.js test Test assigning valid string with special chars to the method. Expect correctly converted value",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])('___hello-world! assignment^'), 'helloWorldAssignment');",
              "err": {
                "message": "AssertionError: expected ' helloWorldAssignment' to equal 'helloWorldAssignment'",
                "estack": "AssertionError: expected ' helloWorldAssignment' to equal 'helloWorldAssignment'\n    at Context.<anonymous> (tests/camelCase.test.js:34:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  helloWorldAssignment\n+ helloWorldAssignment\n"
              },
              "uuid": "1b370596-9490-497f-ba76-d9b2bba253bd",
              "parentUUID": "d3e005ff-a561-4e94-982d-5b868f3aea63",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c30e4d95-3464-48ca-bc6e-48bce8f17ef8",
            "5353c34f-b015-4e9d-930b-60982b355576",
            "5dbeed55-85d6-4a90-a6f7-2cb4cdff00a5",
            "70ceeec6-492f-47c5-962e-fc3bf8058be2",
            "63f7ad86-2f1d-426f-810e-b4eea964ae5f",
            "1b370596-9490-497f-ba76-d9b2bba253bd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "23a7800e-33f0-4648-be63-b8be4f800f3b",
          "title": "capitalize test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/capitalize.test.js",
          "file": "/tests/capitalize.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert FRED into Fred",
              "fullTitle": "capitalize test should convert FRED into Fred",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])('FRED')).to.equal('Fred');",
              "err": {},
              "uuid": "0cf28abb-fbc1-4a1e-92d4-066ff63c5aa3",
              "parentUUID": "23a7800e-33f0-4648-be63-b8be4f800f3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "capitalize should return string",
              "fullTitle": "capitalize test capitalize should return string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _capitalize[\"default\"])('fred');\nexpect(result).to.be.a('string');",
              "err": {},
              "uuid": "8a8e0c84-6a2d-4a14-80f6-6516339c22e5",
              "parentUUID": "23a7800e-33f0-4648-be63-b8be4f800f3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, boolean, undefined, number",
              "fullTitle": "capitalize test should not return string for null, boolean, undefined, number",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])(null)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(true)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(123)).to.not.equal('string');",
              "err": {},
              "uuid": "da9622b3-6747-4f84-a526-c01e0c2c22f0",
              "parentUUID": "23a7800e-33f0-4648-be63-b8be4f800f3b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0cf28abb-fbc1-4a1e-92d4-066ff63c5aa3",
            "8a8e0c84-6a2d-4a14-80f6-6516339c22e5",
            "da9622b3-6747-4f84-a526-c01e0c2c22f0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "478c872c-adb1-40a4-acff-9e4cdef3aeee",
          "title": "castArray.js test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/castArray.test.js",
          "file": "/tests/castArray.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cast null should return array with null as first item",
              "fullTitle": "castArray.js test cast null should return array with null as first item",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual([null], (0, _castArray[\"default\"])(null));",
              "err": {},
              "uuid": "317c95f1-350a-4af6-b5d7-f88a087937b4",
              "parentUUID": "478c872c-adb1-40a4-acff-9e4cdef3aeee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast undefined should return array with undefined as first item",
              "fullTitle": "castArray.js test cast undefined should return array with undefined as first item",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual([undefined], (0, _castArray[\"default\"])(undefined));",
              "err": {},
              "uuid": "2220b4c2-861c-47bb-8ff9-b9e1076ac039",
              "parentUUID": "478c872c-adb1-40a4-acff-9e4cdef3aeee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast nothing should return an empty array",
              "fullTitle": "castArray.js test cast nothing should return an empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.deepEqual([], (0, _castArray[\"default\"])());\n} catch (error) {\n  console.warn('Fail test cast nothing should return an empty array. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "b1e51318-1ca1-41c9-8915-ee4c44023545",
              "parentUUID": "478c872c-adb1-40a4-acff-9e4cdef3aeee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast parameters 1, 'a', 5 should return an array [1, 'a', 5] ",
              "fullTitle": "castArray.js test cast parameters 1, 'a', 5 should return an array [1, 'a', 5] ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.deepEqual((0, _castArray[\"default\"])(1, 'a', 5), [1, 'a', 5]);\n} catch (error) {\n  console.warn('Fail cast parameters 1, \\'a\\', 5 should return an array [1, \\'a\\', 5]. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "655f940a-c054-4ba7-b736-69eadaad0cf3",
              "parentUUID": "478c872c-adb1-40a4-acff-9e4cdef3aeee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast a parameter 'abc' should return an array ['abc'] ",
              "fullTitle": "castArray.js test cast a parameter 'abc' should return an array ['abc'] ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _castArray[\"default\"])('abc'), ['abc']);",
              "err": {},
              "uuid": "4f30c605-d51c-4ff3-8e6c-23c0c2cd8d2a",
              "parentUUID": "478c872c-adb1-40a4-acff-9e4cdef3aeee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast a parameter {foo: 'abc'} should return an array [{foo: 'abc'}] ",
              "fullTitle": "castArray.js test cast a parameter {foo: 'abc'} should return an array [{foo: 'abc'}] ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _castArray[\"default\"])({\n  foo: 'abc'\n}), [{\n  foo: 'abc'\n}]);",
              "err": {},
              "uuid": "13d974da-ce74-482e-9564-cd5bd2fc5205",
              "parentUUID": "478c872c-adb1-40a4-acff-9e4cdef3aeee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast parameters (3, [2, 3]) should return an array [3, 2, 3]",
              "fullTitle": "castArray.js test cast parameters (3, [2, 3]) should return an array [3, 2, 3]",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.deepEqual((0, _castArray[\"default\"])(3, [2, 3]), [3, 2, 3]);\n} catch (error) {\n  console.warn('Fail test cast parameters (3, [2, 3]) should return an array [3, 2, 3]. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "19c1de20-0b5a-4f69-815e-c32843f086a0",
              "parentUUID": "478c872c-adb1-40a4-acff-9e4cdef3aeee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "317c95f1-350a-4af6-b5d7-f88a087937b4",
            "2220b4c2-861c-47bb-8ff9-b9e1076ac039",
            "b1e51318-1ca1-41c9-8915-ee4c44023545",
            "655f940a-c054-4ba7-b736-69eadaad0cf3",
            "4f30c605-d51c-4ff3-8e6c-23c0c2cd8d2a",
            "13d974da-ce74-482e-9564-cd5bd2fc5205",
            "19c1de20-0b5a-4f69-815e-c32843f086a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aab2235d-98ff-4573-9441-00c2d10dcf79",
          "title": "ceil test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/ceil.test.js",
          "file": "/tests/ceil.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "4.006 with precision 0 should return 5",
              "fullTitle": "ceil test 4.006 with precision 0 should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(4.006)).to.equal(5);",
              "err": {},
              "uuid": "f782dfc3-66b0-4c33-afc4-677c9f65bc49",
              "parentUUID": "aab2235d-98ff-4573-9441-00c2d10dcf79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6.004 with precision 2 should return 6.01",
              "fullTitle": "ceil test 6.004 with precision 2 should return 6.01",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(6.004, 2)).to.equal(6.01);",
              "err": {},
              "uuid": "ab8e5c34-3a93-46ec-9357-89d338d0444c",
              "parentUUID": "aab2235d-98ff-4573-9441-00c2d10dcf79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6040 with precision -2 should return 6100",
              "fullTitle": "ceil test 6040 with precision -2 should return 6100",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(6040, -2)).to.equal(6100);",
              "err": {},
              "uuid": "85433658-73ef-48cd-aa59-69fbb03bade8",
              "parentUUID": "aab2235d-98ff-4573-9441-00c2d10dcf79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "passing null, undefined, NaN, string should not give results",
              "fullTitle": "ceil test passing null, undefined, NaN, string should not give results",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(null)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])(undefined)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])(NaN)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])('abc')).to.not.equal('number');",
              "err": {},
              "uuid": "81d95cd1-341f-4c94-a368-9876e65572d3",
              "parentUUID": "aab2235d-98ff-4573-9441-00c2d10dcf79",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f782dfc3-66b0-4c33-afc4-677c9f65bc49",
            "ab8e5c34-3a93-46ec-9357-89d338d0444c",
            "85433658-73ef-48cd-aa59-69fbb03bade8",
            "81d95cd1-341f-4c94-a368-9876e65572d3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e8dd8c5f-f08f-4f3b-99c0-685f9b9278bd",
          "title": "chunk.js test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/chunk.test.js",
          "file": "/tests/chunk.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "chunk a valid array with zero size, expect return unchanged array",
              "fullTitle": "chunk.js test chunk a valid array with zero size, expect return unchanged array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.deepEqual((0, _chunk[\"default\"])([1, 2, 3], 0), [1, 2, 3]);\n} catch (error) {\n  console.warn('Fail test chunk a valid array with zero size, expect return unchanged array. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "5f1bb9c0-7035-40f7-83fe-0d47dba0c89c",
              "parentUUID": "e8dd8c5f-f08f-4f3b-99c0-685f9b9278bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk a valid array with negavitve size, expect empty array",
              "fullTitle": "chunk.js test chunk a valid array with negavitve size, expect empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _chunk[\"default\"])([1, 2, 3], -100.55), []);",
              "err": {},
              "uuid": "7d2bd86a-e436-4ce2-b84e-6d3139f08b3f",
              "parentUUID": "e8dd8c5f-f08f-4f3b-99c0-685f9b9278bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk an empty array with valid size, expect empty array",
              "fullTitle": "chunk.js test chunk an empty array with valid size, expect empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _chunk[\"default\"])([], 10), []);",
              "err": {},
              "uuid": "9e2e6449-bb5d-4ffc-8984-5771aef60723",
              "parentUUID": "e8dd8c5f-f08f-4f3b-99c0-685f9b9278bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk an empty array with negative size, expect empty array",
              "fullTitle": "chunk.js test chunk an empty array with negative size, expect empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _chunk[\"default\"])([], -10), []);",
              "err": {},
              "uuid": "db2c21ff-5b7d-44ed-9a86-61fdfe8c9b9b",
              "parentUUID": "e8dd8c5f-f08f-4f3b-99c0-685f9b9278bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk invalid type with valid size, expect thrown error",
              "fullTitle": "chunk.js test chunk invalid type with valid size, expect thrown error",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert[\"throws\"](function () {\n    (0, _chunk[\"default\"])(\"hello world\", 2);\n  }, 'Invalid input');\n} catch (error) {\n  console.warn('chunk invalid type with valid size, expect thrown error. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "a8838b0f-ceb8-46eb-87e0-011c8875b8f9",
              "parentUUID": "e8dd8c5f-f08f-4f3b-99c0-685f9b9278bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk valid type with valid size, expect valid sub arrays",
              "fullTitle": "chunk.js test chunk valid type with valid size, expect valid sub arrays",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  assert.deepEqual((0, _chunk[\"default\"])(['foo', 'doctor', 'hello'], 2), [['foo', 'doctor'], ['hello']]);\n} catch (error) {\n  console.warn('Unexpected fail test chunk valid type with valid size, expect valid sub arrays. Reason: ', error.message);\n}",
              "err": {},
              "uuid": "d7025d48-d408-4780-9f37-0c3a41fe96b0",
              "parentUUID": "e8dd8c5f-f08f-4f3b-99c0-685f9b9278bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5f1bb9c0-7035-40f7-83fe-0d47dba0c89c",
            "7d2bd86a-e436-4ce2-b84e-6d3139f08b3f",
            "9e2e6449-bb5d-4ffc-8984-5771aef60723",
            "db2c21ff-5b7d-44ed-9a86-61fdfe8c9b9b",
            "a8838b0f-ceb8-46eb-87e0-011c8875b8f9",
            "d7025d48-d408-4780-9f37-0c3a41fe96b0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f6870453-52ca-4561-add7-409deaf5c885",
          "title": "eq test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/eq.test.js",
          "file": "/tests/eq.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if same objects are compared",
              "fullTitle": "eq test should return true if same objects are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var object = {\n  'a': 1\n};\nvar result = (0, _eq[\"default\"])(object, object);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "97cf9d27-045e-4b82-8a0b-44503e0d2dff",
              "parentUUID": "f6870453-52ca-4561-add7-409deaf5c885",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if same strings are compared",
              "fullTitle": "eq test should return true if same strings are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])('a', 'a')).to.be[\"true\"];",
              "err": {},
              "uuid": "2b04e457-1f42-4668-8317-0769545adbd1",
              "parentUUID": "f6870453-52ca-4561-add7-409deaf5c885",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if same numbers are compared",
              "fullTitle": "eq test should return true if same numbers are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])(123, 123)).to.be[\"true\"];",
              "err": {},
              "uuid": "2e470fba-45be-4f37-a5e0-2345cb5f46be",
              "parentUUID": "f6870453-52ca-4561-add7-409deaf5c885",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if values are not quivalent",
              "fullTitle": "eq test should return false if values are not quivalent",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])('a', NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "952a5bbb-5d8f-4958-9c48-f4d36f1d505c",
              "parentUUID": "f6870453-52ca-4561-add7-409deaf5c885",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if string and object is compared",
              "fullTitle": "eq test should return false if string and object is compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var object = {\n  'a': 1\n};\nexpect((0, _eq[\"default\"])('a', object)).to.be[\"false\"];",
              "err": {},
              "uuid": "f5366b5a-cb97-44d7-87ef-ebda9009cfa7",
              "parentUUID": "f6870453-52ca-4561-add7-409deaf5c885",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "97cf9d27-045e-4b82-8a0b-44503e0d2dff",
            "2b04e457-1f42-4668-8317-0769545adbd1",
            "2e470fba-45be-4f37-a5e0-2345cb5f46be",
            "952a5bbb-5d8f-4958-9c48-f4d36f1d505c",
            "f5366b5a-cb97-44d7-87ef-ebda9009cfa7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fe9667de-2bdc-42b8-94d6-98d693d5056b",
          "title": "every test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/every.test.js",
          "file": "/tests/every.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if all array elements pass the predicate check",
              "fullTitle": "every test should return true if all array elements pass the predicate check",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = ['1', 'yes'];\nvar result = (0, _every[\"default\"])(array, String);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "2aa0254f-7c67-4710-af21-7849192def1e",
              "parentUUID": "fe9667de-2bdc-42b8-94d6-98d693d5056b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for empty arrays",
              "fullTitle": "every test should return true for empty arrays",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [];\nvar result = (0, _every[\"default\"])(array, String);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "4f05be5f-bd36-4152-9559-3495955812d4",
              "parentUUID": "fe9667de-2bdc-42b8-94d6-98d693d5056b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if all array elements did not pass the predicate check",
              "fullTitle": "every test should return false if all array elements did not pass the predicate check",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [true, 1, null, 'yes'];\nvar result = (0, _every[\"default\"])(array, Boolean);\nexpect(result).to.be[\"false\"];",
              "err": {},
              "uuid": "7d7fc09b-704a-46f4-af4b-f6769147ee74",
              "parentUUID": "fe9667de-2bdc-42b8-94d6-98d693d5056b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return boolean if array is not passed",
              "fullTitle": "every test should not return boolean if array is not passed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _every[\"default\"])('abc', String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(123, Number)).to.not.equal('boolean');",
              "err": {},
              "uuid": "a7c8c0d5-0485-4f16-b99a-9ee1290af226",
              "parentUUID": "fe9667de-2bdc-42b8-94d6-98d693d5056b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return boolean if null, NaN, undefined is passed",
              "fullTitle": "every test should not return boolean if null, NaN, undefined is passed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _every[\"default\"])(null, String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(NaN, String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(undefined, String)).to.not.equal('boolean');",
              "err": {},
              "uuid": "c7ed1ee3-e6b5-4817-b37b-178bb061e8a2",
              "parentUUID": "fe9667de-2bdc-42b8-94d6-98d693d5056b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2aa0254f-7c67-4710-af21-7849192def1e",
            "4f05be5f-bd36-4152-9559-3495955812d4",
            "7d7fc09b-704a-46f4-af4b-f6769147ee74",
            "a7c8c0d5-0485-4f16-b99a-9ee1290af226",
            "c7ed1ee3-e6b5-4817-b37b-178bb061e8a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c04a1f43-d77d-46ad-9c26-6327eca5eadb",
          "title": "isBoolean test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/isBoolean.test.js",
          "file": "/tests/isBoolean.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is Boolean",
              "fullTitle": "isBoolean test should return true if value is Boolean",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isBoolean[\"default\"])(true)).to.be[\"true\"];\nexpect((0, _isBoolean[\"default\"])(false)).to.be[\"true\"];",
              "err": {},
              "uuid": "3fe79be5-a0cb-4af2-bd45-46f37e8d2184",
              "parentUUID": "c04a1f43-d77d-46ad-9c26-6327eca5eadb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not Boolean",
              "fullTitle": "isBoolean test should return false if value is not Boolean",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isBoolean[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isBoolean[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isBoolean[\"default\"])(12)).to.be[\"false\"];\nexpect((0, _isBoolean[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isBoolean[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isBoolean[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "f8e36afa-c09b-42c0-8846-cc0824505616",
              "parentUUID": "c04a1f43-d77d-46ad-9c26-6327eca5eadb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3fe79be5-a0cb-4af2-bd45-46f37e8d2184",
            "f8e36afa-c09b-42c0-8846-cc0824505616"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "78525186-4103-4463-a5c5-7efc64a6bc88",
          "title": "isBuffer test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/isBuffer.test.js",
          "file": "/tests/isBuffer.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is a Buffer",
              "fullTitle": "isBuffer test should return true if value is a Buffer",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isBuffer[\"default\"])(Buffer.from('abc'))).to.be[\"true\"];\nexpect((0, _isBuffer[\"default\"])(Buffer.alloc(2))).to.be[\"true\"];\nexpect((0, _isBuffer[\"default\"])(Buffer.from([1, 2, 3]))).to.be[\"true\"];",
              "err": {},
              "uuid": "d834eae9-830b-498c-b963-95cf3281c109",
              "parentUUID": "78525186-4103-4463-a5c5-7efc64a6bc88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not a Buffer",
              "fullTitle": "isBuffer test should return false if value is not a Buffer",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isBuffer[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isBuffer[\"default\"])(12)).to.be[\"false\"];\nexpect((0, _isBuffer[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isBuffer[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isBuffer[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "d4fc6503-4618-4313-89d8-722a4493badc",
              "parentUUID": "78525186-4103-4463-a5c5-7efc64a6bc88",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d834eae9-830b-498c-b963-95cf3281c109",
            "d4fc6503-4618-4313-89d8-722a4493badc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "38f16e57-2eac-4000-af0f-a4c1134503ac",
          "title": "isDate test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/isDate.test.js",
          "file": "/tests/isDate.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is a Date object",
              "fullTitle": "isDate test should return true if value is a Date object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])(new Date())).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11, 24, 10, 33, 30, 0))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11, 24, 10, 33, 30))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11, 24, 10, 33))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11, 24, 10))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11, 24))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(\"October 13, 2014 11:13:00\"))).to.be[\"true\"];",
              "err": {},
              "uuid": "7f6a2c0a-3330-49f8-ab2f-86ec0cfae64e",
              "parentUUID": "38f16e57-2eac-4000-af0f-a4c1134503ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not a Date object",
              "fullTitle": "isDate test should return false if value is not a Date object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])('Mon April 23 2012')).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])(12)).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "f8d1f778-a873-4aec-aeff-857c626f1e3d",
              "parentUUID": "38f16e57-2eac-4000-af0f-a4c1134503ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f6a2c0a-3330-49f8-ab2f-86ec0cfae64e",
            "f8d1f778-a873-4aec-aeff-857c626f1e3d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "04bc586d-957a-435b-a40a-b981d4f9761b",
          "title": "isEmpty test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/isEmpty.test.js",
          "file": "/tests/isEmpty.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is Empty",
              "fullTitle": "isEmpty test should return true if value is Empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])(null)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(true)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(1)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(undefined)).to.be[\"true\"];",
              "err": {},
              "uuid": "951fc095-1f77-4b78-bc93-823a74bcc138",
              "parentUUID": "04bc586d-957a-435b-a40a-b981d4f9761b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not Empty",
              "fullTitle": "isEmpty test should return false if value is not Empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isEmpty[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isEmpty[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "4ab55445-5b07-4db9-960c-17f6bd2e4716",
              "parentUUID": "04bc586d-957a-435b-a40a-b981d4f9761b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "951fc095-1f77-4b78-bc93-823a74bcc138",
            "4ab55445-5b07-4db9-960c-17f6bd2e4716"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6e0d787d-0a4e-4ee2-9e15-52711155bd45",
          "title": "Test toFinite.js function",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/toFinite.test.js",
          "file": "/tests/toFinite.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return NAN",
              "fullTitle": "Test toFinite.js function Give null to method, return NAN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])(null)).to.eql(0);",
              "err": {},
              "uuid": "0a4ec0ec-2f24-466c-b9e5-5d70267f0b79",
              "parentUUID": "6e0d787d-0a4e-4ee2-9e15-52711155bd45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, return NaN",
              "fullTitle": "Test toFinite.js function Give undefined to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])(undefined)).to.eql(0);",
              "err": {},
              "uuid": "73a85ac0-3c39-4975-956f-5d9a55d70666",
              "parentUUID": "6e0d787d-0a4e-4ee2-9e15-52711155bd45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give invalid number string to method, return NaN",
              "fullTitle": "Test toFinite.js function Give invalid number string to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])('a string with a value')).to.eql(0);",
              "err": {},
              "uuid": "61cea6ed-69b5-4f9a-b91b-938bffaef425",
              "parentUUID": "6e0d787d-0a4e-4ee2-9e15-52711155bd45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give Hexadecimals number string to method, return converted base 10",
              "fullTitle": "Test toFinite.js function Give Hexadecimals number string to method, return converted base 10",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal((0, _toFinite[\"default\"])('0xabcdef'), 11259375);",
              "err": {},
              "uuid": "a9dbaa55-13f0-4027-9078-7a7cd6a6e259",
              "parentUUID": "6e0d787d-0a4e-4ee2-9e15-52711155bd45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid number to method, return number type and same value",
              "fullTitle": "Test toFinite.js function Give valid number to method, return number type and same value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toFinite[\"default\"])(3.44532);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 3.44532);",
              "err": {},
              "uuid": "908af77f-fa21-4597-9a81-b541ceac9f13",
              "parentUUID": "6e0d787d-0a4e-4ee2-9e15-52711155bd45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give maximum int value to method, return number type and converted value",
              "fullTitle": "Test toFinite.js function Give maximum int value to method, return number type and converted value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toFinite[\"default\"])(Infinity);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 1.7976931348623157e+308);",
              "err": {},
              "uuid": "f6052179-43cc-4647-a8c0-05e83687607b",
              "parentUUID": "6e0d787d-0a4e-4ee2-9e15-52711155bd45",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a4ec0ec-2f24-466c-b9e5-5d70267f0b79",
            "73a85ac0-3c39-4975-956f-5d9a55d70666",
            "61cea6ed-69b5-4f9a-b91b-938bffaef425",
            "a9dbaa55-13f0-4027-9078-7a7cd6a6e259",
            "908af77f-fa21-4597-9a81-b541ceac9f13",
            "f6052179-43cc-4647-a8c0-05e83687607b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f08ef03b-887f-482c-8843-d3a2b2d02cd1",
          "title": "Test toNumber.js function",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/toNumber.test.js",
          "file": "/tests/toNumber.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return NAN",
              "fullTitle": "Test toNumber.js function Give null to method, return NAN",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])(null)).to.be.NaN;",
              "err": {
                "message": "AssertionError: expected 0 to be NaN",
                "estack": "AssertionError: expected 0 to be NaN\n    at Context.<anonymous> (tests/toNumber.test.js:11:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "b17677a5-325a-4d4c-a231-752109bc3907",
              "parentUUID": "f08ef03b-887f-482c-8843-d3a2b2d02cd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, return NaN",
              "fullTitle": "Test toNumber.js function Give undefined to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])(undefined)).to.be.NaN;",
              "err": {},
              "uuid": "2a51cec0-300f-43b4-b9d6-2e2972e4508b",
              "parentUUID": "f08ef03b-887f-482c-8843-d3a2b2d02cd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give invalid number string to method, return NaN",
              "fullTitle": "Test toNumber.js function Give invalid number string to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])('Hello world!')).to.be.NaN;",
              "err": {},
              "uuid": "a8e32e40-63f7-4eb0-8138-c42427da8385",
              "parentUUID": "f08ef03b-887f-482c-8843-d3a2b2d02cd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give Hexadecimals number string to method, return converted base 10",
              "fullTitle": "Test toNumber.js function Give Hexadecimals number string to method, return converted base 10",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal((0, _toNumber[\"default\"])('0xabcdef'), 11259375);",
              "err": {},
              "uuid": "193d1607-edf4-444a-b5e1-677c5d79a3e1",
              "parentUUID": "f08ef03b-887f-482c-8843-d3a2b2d02cd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid number string to method, return number type and same value",
              "fullTitle": "Test toNumber.js function Give valid number string to method, return number type and same value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toNumber[\"default\"])(500);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 500);",
              "err": {},
              "uuid": "76c7cf95-7b32-4abe-8268-a9ac32813864",
              "parentUUID": "f08ef03b-887f-482c-8843-d3a2b2d02cd1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2a51cec0-300f-43b4-b9d6-2e2972e4508b",
            "a8e32e40-63f7-4eb0-8138-c42427da8385",
            "193d1607-edf4-444a-b5e1-677c5d79a3e1",
            "76c7cf95-7b32-4abe-8268-a9ac32813864"
          ],
          "failures": [
            "b17677a5-325a-4d4c-a231-752109bc3907"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "53e08623-6146-48c0-8c54-98aef3c3ae21",
          "title": "toString test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/toString.test.js",
          "file": "/tests/toString.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should preserved -0",
              "fullTitle": "toString test should preserved -0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(-0)).to.equal('-0');",
              "err": {},
              "uuid": "47acc3f3-fc9a-405d-9b5a-605226c624ae",
              "parentUUID": "53e08623-6146-48c0-8c54-98aef3c3ae21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert array into a string",
              "fullTitle": "toString test should convert array into a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])([1, 2, 3])).to.equal('1,2,3');",
              "err": {},
              "uuid": "8cff82dc-9e05-48a6-afb5-673570c4b68e",
              "parentUUID": "53e08623-6146-48c0-8c54-98aef3c3ae21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, undefined, boolean, NaN",
              "fullTitle": "toString test should not return string for null, undefined, boolean, NaN",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(null)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(true)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(NaN)).to.not.equal('string');",
              "err": {},
              "uuid": "f484c90e-c42b-48c2-b12a-9f7d190cf5e9",
              "parentUUID": "53e08623-6146-48c0-8c54-98aef3c3ae21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return string for number, object, string",
              "fullTitle": "toString test should return string for number, object, string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(123)).to.be.a('string');\nexpect((0, _toString[\"default\"])({\n  'a': 1\n})).to.be.a('string');\nexpect((0, _toString[\"default\"])('abc')).to.be.a('string');",
              "err": {},
              "uuid": "e3d214f8-e13a-41de-b681-829195629fae",
              "parentUUID": "53e08623-6146-48c0-8c54-98aef3c3ae21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "47acc3f3-fc9a-405d-9b5a-605226c624ae",
            "8cff82dc-9e05-48a6-afb5-673570c4b68e",
            "f484c90e-c42b-48c2-b12a-9f7d190cf5e9",
            "e3d214f8-e13a-41de-b681-829195629fae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fe4ff273-700b-4cf6-9139-a721b1a9bbd6",
          "title": "upperFirst test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/upperFirst.test.js",
          "file": "/tests/upperFirst.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert fred into Fred",
              "fullTitle": "upperFirst test should convert fred into Fred",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])('fred')).to.equal('Fred');",
              "err": {},
              "uuid": "2426e911-868c-41e0-bced-ac11fb2ab568",
              "parentUUID": "fe4ff273-700b-4cf6-9139-a721b1a9bbd6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert FRED into FRED",
              "fullTitle": "upperFirst test should convert FRED into FRED",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])('FRED')).to.equal('FRED');",
              "err": {},
              "uuid": "92cd36ba-39ba-473d-8eda-b41565d547ba",
              "parentUUID": "fe4ff273-700b-4cf6-9139-a721b1a9bbd6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "upperFirst should return string",
              "fullTitle": "upperFirst test upperFirst should return string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _upperFirst[\"default\"])('fred');\nexpect(result).to.be.a('string');",
              "err": {},
              "uuid": "890ec024-af08-4b8f-bd89-24545e2c5de2",
              "parentUUID": "fe4ff273-700b-4cf6-9139-a721b1a9bbd6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, undefined, NaN",
              "fullTitle": "upperFirst test should not return string for null, undefined, NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])(null)).to.not.equal('string');\nexpect((0, _upperFirst[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _upperFirst[\"default\"])(NaN)).to.not.equal('string');",
              "err": {},
              "uuid": "9901fbf0-2948-4592-a08a-5484b63de3de",
              "parentUUID": "fe4ff273-700b-4cf6-9139-a721b1a9bbd6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2426e911-868c-41e0-bced-ac11fb2ab568",
            "92cd36ba-39ba-473d-8eda-b41565d547ba",
            "890ec024-af08-4b8f-bd89-24545e2c5de2",
            "9901fbf0-2948-4592-a08a-5484b63de3de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b91f093f-5e23-44e2-b78c-cff1c0d3ebd0",
          "title": "Test word.js function",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/tests/words.test.js",
          "file": "/tests/words.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, method is failed because match method of String is missing",
              "fullTitle": "Test word.js function Give null to method, method is failed because match method of String is missing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function () {\n  (0, _words[\"default\"])(null, null);\n}).to[\"throw\"](TypeError);",
              "err": {},
              "uuid": "df0a8742-748c-4909-97ee-240a2fc07dad",
              "parentUUID": "b91f093f-5e23-44e2-b78c-cff1c0d3ebd0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, method is failed because match method of String is missing",
              "fullTitle": "Test word.js function Give undefined to method, method is failed because match method of String is missing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function () {\n  (0, _words[\"default\"])(undefined, null);\n}).to[\"throw\"](TypeError);",
              "err": {},
              "uuid": "f3dc1ea7-0350-4c6c-a1ce-eceebfaeb4a2",
              "parentUUID": "b91f093f-5e23-44e2-b78c-cff1c0d3ebd0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give empty string without pattern, return empty array",
              "fullTitle": "Test word.js function Give empty string without pattern, return empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _words[\"default\"])('')).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "cd6b13bf-2f51-4369-aa9a-5617c120a5d1",
              "parentUUID": "b91f093f-5e23-44e2-b78c-cff1c0d3ebd0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give sample valid string, return array with splitted words and remove all special chars",
              "fullTitle": "Test word.js function Give sample valid string, return array with splitted words and remove all special chars",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _words[\"default\"])('abc.a abc abb')).to.be.instanceOf(Array).that.eql(['abc', 'a', 'abc', 'abb']);\nexpect((0, _words[\"default\"])('abc.a a,bc ab|b')).to.be.instanceOf(Array).that.eql(['abc', 'a', 'a', 'bc', 'ab', 'b']);",
              "err": {},
              "uuid": "f3d2acbd-7f6b-4e2a-a01f-7fbcc1518e76",
              "parentUUID": "b91f093f-5e23-44e2-b78c-cff1c0d3ebd0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give sample valid string, return array with splitted words match patterns",
              "fullTitle": "Test word.js function Give sample valid string, return array with splitted words match patterns",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var SPLIT_WORDS_BY_SPACE_AND_COMMA = /[^, ]+/g;\nexpect((0, _words[\"default\"])('abc.a ab,c abb', SPLIT_WORDS_BY_SPACE_AND_COMMA)).to.be.instanceOf(Array).that.eql(['abc.a', 'ab', 'c', 'abb']);",
              "err": {},
              "uuid": "09767a1c-5cee-4a8d-916b-7c8542c3c71e",
              "parentUUID": "b91f093f-5e23-44e2-b78c-cff1c0d3ebd0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "df0a8742-748c-4909-97ee-240a2fc07dad",
            "f3dc1ea7-0350-4c6c-a1ce-eceebfaeb4a2",
            "cd6b13bf-2f51-4369-aa9a-5617c120a5d1",
            "f3d2acbd-7f6b-4e2a-a01f-7fbcc1518e76",
            "09767a1c-5cee-4a8d-916b-7c8542c3c71e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportFilename": "index"
      },
      "version": "5.1.0"
    }
  }
}