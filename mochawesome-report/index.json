{
  "stats": {
    "suites": 13,
    "tests": 61,
    "passes": 49,
    "pending": 0,
    "failures": 12,
    "start": "2020-12-01T01:09:01.010Z",
    "end": "2020-12-01T01:09:01.070Z",
    "duration": 60,
    "testsRegistered": 61,
    "passPercent": 80.32786885245902,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a113070a-d873-4289-9d23-931b7ef83313",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4782123e-9726-4e8f-b131-d4e3ba2f2161",
          "title": "add.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/add.test.js",
          "file": "/tests/add.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1 + 2 should return 3",
              "fullTitle": "add.js test 1 + 2 should return 3",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(1, 2)).to.equal(3);",
              "err": {},
              "uuid": "595e3e24-a485-46f4-a3c8-ce9ad64e9b95",
              "parentUUID": "4782123e-9726-4e8f-b131-d4e3ba2f2161",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "'1' + 5 should return 6, number type",
              "fullTitle": "add.js test '1' + 5 should return 6, number type",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])('1', 5)).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:13:32)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "8f6d401e-757c-44d6-bc00-4e74737fb9df",
              "parentUUID": "4782123e-9726-4e8f-b131-d4e3ba2f2161",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "'1' + '5' should return 6, number type",
              "fullTitle": "add.js test '1' + '5' should return 6, number type",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])('1', '5')).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:18:34)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "180aa805-94b7-4d81-bd88-9b0a3c3bb34e",
              "parentUUID": "4782123e-9726-4e8f-b131-d4e3ba2f2161",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "1 + '5' should return 6, number type",
              "fullTitle": "add.js test 1 + '5' should return 6, number type",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(1, '5')).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:23:32)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "c65190a0-2722-42dc-8297-2e09b5e00d41",
              "parentUUID": "4782123e-9726-4e8f-b131-d4e3ba2f2161",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null + 5 should return 5",
              "fullTitle": "add.js test null + 5 should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(null, 5)).to.equal(5);",
              "err": {},
              "uuid": "10a02562-d4f7-44e4-a50c-0bf01166b243",
              "parentUUID": "4782123e-9726-4e8f-b131-d4e3ba2f2161",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "5 + undefined should return 5",
              "fullTitle": "add.js test 5 + undefined should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(5, undefined)).to.equal(5);",
              "err": {},
              "uuid": "6fffd6cd-9ddd-4aa6-a953-df664d550aeb",
              "parentUUID": "4782123e-9726-4e8f-b131-d4e3ba2f2161",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null + undefined should return",
              "fullTitle": "add.js test null + undefined should return",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(null, undefined)).to.equal(0);",
              "err": {
                "message": "AssertionError: expected null to equal 0",
                "estack": "AssertionError: expected null to equal 0\n    at Context.<anonymous> (tests/add.test.js:36:41)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "275a192c-015a-4539-8ad4-7f0df490622d",
              "parentUUID": "4782123e-9726-4e8f-b131-d4e3ba2f2161",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "595e3e24-a485-46f4-a3c8-ce9ad64e9b95",
            "10a02562-d4f7-44e4-a50c-0bf01166b243",
            "6fffd6cd-9ddd-4aa6-a953-df664d550aeb"
          ],
          "failures": [
            "8f6d401e-757c-44d6-bc00-4e74737fb9df",
            "180aa805-94b7-4d81-bd88-9b0a3c3bb34e",
            "c65190a0-2722-42dc-8297-2e09b5e00d41",
            "275a192c-015a-4539-8ad4-7f0df490622d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8db42a25-dd7d-49d6-b38e-a2029cfb9e9b",
          "title": "Test at.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/at.test.js",
          "file": "/tests/at.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return empty array",
              "fullTitle": "Test at.js function Give null to method, return empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(null)).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "e0417be8-99b4-4e6b-8936-d1d528356253",
              "parentUUID": "8db42a25-dd7d-49d6-b38e-a2029cfb9e9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method with correct path, return empty array",
              "fullTitle": "Test at.js function Give undefined to method with correct path, return empty array",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(undefined, ['title'])).to.be.instanceOf(Array).that.eql([]);",
              "err": {
                "message": "AssertionError: expected [ undefined ] to deeply equal []",
                "estack": "AssertionError: expected [ undefined ] to deeply equal []\n    at Context.<anonymous> (tests/at.test.js:24:71)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- [\n-   [undefined]\n- ]\n+ []\n"
              },
              "uuid": "1dfe95d6-2eb6-4462-880c-1f6de5e7b3aa",
              "parentUUID": "8db42a25-dd7d-49d6-b38e-a2029cfb9e9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, return empty array",
              "fullTitle": "Test at.js function Give valid to method, return empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT)).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "55d31ecf-f3fd-4236-819c-5d58fbdd4de0",
              "parentUUID": "8db42a25-dd7d-49d6-b38e-a2029cfb9e9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, with correct path. Return valid result",
              "fullTitle": "Test at.js function Give valid to method, with correct path. Return valid result",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT, ['title'])).to.be.instanceOf(Array).that.eql([VALID_OBJECT.title]);",
              "err": {},
              "uuid": "6368c160-aea7-45b6-b3aa-57b772e95156",
              "parentUUID": "8db42a25-dd7d-49d6-b38e-a2029cfb9e9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, with correct paths. Return valid results",
              "fullTitle": "Test at.js function Give valid to method, with correct paths. Return valid results",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT, ['title', 'tags[0]'])).to.be.instanceOf(Array).that.eql([VALID_OBJECT.title, VALID_OBJECT.tags[0]]);",
              "err": {},
              "uuid": "ec9eb429-68dd-46bd-b6a7-6e72e344e698",
              "parentUUID": "8db42a25-dd7d-49d6-b38e-a2029cfb9e9b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e0417be8-99b4-4e6b-8936-d1d528356253",
            "55d31ecf-f3fd-4236-819c-5d58fbdd4de0",
            "6368c160-aea7-45b6-b3aa-57b772e95156",
            "ec9eb429-68dd-46bd-b6a7-6e72e344e698"
          ],
          "failures": [
            "1dfe95d6-2eb6-4462-880c-1f6de5e7b3aa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1f1bb64a-711f-4870-8a11-0ad67c28a24a",
          "title": "camelCase.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/camelCase.test.js",
          "file": "/tests/camelCase.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test assigning an object to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning an object to the method. Expect an empty string",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])({\n  foo: 'bar'\n}), '');",
              "err": {
                "message": "AssertionError: expected ' objectObject' to equal ''",
                "estack": "AssertionError: expected ' objectObject' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:9:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  objectObject\n"
              },
              "uuid": "c0b8be04-7aa9-49a5-a6c4-32e71a4c966a",
              "parentUUID": "1f1bb64a-711f-4870-8a11-0ad67c28a24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning null to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning null to the method. Expect an empty string",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(null), '');",
              "err": {
                "message": "AssertionError: expected ' null' to equal ''",
                "estack": "AssertionError: expected ' null' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:14:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  null\n"
              },
              "uuid": "438df644-bf1a-4c4a-9355-77c9a6c013dd",
              "parentUUID": "1f1bb64a-711f-4870-8a11-0ad67c28a24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning undefined to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning undefined to the method. Expect an empty string",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(undefined), '');",
              "err": {
                "message": "AssertionError: expected ' undefined' to equal ''",
                "estack": "AssertionError: expected ' undefined' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:19:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  undefined\n"
              },
              "uuid": "341d4b37-288a-4f28-8745-43acc54ecd1a",
              "parentUUID": "1f1bb64a-711f-4870-8a11-0ad67c28a24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning true to the method. Expect boolean in lowercase",
              "fullTitle": "camelCase.js test Test assigning true to the method. Expect boolean in lowercase",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(true), 'true');",
              "err": {
                "message": "AssertionError: expected ' true' to equal 'true'",
                "estack": "AssertionError: expected ' true' to equal 'true'\n    at Context.<anonymous> (tests/camelCase.test.js:24:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  true\n+ true\n"
              },
              "uuid": "bfa22b43-6505-4dba-9844-6cfbf9c4ff5e",
              "parentUUID": "1f1bb64a-711f-4870-8a11-0ad67c28a24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning valid string to the method. Expect correctly converted value",
              "fullTitle": "camelCase.js test Test assigning valid string to the method. Expect correctly converted value",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])('hello world'), 'helloWorld');",
              "err": {
                "message": "AssertionError: expected ' helloWorld' to equal 'helloWorld'",
                "estack": "AssertionError: expected ' helloWorld' to equal 'helloWorld'\n    at Context.<anonymous> (tests/camelCase.test.js:29:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  helloWorld\n+ helloWorld\n"
              },
              "uuid": "0f9401e5-9a1a-4dd6-a818-90623584faa8",
              "parentUUID": "1f1bb64a-711f-4870-8a11-0ad67c28a24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning valid string with special chars to the method. Expect correctly converted value",
              "fullTitle": "camelCase.js test Test assigning valid string with special chars to the method. Expect correctly converted value",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])('___hello-world! assignment^'), 'helloWorldAssignment');",
              "err": {
                "message": "AssertionError: expected ' helloWorldAssignment' to equal 'helloWorldAssignment'",
                "estack": "AssertionError: expected ' helloWorldAssignment' to equal 'helloWorldAssignment'\n    at Context.<anonymous> (tests/camelCase.test.js:34:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  helloWorldAssignment\n+ helloWorldAssignment\n"
              },
              "uuid": "4b7758c7-5064-4d96-bccb-6f0b67dd279f",
              "parentUUID": "1f1bb64a-711f-4870-8a11-0ad67c28a24a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c0b8be04-7aa9-49a5-a6c4-32e71a4c966a",
            "438df644-bf1a-4c4a-9355-77c9a6c013dd",
            "341d4b37-288a-4f28-8745-43acc54ecd1a",
            "bfa22b43-6505-4dba-9844-6cfbf9c4ff5e",
            "0f9401e5-9a1a-4dd6-a818-90623584faa8",
            "4b7758c7-5064-4d96-bccb-6f0b67dd279f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fdb657ae-3bbf-4303-ac2a-217b47ac44bb",
          "title": "capitalize test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/capitalize.test.js",
          "file": "/tests/capitalize.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert FRED into Fred",
              "fullTitle": "capitalize test should convert FRED into Fred",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])('FRED')).to.equal('Fred');",
              "err": {},
              "uuid": "8aac672f-eca2-4881-a5af-7d85a64081f1",
              "parentUUID": "fdb657ae-3bbf-4303-ac2a-217b47ac44bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "capitalize should return string",
              "fullTitle": "capitalize test capitalize should return string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _capitalize[\"default\"])('fred');\nexpect(result).to.be.a('string');",
              "err": {},
              "uuid": "079f2af3-7fc1-45a0-8254-9c422700a0b0",
              "parentUUID": "fdb657ae-3bbf-4303-ac2a-217b47ac44bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, boolean, undefined, number",
              "fullTitle": "capitalize test should not return string for null, boolean, undefined, number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])(null)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(true)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(123)).to.not.equal('string');",
              "err": {},
              "uuid": "ae47afbf-e191-4439-90a6-01e60a8ab2c8",
              "parentUUID": "fdb657ae-3bbf-4303-ac2a-217b47ac44bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8aac672f-eca2-4881-a5af-7d85a64081f1",
            "079f2af3-7fc1-45a0-8254-9c422700a0b0",
            "ae47afbf-e191-4439-90a6-01e60a8ab2c8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d02d934c-a3c2-485c-ad64-a822ea6d4d41",
          "title": "ceil test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/ceil.test.js",
          "file": "/tests/ceil.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "4.006 with precision 0 should return 5",
              "fullTitle": "ceil test 4.006 with precision 0 should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(4.006)).to.equal(5);",
              "err": {},
              "uuid": "65be541b-58e7-4522-aa87-4587098e5d35",
              "parentUUID": "d02d934c-a3c2-485c-ad64-a822ea6d4d41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6.004 with precision 2 should return 6.01",
              "fullTitle": "ceil test 6.004 with precision 2 should return 6.01",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(6.004, 2)).to.equal(6.01);",
              "err": {},
              "uuid": "75821a91-05e9-48fc-8aa7-4168b07cb792",
              "parentUUID": "d02d934c-a3c2-485c-ad64-a822ea6d4d41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6040 with precision -2 should return 6100",
              "fullTitle": "ceil test 6040 with precision -2 should return 6100",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(6040, -2)).to.equal(6100);",
              "err": {},
              "uuid": "27ca2bea-39b8-4a63-802c-f02a95959c7e",
              "parentUUID": "d02d934c-a3c2-485c-ad64-a822ea6d4d41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "passing null, undefined, NaN, string should not give results",
              "fullTitle": "ceil test passing null, undefined, NaN, string should not give results",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(null)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])(undefined)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])(NaN)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])('abc')).to.not.equal('number');",
              "err": {},
              "uuid": "65df32b3-f2f8-4ada-a0e1-c155ee0af6d3",
              "parentUUID": "d02d934c-a3c2-485c-ad64-a822ea6d4d41",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "65be541b-58e7-4522-aa87-4587098e5d35",
            "75821a91-05e9-48fc-8aa7-4168b07cb792",
            "27ca2bea-39b8-4a63-802c-f02a95959c7e",
            "65df32b3-f2f8-4ada-a0e1-c155ee0af6d3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3f8b18c1-254c-44ec-abe0-5a9e7fb3e768",
          "title": "eq test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/eq.test.js",
          "file": "/tests/eq.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if same objects are compared",
              "fullTitle": "eq test should return true if same objects are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var object = {\n  'a': 1\n};\nvar result = (0, _eq[\"default\"])(object, object);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "b7c03c38-af22-4f82-803a-89c02594933b",
              "parentUUID": "3f8b18c1-254c-44ec-abe0-5a9e7fb3e768",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if same strings are compared",
              "fullTitle": "eq test should return true if same strings are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])('a', 'a')).to.be[\"true\"];",
              "err": {},
              "uuid": "8a1add2a-a6dd-4963-bc44-ff08b9cdd773",
              "parentUUID": "3f8b18c1-254c-44ec-abe0-5a9e7fb3e768",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if same numbers are compared",
              "fullTitle": "eq test should return true if same numbers are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])(123, 123)).to.be[\"true\"];",
              "err": {},
              "uuid": "1e756e33-af73-495c-87ac-efdf580ad949",
              "parentUUID": "3f8b18c1-254c-44ec-abe0-5a9e7fb3e768",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if values are not quivalent",
              "fullTitle": "eq test should return false if values are not quivalent",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])('a', NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "81a78af1-acf2-45b3-b794-8ae9e62ece64",
              "parentUUID": "3f8b18c1-254c-44ec-abe0-5a9e7fb3e768",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if string and object is compared",
              "fullTitle": "eq test should return false if string and object is compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var object = {\n  'a': 1\n};\nexpect((0, _eq[\"default\"])('a', object)).to.be[\"false\"];",
              "err": {},
              "uuid": "d252ebe8-00aa-4cef-9b04-246dc3fd2c7c",
              "parentUUID": "3f8b18c1-254c-44ec-abe0-5a9e7fb3e768",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7c03c38-af22-4f82-803a-89c02594933b",
            "8a1add2a-a6dd-4963-bc44-ff08b9cdd773",
            "1e756e33-af73-495c-87ac-efdf580ad949",
            "81a78af1-acf2-45b3-b794-8ae9e62ece64",
            "d252ebe8-00aa-4cef-9b04-246dc3fd2c7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f0276a00-e0ef-40b9-8be8-e46de3f724dd",
          "title": "every test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/every.test.js",
          "file": "/tests/every.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if all array elements pass the predicate check",
              "fullTitle": "every test should return true if all array elements pass the predicate check",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = ['1', 'yes'];\nvar result = (0, _every[\"default\"])(array, String);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "92d9b66c-072a-4a5b-9e7c-4f45c6ade97d",
              "parentUUID": "f0276a00-e0ef-40b9-8be8-e46de3f724dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for empty arrays",
              "fullTitle": "every test should return true for empty arrays",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [];\nvar result = (0, _every[\"default\"])(array, String);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "e1fb10e7-5d47-4ac6-acda-7eaa6348a64f",
              "parentUUID": "f0276a00-e0ef-40b9-8be8-e46de3f724dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if all array elements did not pass the predicate check",
              "fullTitle": "every test should return false if all array elements did not pass the predicate check",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [true, 1, null, 'yes'];\nvar result = (0, _every[\"default\"])(array, Boolean);\nexpect(result).to.be[\"false\"];",
              "err": {},
              "uuid": "955a1eed-51a5-45c4-8b6f-7f745e189128",
              "parentUUID": "f0276a00-e0ef-40b9-8be8-e46de3f724dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return boolean if array is not passed",
              "fullTitle": "every test should not return boolean if array is not passed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _every[\"default\"])('abc', String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(123, Number)).to.not.equal('boolean');",
              "err": {},
              "uuid": "0aab0296-6a5e-4afd-b4d5-a244630ef035",
              "parentUUID": "f0276a00-e0ef-40b9-8be8-e46de3f724dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return boolean if null, NaN, undefined is passed",
              "fullTitle": "every test should not return boolean if null, NaN, undefined is passed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _every[\"default\"])(null, String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(NaN, String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(undefined, String)).to.not.equal('boolean');",
              "err": {},
              "uuid": "a940fd22-bce6-46ce-9f30-404897e7df8a",
              "parentUUID": "f0276a00-e0ef-40b9-8be8-e46de3f724dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92d9b66c-072a-4a5b-9e7c-4f45c6ade97d",
            "e1fb10e7-5d47-4ac6-acda-7eaa6348a64f",
            "955a1eed-51a5-45c4-8b6f-7f745e189128",
            "0aab0296-6a5e-4afd-b4d5-a244630ef035",
            "a940fd22-bce6-46ce-9f30-404897e7df8a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8bcfa5a5-3a42-4160-a4eb-f1da2e7892b4",
          "title": "isEmpty test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isEmpty.test.js",
          "file": "/tests/isEmpty.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is Empty",
              "fullTitle": "isEmpty test should return true if value is Empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])(null)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(true)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(1)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(undefined)).to.be[\"true\"];",
              "err": {},
              "uuid": "3721b101-e6c5-4930-ab60-8fea52acba1c",
              "parentUUID": "8bcfa5a5-3a42-4160-a4eb-f1da2e7892b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not Empty",
              "fullTitle": "isEmpty test should return false if value is not Empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isEmpty[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isEmpty[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "5348df8a-d6f0-4f78-a906-3f10b8c0af42",
              "parentUUID": "8bcfa5a5-3a42-4160-a4eb-f1da2e7892b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3721b101-e6c5-4930-ab60-8fea52acba1c",
            "5348df8a-d6f0-4f78-a906-3f10b8c0af42"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b8678e10-60bc-4063-aa9c-df5b3018c415",
          "title": "Test toFinite.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/toFinite.test.js",
          "file": "/tests/toFinite.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return NAN",
              "fullTitle": "Test toFinite.js function Give null to method, return NAN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])(null)).to.eql(0);",
              "err": {},
              "uuid": "b6516ce1-e82f-4380-8cae-5d6bfbc5dfe1",
              "parentUUID": "b8678e10-60bc-4063-aa9c-df5b3018c415",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, return NaN",
              "fullTitle": "Test toFinite.js function Give undefined to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])(undefined)).to.eql(0);",
              "err": {},
              "uuid": "6ccb44ae-abd6-4515-b0a9-c9efed9d3c78",
              "parentUUID": "b8678e10-60bc-4063-aa9c-df5b3018c415",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give invalid number string to method, return NaN",
              "fullTitle": "Test toFinite.js function Give invalid number string to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])('a string with a value')).to.eql(0);",
              "err": {},
              "uuid": "2412439c-6c54-47ea-9863-65521f15d628",
              "parentUUID": "b8678e10-60bc-4063-aa9c-df5b3018c415",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give Hexadecimals number string to method, return converted base 10",
              "fullTitle": "Test toFinite.js function Give Hexadecimals number string to method, return converted base 10",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal((0, _toFinite[\"default\"])('0xabcdef'), 11259375);",
              "err": {},
              "uuid": "90c8fde3-0326-4db2-8575-b36fae2fe4e1",
              "parentUUID": "b8678e10-60bc-4063-aa9c-df5b3018c415",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid number to method, return number type and same value",
              "fullTitle": "Test toFinite.js function Give valid number to method, return number type and same value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toFinite[\"default\"])(3.44532);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 3.44532);",
              "err": {},
              "uuid": "aff02af9-7776-4f9b-8d9f-77912591c3fc",
              "parentUUID": "b8678e10-60bc-4063-aa9c-df5b3018c415",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give maximum int value to method, return number type and converted value",
              "fullTitle": "Test toFinite.js function Give maximum int value to method, return number type and converted value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toFinite[\"default\"])(Infinity);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 1.7976931348623157e+308);",
              "err": {},
              "uuid": "626dcf47-a6e5-4ad7-8116-3dbdb67e9738",
              "parentUUID": "b8678e10-60bc-4063-aa9c-df5b3018c415",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b6516ce1-e82f-4380-8cae-5d6bfbc5dfe1",
            "6ccb44ae-abd6-4515-b0a9-c9efed9d3c78",
            "2412439c-6c54-47ea-9863-65521f15d628",
            "90c8fde3-0326-4db2-8575-b36fae2fe4e1",
            "aff02af9-7776-4f9b-8d9f-77912591c3fc",
            "626dcf47-a6e5-4ad7-8116-3dbdb67e9738"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3ee8b94e-ec09-41b0-ab4c-79f4f0d5d13d",
          "title": "Test toNumber.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/toNumber.test.js",
          "file": "/tests/toNumber.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return NAN",
              "fullTitle": "Test toNumber.js function Give null to method, return NAN",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])(null)).to.be.NaN;",
              "err": {
                "message": "AssertionError: expected 0 to be NaN",
                "estack": "AssertionError: expected 0 to be NaN\n    at Context.<anonymous> (tests/toNumber.test.js:11:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "d9fbc51e-9562-44e0-bde0-97c4301debb5",
              "parentUUID": "3ee8b94e-ec09-41b0-ab4c-79f4f0d5d13d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, return NaN",
              "fullTitle": "Test toNumber.js function Give undefined to method, return NaN",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])(undefined)).to.be.NaN;",
              "err": {},
              "uuid": "b83a1078-9dcd-4862-b3e0-d552ebdabe4f",
              "parentUUID": "3ee8b94e-ec09-41b0-ab4c-79f4f0d5d13d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give invalid number string to method, return NaN",
              "fullTitle": "Test toNumber.js function Give invalid number string to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])('Hello world!')).to.be.NaN;",
              "err": {},
              "uuid": "139a3eef-b4f7-47dd-9187-cfef8ee305f2",
              "parentUUID": "3ee8b94e-ec09-41b0-ab4c-79f4f0d5d13d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give Hexadecimals number string to method, return converted base 10",
              "fullTitle": "Test toNumber.js function Give Hexadecimals number string to method, return converted base 10",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal((0, _toNumber[\"default\"])('0xabcdef'), 11259375);",
              "err": {},
              "uuid": "942cf5ec-55d7-44a2-8ff4-fdccdb8a4aea",
              "parentUUID": "3ee8b94e-ec09-41b0-ab4c-79f4f0d5d13d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid number string to method, return number type and same value",
              "fullTitle": "Test toNumber.js function Give valid number string to method, return number type and same value",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toNumber[\"default\"])(500);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 500);",
              "err": {},
              "uuid": "3c07274d-04af-4a17-948f-4d0b4e0ac959",
              "parentUUID": "3ee8b94e-ec09-41b0-ab4c-79f4f0d5d13d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b83a1078-9dcd-4862-b3e0-d552ebdabe4f",
            "139a3eef-b4f7-47dd-9187-cfef8ee305f2",
            "942cf5ec-55d7-44a2-8ff4-fdccdb8a4aea",
            "3c07274d-04af-4a17-948f-4d0b4e0ac959"
          ],
          "failures": [
            "d9fbc51e-9562-44e0-bde0-97c4301debb5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fd5aebde-9929-41dd-99a0-0272277b1dae",
          "title": "toString test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/toString.test.js",
          "file": "/tests/toString.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should preserved -0",
              "fullTitle": "toString test should preserved -0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(-0)).to.equal('-0');",
              "err": {},
              "uuid": "7338a1d1-3929-48db-b558-6bbbe897df0b",
              "parentUUID": "fd5aebde-9929-41dd-99a0-0272277b1dae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert array into a string",
              "fullTitle": "toString test should convert array into a string",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])([1, 2, 3])).to.equal('1,2,3');",
              "err": {},
              "uuid": "09b4994c-7d90-4535-87de-ee04bc5e9308",
              "parentUUID": "fd5aebde-9929-41dd-99a0-0272277b1dae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, undefined, boolean, NaN",
              "fullTitle": "toString test should not return string for null, undefined, boolean, NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(null)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(true)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(NaN)).to.not.equal('string');",
              "err": {},
              "uuid": "c1598c93-1c7e-436c-8bf5-6a2a0b27607b",
              "parentUUID": "fd5aebde-9929-41dd-99a0-0272277b1dae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return string for number, object, string",
              "fullTitle": "toString test should return string for number, object, string",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(123)).to.be.a('string');\nexpect((0, _toString[\"default\"])({\n  'a': 1\n})).to.be.a('string');\nexpect((0, _toString[\"default\"])('abc')).to.be.a('string');",
              "err": {},
              "uuid": "34f9fc6d-eb1c-44e9-ad90-e85c63fbdc47",
              "parentUUID": "fd5aebde-9929-41dd-99a0-0272277b1dae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7338a1d1-3929-48db-b558-6bbbe897df0b",
            "09b4994c-7d90-4535-87de-ee04bc5e9308",
            "c1598c93-1c7e-436c-8bf5-6a2a0b27607b",
            "34f9fc6d-eb1c-44e9-ad90-e85c63fbdc47"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ba048ccc-0fd3-4116-a399-aca86f4104a7",
          "title": "upperFirst test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/upperFirst.test.js",
          "file": "/tests/upperFirst.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert fred into Fred",
              "fullTitle": "upperFirst test should convert fred into Fred",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])('fred')).to.equal('Fred');",
              "err": {},
              "uuid": "8ec9815e-ebe8-4bf4-9c46-5d8dfdae6dbc",
              "parentUUID": "ba048ccc-0fd3-4116-a399-aca86f4104a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert FRED into FRED",
              "fullTitle": "upperFirst test should convert FRED into FRED",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])('FRED')).to.equal('FRED');",
              "err": {},
              "uuid": "a706d388-03e8-4421-af94-f136087859e1",
              "parentUUID": "ba048ccc-0fd3-4116-a399-aca86f4104a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "upperFirst should return string",
              "fullTitle": "upperFirst test upperFirst should return string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _upperFirst[\"default\"])('fred');\nexpect(result).to.be.a('string');",
              "err": {},
              "uuid": "5b1b4845-6ade-45b0-b340-84cdac28d567",
              "parentUUID": "ba048ccc-0fd3-4116-a399-aca86f4104a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, undefined, NaN",
              "fullTitle": "upperFirst test should not return string for null, undefined, NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])(null)).to.not.equal('string');\nexpect((0, _upperFirst[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _upperFirst[\"default\"])(NaN)).to.not.equal('string');",
              "err": {},
              "uuid": "f6ee1a20-804c-4f7a-8e92-04f72c496142",
              "parentUUID": "ba048ccc-0fd3-4116-a399-aca86f4104a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ec9815e-ebe8-4bf4-9c46-5d8dfdae6dbc",
            "a706d388-03e8-4421-af94-f136087859e1",
            "5b1b4845-6ade-45b0-b340-84cdac28d567",
            "f6ee1a20-804c-4f7a-8e92-04f72c496142"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c0080591-dfb0-4742-a3a3-9dee0ff8df18",
          "title": "Test word.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/words.test.js",
          "file": "/tests/words.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, method is failed because match method of String is missing",
              "fullTitle": "Test word.js function Give null to method, method is failed because match method of String is missing",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function () {\n  (0, _words[\"default\"])(null, null);\n}).to[\"throw\"](TypeError);",
              "err": {},
              "uuid": "db561b08-1873-4cc0-a872-448e2c36565d",
              "parentUUID": "c0080591-dfb0-4742-a3a3-9dee0ff8df18",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, method is failed because match method of String is missing",
              "fullTitle": "Test word.js function Give undefined to method, method is failed because match method of String is missing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function () {\n  (0, _words[\"default\"])(undefined, null);\n}).to[\"throw\"](TypeError);",
              "err": {},
              "uuid": "7b5b56bf-1f54-4ee5-8302-1e85c4ac0ac1",
              "parentUUID": "c0080591-dfb0-4742-a3a3-9dee0ff8df18",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give empty string without pattern, return empty array",
              "fullTitle": "Test word.js function Give empty string without pattern, return empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _words[\"default\"])('')).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "30412634-fa0d-40dc-aecd-903fd80db6b8",
              "parentUUID": "c0080591-dfb0-4742-a3a3-9dee0ff8df18",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give sample valid string, return array with splitted words and remove all special chars",
              "fullTitle": "Test word.js function Give sample valid string, return array with splitted words and remove all special chars",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _words[\"default\"])('abc.a abc abb')).to.be.instanceOf(Array).that.eql(['abc', 'a', 'abc', 'abb']);\nexpect((0, _words[\"default\"])('abc.a a,bc ab|b')).to.be.instanceOf(Array).that.eql(['abc', 'a', 'a', 'bc', 'ab', 'b']);",
              "err": {},
              "uuid": "cfe8c9b0-0928-45ae-a878-f8abb81dac00",
              "parentUUID": "c0080591-dfb0-4742-a3a3-9dee0ff8df18",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give sample valid string, return array with splitted words match patterns",
              "fullTitle": "Test word.js function Give sample valid string, return array with splitted words match patterns",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var SPLIT_WORDS_BY_SPACE_AND_COMMA = /[^, ]+/g;\nexpect((0, _words[\"default\"])('abc.a ab,c abb', SPLIT_WORDS_BY_SPACE_AND_COMMA)).to.be.instanceOf(Array).that.eql(['abc.a', 'ab', 'c', 'abb']);",
              "err": {},
              "uuid": "6cd966d9-cd33-47ba-b198-44af9adc51e0",
              "parentUUID": "c0080591-dfb0-4742-a3a3-9dee0ff8df18",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db561b08-1873-4cc0-a872-448e2c36565d",
            "7b5b56bf-1f54-4ee5-8302-1e85c4ac0ac1",
            "30412634-fa0d-40dc-aecd-903fd80db6b8",
            "cfe8c9b0-0928-45ae-a878-f8abb81dac00",
            "6cd966d9-cd33-47ba-b198-44af9adc51e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportFilename": "index"
      },
      "version": "5.1.0"
    }
  }
}