{
  "stats": {
    "suites": 11,
    "tests": 44,
    "passes": 43,
    "pending": 0,
    "failures": 1,
    "start": "2020-11-29T14:03:38.083Z",
    "end": "2020-11-29T14:03:38.119Z",
    "duration": 36,
    "testsRegistered": 44,
    "passPercent": 97.72727272727273,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e99a3390-8512-4274-a98c-6909031c9481",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a27c24ee-afe5-4a65-9785-3e57745ac3bf",
          "title": "capitalize test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/test/capitalize.test.js",
          "file": "/test/capitalize.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert FRED into Fred",
              "fullTitle": "capitalize test should convert FRED into Fred",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize('FRED')).to.equal('Fred');",
              "err": {},
              "uuid": "3158b875-97c5-4ab7-8cbc-a07549571d5b",
              "parentUUID": "a27c24ee-afe5-4a65-9785-3e57745ac3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "capitalize should return string",
              "fullTitle": "capitalize test capitalize should return string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = capitalize('fred');\nexpect(result).to.be.a('string');",
              "err": {},
              "uuid": "910862f5-fb7e-4491-8269-87bba987c51e",
              "parentUUID": "a27c24ee-afe5-4a65-9785-3e57745ac3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, boolean, undefined, number",
              "fullTitle": "capitalize test should not return string for null, boolean, undefined, number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(null)).to.not.equal('string');\nexpect(capitalize(true)).to.not.equal('string');\nexpect(capitalize(undefined)).to.not.equal('string');\nexpect(capitalize(123)).to.not.equal('string');",
              "err": {},
              "uuid": "692884d8-4abd-4f60-992d-43c5bf0e61a4",
              "parentUUID": "a27c24ee-afe5-4a65-9785-3e57745ac3bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3158b875-97c5-4ab7-8cbc-a07549571d5b",
            "910862f5-fb7e-4491-8269-87bba987c51e",
            "692884d8-4abd-4f60-992d-43c5bf0e61a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d23390ae-185c-4b26-976f-85f1546cf7e3",
          "title": "ceil test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/test/ceil.test.js",
          "file": "/test/ceil.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "4.006 with precision 0 should return 5",
              "fullTitle": "ceil test 4.006 with precision 0 should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(ceil(4.006)).to.equal(5);",
              "err": {},
              "uuid": "60ff1614-581c-4687-af31-fdce8dc31ab1",
              "parentUUID": "d23390ae-185c-4b26-976f-85f1546cf7e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6.004 with precision 2 should return 6.01",
              "fullTitle": "ceil test 6.004 with precision 2 should return 6.01",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(ceil(6.004, 2)).to.equal(6.01);",
              "err": {},
              "uuid": "870d22f4-ad9e-4e45-bc54-cdaefd315ffc",
              "parentUUID": "d23390ae-185c-4b26-976f-85f1546cf7e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6040 with precision -2 should return 6100",
              "fullTitle": "ceil test 6040 with precision -2 should return 6100",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(ceil(6040, -2)).to.equal(6100);",
              "err": {},
              "uuid": "70cf5354-19c1-47d9-9dc8-cc768a6afd48",
              "parentUUID": "d23390ae-185c-4b26-976f-85f1546cf7e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "passing null, undefined, NaN, string should not give results",
              "fullTitle": "ceil test passing null, undefined, NaN, string should not give results",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(ceil(null)).to.not.equal('number');\nexpect(ceil(undefined)).to.not.equal('number');\nexpect(ceil(NaN)).to.not.equal('number');\nexpect(ceil('abc')).to.not.equal('number');",
              "err": {},
              "uuid": "e187e768-3485-48dc-98b0-99eeb0dc9841",
              "parentUUID": "d23390ae-185c-4b26-976f-85f1546cf7e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "60ff1614-581c-4687-af31-fdce8dc31ab1",
            "870d22f4-ad9e-4e45-bc54-cdaefd315ffc",
            "70cf5354-19c1-47d9-9dc8-cc768a6afd48",
            "e187e768-3485-48dc-98b0-99eeb0dc9841"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5b7d3b94-ed9c-4a2d-b0f2-3b300abca009",
          "title": "eq test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/test/eq.test.js",
          "file": "/test/eq.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if same objects are compared",
              "fullTitle": "eq test should return true if same objects are compared",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let object = { 'a': 1 };\nlet result = eq(object, object);\nexpect(result).to.be.true;",
              "err": {},
              "uuid": "0bfa5210-f323-4508-af92-6521e1c8b890",
              "parentUUID": "5b7d3b94-ed9c-4a2d-b0f2-3b300abca009",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if same strings are compared",
              "fullTitle": "eq test should return true if same strings are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(eq('a','a')).to.be.true;",
              "err": {},
              "uuid": "7c2a7192-5ad1-4d4d-acf7-31e8b0d1ee56",
              "parentUUID": "5b7d3b94-ed9c-4a2d-b0f2-3b300abca009",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if same numbers are compared",
              "fullTitle": "eq test should return true if same numbers are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(eq(123,123)).to.be.true;",
              "err": {},
              "uuid": "9a9c29a4-726c-49b5-b4be-923092333730",
              "parentUUID": "5b7d3b94-ed9c-4a2d-b0f2-3b300abca009",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if values are not quivalent",
              "fullTitle": "eq test should return false if values are not quivalent",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(eq('a', NaN)).to.be.false;",
              "err": {},
              "uuid": "cd111301-d495-4528-ba13-45a14ae9d723",
              "parentUUID": "5b7d3b94-ed9c-4a2d-b0f2-3b300abca009",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if string and object is compared",
              "fullTitle": "eq test should return false if string and object is compared",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let object = { 'a': 1 };\nexpect(eq('a', object)).to.be.false;",
              "err": {},
              "uuid": "d197b5ae-f88a-4704-950c-bf7d7d55831e",
              "parentUUID": "5b7d3b94-ed9c-4a2d-b0f2-3b300abca009",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0bfa5210-f323-4508-af92-6521e1c8b890",
            "7c2a7192-5ad1-4d4d-acf7-31e8b0d1ee56",
            "9a9c29a4-726c-49b5-b4be-923092333730",
            "cd111301-d495-4528-ba13-45a14ae9d723",
            "d197b5ae-f88a-4704-950c-bf7d7d55831e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7d7d3db6-995e-4f63-9cb2-25d19d84bd2d",
          "title": "every test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/test/every.test.js",
          "file": "/test/every.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if all array elements pass the predicate check",
              "fullTitle": "every test should return true if all array elements pass the predicate check",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let array = ['1', 'yes'];\nlet result = every(array, String);\nexpect(result).to.be.true;",
              "err": {},
              "uuid": "d742671b-4d04-44ce-89b8-7d13136f22a7",
              "parentUUID": "7d7d3db6-995e-4f63-9cb2-25d19d84bd2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for empty arrays",
              "fullTitle": "every test should return true for empty arrays",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let array = [];\nlet result = every(array, String);\nexpect(result).to.be.true;",
              "err": {},
              "uuid": "5455d783-8760-481d-b154-688b4fb24e68",
              "parentUUID": "7d7d3db6-995e-4f63-9cb2-25d19d84bd2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if all array elements did not pass the predicate check",
              "fullTitle": "every test should return false if all array elements did not pass the predicate check",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let array = [true, 1, null, 'yes'];\nlet result = every(array, Boolean);\nexpect(result).to.be.false;",
              "err": {},
              "uuid": "69b6f996-5f89-46ae-acb7-ab9dc67d0e61",
              "parentUUID": "7d7d3db6-995e-4f63-9cb2-25d19d84bd2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return boolean if array is not passed",
              "fullTitle": "every test should not return boolean if array is not passed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(every('abc', String)).to.not.equal('boolean');\nexpect(every(123, Number)).to.not.equal('boolean');",
              "err": {},
              "uuid": "72677db7-a3c8-4e9a-a3da-ba3807cf9cf8",
              "parentUUID": "7d7d3db6-995e-4f63-9cb2-25d19d84bd2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return boolean if null, NaN, undefined is passed",
              "fullTitle": "every test should not return boolean if null, NaN, undefined is passed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(every(null, String)).to.not.equal('boolean');\nexpect(every(NaN, String)).to.not.equal('boolean');\nexpect(every(undefined, String)).to.not.equal('boolean');",
              "err": {},
              "uuid": "add96372-e494-4f5b-87e0-ca8058619a9f",
              "parentUUID": "7d7d3db6-995e-4f63-9cb2-25d19d84bd2d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d742671b-4d04-44ce-89b8-7d13136f22a7",
            "5455d783-8760-481d-b154-688b4fb24e68",
            "69b6f996-5f89-46ae-acb7-ab9dc67d0e61",
            "72677db7-a3c8-4e9a-a3da-ba3807cf9cf8",
            "add96372-e494-4f5b-87e0-ca8058619a9f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2c9f60c1-d086-4ebf-a86d-229e4ce305e6",
          "title": "isEmpty test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/test/isEmpty.test.js",
          "file": "/test/isEmpty.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is Empty",
              "fullTitle": "isEmpty test should return true if value is Empty",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty(null)).to.be.true;\nexpect(isEmpty(true)).to.be.true;\nexpect(isEmpty(1)).to.be.true;\nexpect(isEmpty(undefined)).to.be.true;",
              "err": {},
              "uuid": "5d5212e8-348f-44cf-90e4-9f20f24c001f",
              "parentUUID": "2c9f60c1-d086-4ebf-a86d-229e4ce305e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not Empty",
              "fullTitle": "isEmpty test should return false if value is not Empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty('abc')).to.be.false;\nexpect(isEmpty([1,2,3])).to.be.false;\nexpect(isEmpty({'a':1})).to.be.false;",
              "err": {},
              "uuid": "852dcbfc-45df-45ec-93ea-c670fd27e298",
              "parentUUID": "2c9f60c1-d086-4ebf-a86d-229e4ce305e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d5212e8-348f-44cf-90e4-9f20f24c001f",
            "852dcbfc-45df-45ec-93ea-c670fd27e298"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7004b39d-d066-4b3e-9fb9-121ee6a9233a",
          "title": "sum test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/test/sum.test.js",
          "file": "/test/sum.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1 + 2 should return 3",
              "fullTitle": "sum test 1 + 2 should return 3",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(1, 2)).to.equal(3);",
              "err": {},
              "uuid": "da3f014e-a5b0-4bc4-8940-981e96670856",
              "parentUUID": "7004b39d-d066-4b3e-9fb9-121ee6a9233a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "da3f014e-a5b0-4bc4-8940-981e96670856"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1127f11f-90f9-4fba-bc89-aa39a9978f46",
          "title": "Test toFinite.js function",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/test/toFinite.test.js",
          "file": "/test/toFinite.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return NAN",
              "fullTitle": "Test toFinite.js function Give null to method, return NAN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toFinite(null)).to.eql(0);",
              "err": {},
              "uuid": "0c911508-4cbb-47c0-9be9-c2bb03061881",
              "parentUUID": "1127f11f-90f9-4fba-bc89-aa39a9978f46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, return NaN",
              "fullTitle": "Test toFinite.js function Give undefined to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toFinite(undefined)).to.eql(0);",
              "err": {},
              "uuid": "c831a699-99fd-469a-807c-f4adcb0b7424",
              "parentUUID": "1127f11f-90f9-4fba-bc89-aa39a9978f46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give invalid number string to method, return NaN",
              "fullTitle": "Test toFinite.js function Give invalid number string to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toFinite('a string with a value')).to.eql(0);",
              "err": {},
              "uuid": "634806ae-c0b1-4e2e-ac82-d49322d27143",
              "parentUUID": "1127f11f-90f9-4fba-bc89-aa39a9978f46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give Hexadecimals number string to method, return converted base 10",
              "fullTitle": "Test toFinite.js function Give Hexadecimals number string to method, return converted base 10",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(toFinite('0xabcdef'), 11259375);",
              "err": {},
              "uuid": "1e7cb520-a7d2-46dc-b9ef-59dc667811e3",
              "parentUUID": "1127f11f-90f9-4fba-bc89-aa39a9978f46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid number to method, return number type and same value",
              "fullTitle": "Test toFinite.js function Give valid number to method, return number type and same value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const convertedValue = toFinite(3.44532);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 3.44532);",
              "err": {},
              "uuid": "f68a36d1-2fcd-4b47-acbf-07fec93ebf80",
              "parentUUID": "1127f11f-90f9-4fba-bc89-aa39a9978f46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give maximum int value to method, return number type and converted value",
              "fullTitle": "Test toFinite.js function Give maximum int value to method, return number type and converted value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const convertedValue = toFinite(Infinity);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 1.7976931348623157e+308);",
              "err": {},
              "uuid": "305d9042-85c7-4c37-b09b-4d70e66fbcf1",
              "parentUUID": "1127f11f-90f9-4fba-bc89-aa39a9978f46",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c911508-4cbb-47c0-9be9-c2bb03061881",
            "c831a699-99fd-469a-807c-f4adcb0b7424",
            "634806ae-c0b1-4e2e-ac82-d49322d27143",
            "1e7cb520-a7d2-46dc-b9ef-59dc667811e3",
            "f68a36d1-2fcd-4b47-acbf-07fec93ebf80",
            "305d9042-85c7-4c37-b09b-4d70e66fbcf1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "68708a46-5217-4591-8f76-10cee5d570ab",
          "title": "Test toNumber.js function",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/test/toNumber.test.js",
          "file": "/test/toNumber.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return NAN",
              "fullTitle": "Test toNumber.js function Give null to method, return NAN",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(toNumber(null)).to.be.NaN;",
              "err": {
                "message": "AssertionError: expected 0 to be NaN",
                "estack": "AssertionError: expected 0 to be NaN\n    at Context.<anonymous> (file:///home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/test/toNumber.test.js:11:37)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "2ebe3980-81ac-48be-99a1-b58e4bbe2ad4",
              "parentUUID": "68708a46-5217-4591-8f76-10cee5d570ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, return NaN",
              "fullTitle": "Test toNumber.js function Give undefined to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toNumber(undefined)).to.be.NaN;",
              "err": {},
              "uuid": "5ed621db-69e8-4432-98d6-7a436a241a3e",
              "parentUUID": "68708a46-5217-4591-8f76-10cee5d570ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give invalid number string to method, return NaN",
              "fullTitle": "Test toNumber.js function Give invalid number string to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toNumber('Hello world!')).to.be.NaN;",
              "err": {},
              "uuid": "06d79ad0-b614-476b-85aa-8f455ebf5d35",
              "parentUUID": "68708a46-5217-4591-8f76-10cee5d570ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give Hexadecimals number string to method, return converted base 10",
              "fullTitle": "Test toNumber.js function Give Hexadecimals number string to method, return converted base 10",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(toNumber('0xabcdef'), 11259375);",
              "err": {},
              "uuid": "c9c4c093-1b83-4477-85c0-ef9bfde8f097",
              "parentUUID": "68708a46-5217-4591-8f76-10cee5d570ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid number string to method, return number type and same value",
              "fullTitle": "Test toNumber.js function Give valid number string to method, return number type and same value",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const convertedValue = toNumber(500);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 500);",
              "err": {},
              "uuid": "80def78b-8f17-4529-b901-7d7e039ba02b",
              "parentUUID": "68708a46-5217-4591-8f76-10cee5d570ab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ed621db-69e8-4432-98d6-7a436a241a3e",
            "06d79ad0-b614-476b-85aa-8f455ebf5d35",
            "c9c4c093-1b83-4477-85c0-ef9bfde8f097",
            "80def78b-8f17-4529-b901-7d7e039ba02b"
          ],
          "failures": [
            "2ebe3980-81ac-48be-99a1-b58e4bbe2ad4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "da90ae53-1611-4060-a4be-a0d728bd2690",
          "title": "toString test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/test/toString.test.js",
          "file": "/test/toString.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should preserved -0",
              "fullTitle": "toString test should preserved -0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toString(-0)).to.equal('-0');",
              "err": {},
              "uuid": "0213d627-d8ac-4ebb-92d3-6f7ed1073f23",
              "parentUUID": "da90ae53-1611-4060-a4be-a0d728bd2690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert array into a string",
              "fullTitle": "toString test should convert array into a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toString([1,2,3])).to.equal('1,2,3');",
              "err": {},
              "uuid": "8efd9021-ef16-4022-9f68-f2470e367b68",
              "parentUUID": "da90ae53-1611-4060-a4be-a0d728bd2690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, undefined, boolean, NaN",
              "fullTitle": "toString test should not return string for null, undefined, boolean, NaN",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toString(null)).to.not.equal('string');\nexpect(toString(undefined)).to.not.equal('string');\nexpect(toString(true)).to.not.equal('string');\nexpect(toString(NaN)).to.not.equal('string');",
              "err": {},
              "uuid": "b9167076-2d99-4401-850f-f37143753757",
              "parentUUID": "da90ae53-1611-4060-a4be-a0d728bd2690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return string for number, object, string",
              "fullTitle": "toString test should return string for number, object, string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(toString(123)).to.be.a('string');\nexpect(toString({'a':1})).to.be.a('string');\nexpect(toString('abc')).to.be.a('string');",
              "err": {},
              "uuid": "33da7094-c15b-4f7e-b5a3-847fbf430cae",
              "parentUUID": "da90ae53-1611-4060-a4be-a0d728bd2690",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0213d627-d8ac-4ebb-92d3-6f7ed1073f23",
            "8efd9021-ef16-4022-9f68-f2470e367b68",
            "b9167076-2d99-4401-850f-f37143753757",
            "33da7094-c15b-4f7e-b5a3-847fbf430cae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "411ad825-dded-4c5e-8561-8df3a83df370",
          "title": "upperFirst test",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/test/upperFirst.test.js",
          "file": "/test/upperFirst.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert fred into Fred",
              "fullTitle": "upperFirst test should convert fred into Fred",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(upperFirst('fred')).to.equal('Fred');",
              "err": {},
              "uuid": "28536e1b-219b-4b5b-8ae1-8d16c01a58c2",
              "parentUUID": "411ad825-dded-4c5e-8561-8df3a83df370",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert FRED into FRED",
              "fullTitle": "upperFirst test should convert FRED into FRED",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(upperFirst('FRED')).to.equal('FRED');",
              "err": {},
              "uuid": "4aa81858-d4eb-4f93-9d21-6fb26ff7ddb7",
              "parentUUID": "411ad825-dded-4c5e-8561-8df3a83df370",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "upperFirst should return string",
              "fullTitle": "upperFirst test upperFirst should return string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = upperFirst('fred');\nexpect(result).to.be.a('string');",
              "err": {},
              "uuid": "9d3f554c-48f0-485c-bf73-4c9fa58ca4cc",
              "parentUUID": "411ad825-dded-4c5e-8561-8df3a83df370",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, undefined, NaN",
              "fullTitle": "upperFirst test should not return string for null, undefined, NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(upperFirst(null)).to.not.equal('string');\n expect(upperFirst(undefined)).to.not.equal('string');\n expect(upperFirst(NaN)).to.not.equal('string');",
              "err": {},
              "uuid": "1cef67d5-0c7e-46e9-83a7-faff6dd2e639",
              "parentUUID": "411ad825-dded-4c5e-8561-8df3a83df370",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "28536e1b-219b-4b5b-8ae1-8d16c01a58c2",
            "4aa81858-d4eb-4f93-9d21-6fb26ff7ddb7",
            "9d3f554c-48f0-485c-bf73-4c9fa58ca4cc",
            "1cef67d5-0c7e-46e9-83a7-faff6dd2e639"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9fedc246-91a1-4321-bf82-369390abc6ea",
          "title": "Test word.js function",
          "fullFile": "/home/lazymies/Desktop/tuni/software_test_assignment/COMP.SE.200-2020-2021-1-Software-Testing/test/words.test.js",
          "file": "/test/words.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, method is failed because match method of String is missing",
              "fullTitle": "Test word.js function Give null to method, method is failed because match method of String is missing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n    words(null, null);\n}).to.throw(TypeError);",
              "err": {},
              "uuid": "36e8dd02-7559-4d84-99e3-9f68f014e8ff",
              "parentUUID": "9fedc246-91a1-4321-bf82-369390abc6ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, method is failed because match method of String is missing",
              "fullTitle": "Test word.js function Give undefined to method, method is failed because match method of String is missing",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n    words(undefined, null);\n}).to.throw(TypeError);",
              "err": {},
              "uuid": "c10d6589-f4ee-46fe-8281-6bf44107ad24",
              "parentUUID": "9fedc246-91a1-4321-bf82-369390abc6ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give empty string without pattern, return empty array",
              "fullTitle": "Test word.js function Give empty string without pattern, return empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(words('')).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "d5046ffb-befb-49cc-96e4-10fdf0a05bf9",
              "parentUUID": "9fedc246-91a1-4321-bf82-369390abc6ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give sample valid string, return array with splitted words and remove all special chars",
              "fullTitle": "Test word.js function Give sample valid string, return array with splitted words and remove all special chars",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(words('abc.a abc abb')).to.be.instanceOf(Array).that.eql(['abc', 'a', 'abc', 'abb']);\nexpect(words('abc.a a,bc ab|b')).to.be.instanceOf(Array).that.eql(['abc', 'a', 'a', 'bc', 'ab', 'b']);",
              "err": {},
              "uuid": "9e3c963f-676b-4edb-b9a1-db1a89f85e2e",
              "parentUUID": "9fedc246-91a1-4321-bf82-369390abc6ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give sample valid string, return array with splitted words match patterns",
              "fullTitle": "Test word.js function Give sample valid string, return array with splitted words match patterns",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const SPLIT_WORDS_BY_SPACE_AND_COMMA = /[^, ]+/g;\nexpect(words('abc.a ab,c abb', SPLIT_WORDS_BY_SPACE_AND_COMMA))\n        .to.be.instanceOf(Array)\n        .that.eql(['abc.a', 'ab', 'c', 'abb']);",
              "err": {},
              "uuid": "ad1985cf-9b67-4efd-acd4-16dc72c25f7c",
              "parentUUID": "9fedc246-91a1-4321-bf82-369390abc6ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "36e8dd02-7559-4d84-99e3-9f68f014e8ff",
            "c10d6589-f4ee-46fe-8281-6bf44107ad24",
            "d5046ffb-befb-49cc-96e4-10fdf0a05bf9",
            "9e3c963f-676b-4edb-b9a1-db1a89f85e2e",
            "ad1985cf-9b67-4efd-acd4-16dc72c25f7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportFilename": "index"
      },
      "version": "5.1.0"
    }
  }
}