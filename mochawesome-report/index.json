{
  "stats": {
    "suites": 38,
    "tests": 179,
    "passes": 115,
    "pending": 0,
    "failures": 64,
    "start": "2020-12-03T21:23:45.056Z",
    "end": "2020-12-03T21:23:45.207Z",
    "duration": 151,
    "testsRegistered": 179,
    "passPercent": 64.24581005586593,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "852b6464-df84-4dc8-8342-355bf6e3609a",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f16ad88b-cd26-477e-9f16-5408097cf7bb",
          "title": "add.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/add.test.js",
          "file": "/tests/add.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1 + 2 should return 3",
              "fullTitle": "add.js test 1 + 2 should return 3",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(1, 2)).to.equal(3);",
              "err": {},
              "uuid": "3ca8c71e-1cce-47fe-bf06-ec45d45c58bb",
              "parentUUID": "f16ad88b-cd26-477e-9f16-5408097cf7bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "'1' + 5 should return 6, number type",
              "fullTitle": "add.js test '1' + 5 should return 6, number type",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])('1', 5)).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:13:32)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "39588c36-d21b-4235-8cf4-314abd3734fb",
              "parentUUID": "f16ad88b-cd26-477e-9f16-5408097cf7bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "'1' + '5' should return 6, number type",
              "fullTitle": "add.js test '1' + '5' should return 6, number type",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])('1', '5')).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:18:34)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "8b14b38f-bdd7-4b00-adab-ac0042018dcb",
              "parentUUID": "f16ad88b-cd26-477e-9f16-5408097cf7bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "1 + '5' should return 6, number type",
              "fullTitle": "add.js test 1 + '5' should return 6, number type",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(1, '5')).to.equal(6);",
              "err": {
                "message": "AssertionError: expected '15' to equal 6",
                "estack": "AssertionError: expected '15' to equal 6\n    at Context.<anonymous> (tests/add.test.js:23:32)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "962015f5-d1f3-4bee-b285-e372d89dbd2a",
              "parentUUID": "f16ad88b-cd26-477e-9f16-5408097cf7bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null + 5 should return 5",
              "fullTitle": "add.js test null + 5 should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(null, 5)).to.equal(5);",
              "err": {},
              "uuid": "edba7967-729c-48b7-84b7-6d1aa64ed709",
              "parentUUID": "f16ad88b-cd26-477e-9f16-5408097cf7bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "5 + undefined should return 5",
              "fullTitle": "add.js test 5 + undefined should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(5, undefined)).to.equal(5);",
              "err": {},
              "uuid": "aef9a795-8c90-486e-9c18-e21c6444f7b3",
              "parentUUID": "f16ad88b-cd26-477e-9f16-5408097cf7bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null + undefined should return",
              "fullTitle": "add.js test null + undefined should return",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _add[\"default\"])(null, undefined)).to.equal(0);",
              "err": {
                "message": "AssertionError: expected null to equal 0",
                "estack": "AssertionError: expected null to equal 0\n    at Context.<anonymous> (tests/add.test.js:36:41)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "eb44c787-d6e7-43ea-aff3-2bb6a3db4f59",
              "parentUUID": "f16ad88b-cd26-477e-9f16-5408097cf7bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3ca8c71e-1cce-47fe-bf06-ec45d45c58bb",
            "edba7967-729c-48b7-84b7-6d1aa64ed709",
            "aef9a795-8c90-486e-9c18-e21c6444f7b3"
          ],
          "failures": [
            "39588c36-d21b-4235-8cf4-314abd3734fb",
            "8b14b38f-bdd7-4b00-adab-ac0042018dcb",
            "962015f5-d1f3-4bee-b285-e372d89dbd2a",
            "eb44c787-d6e7-43ea-aff3-2bb6a3db4f59"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d4bf450e-b47e-4621-9c3e-26cb00fbeed8",
          "title": "Test at.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/at.test.js",
          "file": "/tests/at.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return empty array",
              "fullTitle": "Test at.js function Give null to method, return empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(null)).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "508e3284-fdcb-451e-a30b-72fcbc475c27",
              "parentUUID": "d4bf450e-b47e-4621-9c3e-26cb00fbeed8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method with correct path, return empty array",
              "fullTitle": "Test at.js function Give undefined to method with correct path, return empty array",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(undefined, ['title'])).to.be.instanceOf(Array).that.eql([]);",
              "err": {
                "message": "AssertionError: expected [ undefined ] to deeply equal []",
                "estack": "AssertionError: expected [ undefined ] to deeply equal []\n    at Context.<anonymous> (tests/at.test.js:24:71)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- [\n-   [undefined]\n- ]\n+ []\n"
              },
              "uuid": "e401e690-d6da-4923-8c3d-c7da2ac7a4d0",
              "parentUUID": "d4bf450e-b47e-4621-9c3e-26cb00fbeed8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, return empty array",
              "fullTitle": "Test at.js function Give valid to method, return empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT)).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "98508295-c960-4c76-956d-541d822bf91b",
              "parentUUID": "d4bf450e-b47e-4621-9c3e-26cb00fbeed8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, with correct path. Return valid result",
              "fullTitle": "Test at.js function Give valid to method, with correct path. Return valid result",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT, ['title'])).to.be.instanceOf(Array).that.eql([VALID_OBJECT.title]);",
              "err": {},
              "uuid": "5ed8c785-4eb2-425e-962e-0940025e9309",
              "parentUUID": "d4bf450e-b47e-4621-9c3e-26cb00fbeed8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid to method, with correct paths. Return valid results",
              "fullTitle": "Test at.js function Give valid to method, with correct paths. Return valid results",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _at[\"default\"])(VALID_OBJECT, ['title', 'tags[0]'])).to.be.instanceOf(Array).that.eql([VALID_OBJECT.title, VALID_OBJECT.tags[0]]);",
              "err": {},
              "uuid": "5e4b92cd-8b7d-4f9c-b910-d3cec0ba75ec",
              "parentUUID": "d4bf450e-b47e-4621-9c3e-26cb00fbeed8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "508e3284-fdcb-451e-a30b-72fcbc475c27",
            "98508295-c960-4c76-956d-541d822bf91b",
            "5ed8c785-4eb2-425e-962e-0940025e9309",
            "5e4b92cd-8b7d-4f9c-b910-d3cec0ba75ec"
          ],
          "failures": [
            "e401e690-d6da-4923-8c3d-c7da2ac7a4d0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0b10a44c-524e-45c3-8da6-123b9d8f53f1",
          "title": "camelCase.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/camelCase.test.js",
          "file": "/tests/camelCase.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test assigning an object to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning an object to the method. Expect an empty string",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])({\n  foo: 'bar'\n}), '');",
              "err": {
                "message": "AssertionError: expected ' objectObject' to equal ''",
                "estack": "AssertionError: expected ' objectObject' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:9:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  objectObject\n"
              },
              "uuid": "f1dd8bef-1efc-42bf-94b5-0daeb741974f",
              "parentUUID": "0b10a44c-524e-45c3-8da6-123b9d8f53f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning null to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning null to the method. Expect an empty string",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(null), '');",
              "err": {
                "message": "AssertionError: expected ' null' to equal ''",
                "estack": "AssertionError: expected ' null' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:14:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  null\n"
              },
              "uuid": "01510a40-ced3-4a65-8000-b41c409b205a",
              "parentUUID": "0b10a44c-524e-45c3-8da6-123b9d8f53f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning undefined to the method. Expect an empty string",
              "fullTitle": "camelCase.js test Test assigning undefined to the method. Expect an empty string",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(undefined), '');",
              "err": {
                "message": "AssertionError: expected ' undefined' to equal ''",
                "estack": "AssertionError: expected ' undefined' to equal ''\n    at Context.<anonymous> (tests/camelCase.test.js:19:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  undefined\n"
              },
              "uuid": "5e4b4b54-968d-4f58-a716-35f1911b8d18",
              "parentUUID": "0b10a44c-524e-45c3-8da6-123b9d8f53f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning true to the method. Expect boolean in lowercase",
              "fullTitle": "camelCase.js test Test assigning true to the method. Expect boolean in lowercase",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])(true), 'true');",
              "err": {
                "message": "AssertionError: expected ' true' to equal 'true'",
                "estack": "AssertionError: expected ' true' to equal 'true'\n    at Context.<anonymous> (tests/camelCase.test.js:24:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  true\n+ true\n"
              },
              "uuid": "66d21849-2f9d-45e7-b6bf-bc49098acac5",
              "parentUUID": "0b10a44c-524e-45c3-8da6-123b9d8f53f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning valid string to the method. Expect correctly converted value",
              "fullTitle": "camelCase.js test Test assigning valid string to the method. Expect correctly converted value",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])('hello world'), 'helloWorld');",
              "err": {
                "message": "AssertionError: expected ' helloWorld' to equal 'helloWorld'",
                "estack": "AssertionError: expected ' helloWorld' to equal 'helloWorld'\n    at Context.<anonymous> (tests/camelCase.test.js:29:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  helloWorld\n+ helloWorld\n"
              },
              "uuid": "e6d9768c-f7f6-4696-904f-cdbe41eb8ee0",
              "parentUUID": "0b10a44c-524e-45c3-8da6-123b9d8f53f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test assigning valid string with special chars to the method. Expect correctly converted value",
              "fullTitle": "camelCase.js test Test assigning valid string with special chars to the method. Expect correctly converted value",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _camelCase[\"default\"])('___hello-world! assignment^'), 'helloWorldAssignment');",
              "err": {
                "message": "AssertionError: expected ' helloWorldAssignment' to equal 'helloWorldAssignment'",
                "estack": "AssertionError: expected ' helloWorldAssignment' to equal 'helloWorldAssignment'\n    at Context.<anonymous> (tests/camelCase.test.js:34:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "-  helloWorldAssignment\n+ helloWorldAssignment\n"
              },
              "uuid": "547c79e9-588f-4401-845e-d0e01defd3c9",
              "parentUUID": "0b10a44c-524e-45c3-8da6-123b9d8f53f1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f1dd8bef-1efc-42bf-94b5-0daeb741974f",
            "01510a40-ced3-4a65-8000-b41c409b205a",
            "5e4b4b54-968d-4f58-a716-35f1911b8d18",
            "66d21849-2f9d-45e7-b6bf-bc49098acac5",
            "e6d9768c-f7f6-4696-904f-cdbe41eb8ee0",
            "547c79e9-588f-4401-845e-d0e01defd3c9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b108884a-ee64-45fd-bd87-9c9ea307d6d7",
          "title": "capitalize test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/capitalize.test.js",
          "file": "/tests/capitalize.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert FRED into Fred",
              "fullTitle": "capitalize test should convert FRED into Fred",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])('FRED')).to.equal('Fred');",
              "err": {},
              "uuid": "242111cd-ee0d-49d7-b59c-9c83d5440a1c",
              "parentUUID": "b108884a-ee64-45fd-bd87-9c9ea307d6d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "capitalize should return string",
              "fullTitle": "capitalize test capitalize should return string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _capitalize[\"default\"])('fred');\nexpect(result).to.be.a('string');",
              "err": {},
              "uuid": "2fbc1a45-cf77-45a7-92dd-04a5ec3040a8",
              "parentUUID": "b108884a-ee64-45fd-bd87-9c9ea307d6d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, boolean, undefined, number",
              "fullTitle": "capitalize test should not return string for null, boolean, undefined, number",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])(null)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(true)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _capitalize[\"default\"])(123)).to.not.equal('string');",
              "err": {},
              "uuid": "e129f417-9367-4a88-870a-4d318b58933f",
              "parentUUID": "b108884a-ee64-45fd-bd87-9c9ea307d6d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "242111cd-ee0d-49d7-b59c-9c83d5440a1c",
            "2fbc1a45-cf77-45a7-92dd-04a5ec3040a8",
            "e129f417-9367-4a88-870a-4d318b58933f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c8ec45cd-58e0-4b77-9e48-5cfe823654c3",
          "title": "castArray.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/castArray.test.js",
          "file": "/tests/castArray.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cast null should return array with null as first item",
              "fullTitle": "castArray.js test cast null should return array with null as first item",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual([null], (0, _castArray[\"default\"])(null));",
              "err": {},
              "uuid": "eaffe8ee-5af2-438a-9f49-070268a6b406",
              "parentUUID": "c8ec45cd-58e0-4b77-9e48-5cfe823654c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast undefined should return array with undefined as first item",
              "fullTitle": "castArray.js test cast undefined should return array with undefined as first item",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual([undefined], (0, _castArray[\"default\"])(undefined));",
              "err": {},
              "uuid": "a4c175fe-43c6-451b-9555-ce7bbe4921fb",
              "parentUUID": "c8ec45cd-58e0-4b77-9e48-5cfe823654c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast nothing should return an empty array",
              "fullTitle": "castArray.js test cast nothing should return an empty array",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual([], (0, _castArray[\"default\"])());",
              "err": {
                "message": "AssertionError: expected [] to deeply equal [ undefined ]",
                "estack": "AssertionError: expected [] to deeply equal [ undefined ]\n    at Context.<anonymous> (tests/castArray.test.js:17:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- []\n+ [\n+   [undefined]\n+ ]\n"
              },
              "uuid": "1566b5c0-d5c2-4643-b257-61c1c28a9fba",
              "parentUUID": "c8ec45cd-58e0-4b77-9e48-5cfe823654c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast parameters 1, 'a', 5 should return an array [1, 'a', 5] ",
              "fullTitle": "castArray.js test cast parameters 1, 'a', 5 should return an array [1, 'a', 5] ",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _castArray[\"default\"])(1, 'a', 5), [1, 'a', 5]);",
              "err": {
                "message": "AssertionError: expected [ 1 ] to deeply equal [ 1, 'a', 5 ]",
                "estack": "AssertionError: expected [ 1 ] to deeply equal [ 1, 'a', 5 ]\n    at Context.<anonymous> (tests/castArray.test.js:22:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": " [\n   1\n+   \"a\"\n+   5\n ]\n"
              },
              "uuid": "59be86a9-110d-4c14-b0bc-590ed82ca464",
              "parentUUID": "c8ec45cd-58e0-4b77-9e48-5cfe823654c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast a parameter 'abc' should return an array ['abc'] ",
              "fullTitle": "castArray.js test cast a parameter 'abc' should return an array ['abc'] ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _castArray[\"default\"])('abc'), ['abc']);",
              "err": {},
              "uuid": "d34ba7ca-f2ca-40eb-a059-5c51913be9b0",
              "parentUUID": "c8ec45cd-58e0-4b77-9e48-5cfe823654c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast a parameter {foo: 'abc'} should return an array [{foo: 'abc'}] ",
              "fullTitle": "castArray.js test cast a parameter {foo: 'abc'} should return an array [{foo: 'abc'}] ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _castArray[\"default\"])({\n  foo: 'abc'\n}), [{\n  foo: 'abc'\n}]);",
              "err": {},
              "uuid": "901fac3b-21c4-42c0-889f-f97bcec6b58e",
              "parentUUID": "c8ec45cd-58e0-4b77-9e48-5cfe823654c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast parameters (3, [2, 3]) should return an array [3, 2, 3]",
              "fullTitle": "castArray.js test cast parameters (3, [2, 3]) should return an array [3, 2, 3]",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _castArray[\"default\"])(3, [2, 3]), [3, 2, 3]);",
              "err": {
                "message": "AssertionError: expected [ 3 ] to deeply equal [ 3, 2, 3 ]",
                "estack": "AssertionError: expected [ 3 ] to deeply equal [ 3, 2, 3 ]\n    at Context.<anonymous> (tests/castArray.test.js:35:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": " [\n   3\n+   2\n+   3\n ]\n"
              },
              "uuid": "384fbb97-1a57-4bc8-8d02-34d972bf9d3c",
              "parentUUID": "c8ec45cd-58e0-4b77-9e48-5cfe823654c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast a single paramter, return an array of that parameter",
              "fullTitle": "castArray.js test cast a single paramter, return an array of that parameter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _castArray[\"default\"])(1), [1]);",
              "err": {},
              "uuid": "db4be779-df79-45c0-b983-ae94e7a14d0a",
              "parentUUID": "c8ec45cd-58e0-4b77-9e48-5cfe823654c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cast an array, expect return the array",
              "fullTitle": "castArray.js test cast an array, expect return the array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _castArray[\"default\"])([1, 2, 3]), [1, 2, 3]);",
              "err": {},
              "uuid": "0557f952-66e7-4427-aba4-1069f6e96c1c",
              "parentUUID": "c8ec45cd-58e0-4b77-9e48-5cfe823654c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eaffe8ee-5af2-438a-9f49-070268a6b406",
            "a4c175fe-43c6-451b-9555-ce7bbe4921fb",
            "d34ba7ca-f2ca-40eb-a059-5c51913be9b0",
            "901fac3b-21c4-42c0-889f-f97bcec6b58e",
            "db4be779-df79-45c0-b983-ae94e7a14d0a",
            "0557f952-66e7-4427-aba4-1069f6e96c1c"
          ],
          "failures": [
            "1566b5c0-d5c2-4643-b257-61c1c28a9fba",
            "59be86a9-110d-4c14-b0bc-590ed82ca464",
            "384fbb97-1a57-4bc8-8d02-34d972bf9d3c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "59ebef0c-7460-444a-95f5-618f8e61fbb3",
          "title": "ceil test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/ceil.test.js",
          "file": "/tests/ceil.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "4.006 with precision 0 should return 5",
              "fullTitle": "ceil test 4.006 with precision 0 should return 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(4.006)).to.equal(5);",
              "err": {},
              "uuid": "ad24e06f-0d14-4467-9f0f-f324c702f95e",
              "parentUUID": "59ebef0c-7460-444a-95f5-618f8e61fbb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6.004 with precision 2 should return 6.01",
              "fullTitle": "ceil test 6.004 with precision 2 should return 6.01",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(6.004, 2)).to.equal(6.01);",
              "err": {},
              "uuid": "e68f68ce-8709-4529-960a-cc2bbd490e6e",
              "parentUUID": "59ebef0c-7460-444a-95f5-618f8e61fbb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6040 with precision -2 should return 6100",
              "fullTitle": "ceil test 6040 with precision -2 should return 6100",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(6040, -2)).to.equal(6100);",
              "err": {},
              "uuid": "c71b2af7-d4a4-4b17-9ea0-e96c33ba9374",
              "parentUUID": "59ebef0c-7460-444a-95f5-618f8e61fbb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "passing null, undefined, NaN, string should not give results",
              "fullTitle": "ceil test passing null, undefined, NaN, string should not give results",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _ceil[\"default\"])(null)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])(undefined)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])(NaN)).to.not.equal('number');\nexpect((0, _ceil[\"default\"])('abc')).to.not.equal('number');",
              "err": {},
              "uuid": "69326b29-fbf3-4f8d-b0a5-4f885424ec97",
              "parentUUID": "59ebef0c-7460-444a-95f5-618f8e61fbb3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad24e06f-0d14-4467-9f0f-f324c702f95e",
            "e68f68ce-8709-4529-960a-cc2bbd490e6e",
            "c71b2af7-d4a4-4b17-9ea0-e96c33ba9374",
            "69326b29-fbf3-4f8d-b0a5-4f885424ec97"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6694267c-a1fd-46ca-8e8b-ecc086012142",
          "title": "chunk.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/chunk.test.js",
          "file": "/tests/chunk.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "chunk a valid array with zero size, expect return unchanged array",
              "fullTitle": "chunk.js test chunk a valid array with zero size, expect return unchanged array",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _chunk[\"default\"])([1, 2, 3], 0), [1, 2, 3]);",
              "err": {
                "message": "AssertionError: expected [] to deeply equal [ 1, 2, 3 ]",
                "estack": "AssertionError: expected [] to deeply equal [ 1, 2, 3 ]\n    at Context.<anonymous> (tests/chunk.test.js:10:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- []\n+ [\n+   1\n+   2\n+   3\n+ ]\n"
              },
              "uuid": "071b7d64-a476-4f73-97ed-4ba9f87c63f1",
              "parentUUID": "6694267c-a1fd-46ca-8e8b-ecc086012142",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk a valid array with negavitve size, expect empty array",
              "fullTitle": "chunk.js test chunk a valid array with negavitve size, expect empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _chunk[\"default\"])([1, 2, 3], -100.55), []);",
              "err": {},
              "uuid": "83bbb0f3-e64d-4426-b215-689dd8dca426",
              "parentUUID": "6694267c-a1fd-46ca-8e8b-ecc086012142",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk an empty array with valid size, expect empty array",
              "fullTitle": "chunk.js test chunk an empty array with valid size, expect empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _chunk[\"default\"])([], 10), []);",
              "err": {},
              "uuid": "65d8ca4a-7604-4642-81f3-f4b5da76037f",
              "parentUUID": "6694267c-a1fd-46ca-8e8b-ecc086012142",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk an empty array with negative size, expect empty array",
              "fullTitle": "chunk.js test chunk an empty array with negative size, expect empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _chunk[\"default\"])([], -10), []);",
              "err": {},
              "uuid": "1ad05f0e-6603-42c3-966e-982834dd0ced",
              "parentUUID": "6694267c-a1fd-46ca-8e8b-ecc086012142",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk invalid type with valid size, expect thrown error",
              "fullTitle": "chunk.js test chunk invalid type with valid size, expect thrown error",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _chunk[\"default\"])(\"hello world\", 2);\n}, 'Invalid input');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/chunk.test.js:28:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "fe404669-cc5b-4f74-9fae-a9dc357f6f4e",
              "parentUUID": "6694267c-a1fd-46ca-8e8b-ecc086012142",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk valid type with valid size, expect valid sub arrays",
              "fullTitle": "chunk.js test chunk valid type with valid size, expect valid sub arrays",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _chunk[\"default\"])(['foo', 'doctor', 'hello'], 2), [['foo', 'doctor'], ['hello']]);",
              "err": {
                "message": "AssertionError: expected [ [ 'hello', undefined ],  ] to deeply equal [ [ 'foo', 'doctor' ], [ 'hello' ] ]",
                "estack": "AssertionError: expected [ [ 'hello', undefined ],  ] to deeply equal [ [ 'foo', 'doctor' ], [ 'hello' ] ]\n    at Context.<anonymous> (tests/chunk.test.js:35:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": " [\n   [\n+     \"foo\"\n+     \"doctor\"\n+   ]\n+   [\n     \"hello\"\n-     [undefined]\n   ]\n ]\n"
              },
              "uuid": "153e343e-4c5d-4207-b292-98de689627e5",
              "parentUUID": "6694267c-a1fd-46ca-8e8b-ecc086012142",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk an array without explicitly size, default size is 1",
              "fullTitle": "chunk.js test chunk an array without explicitly size, default size is 1",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _chunk[\"default\"])(['a', 'b', 'c', 'd']), [['a'], ['b'], ['c'], ['d']]);",
              "err": {
                "message": "AssertionError: expected [ [ 'd' ], , ,  ] to deeply equal [ [ 'a' ], [ 'b' ], [ 'c' ], [ 'd' ] ]",
                "estack": "AssertionError: expected [ [ 'd' ], , ,  ] to deeply equal [ [ 'a' ], [ 'b' ], [ 'c' ], [ 'd' ] ]\n    at Context.<anonymous> (tests/chunk.test.js:39:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": " [\n   [\n+     \"a\"\n+   ]\n+   [\n+     \"b\"\n+   ]\n+   [\n+     \"c\"\n+   ]\n+   [\n     \"d\"\n   ]\n ]\n"
              },
              "uuid": "38fa626a-5c64-4c1d-a6ee-b36897dfa929",
              "parentUUID": "6694267c-a1fd-46ca-8e8b-ecc086012142",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chunk a null, then expect return empty array, discard size",
              "fullTitle": "chunk.js test chunk a null, then expect return empty array, discard size",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _chunk[\"default\"])(null, 2), []);",
              "err": {},
              "uuid": "35ed1e97-a7ee-4edb-86f9-8bd82ddee4dd",
              "parentUUID": "6694267c-a1fd-46ca-8e8b-ecc086012142",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83bbb0f3-e64d-4426-b215-689dd8dca426",
            "65d8ca4a-7604-4642-81f3-f4b5da76037f",
            "1ad05f0e-6603-42c3-966e-982834dd0ced",
            "35ed1e97-a7ee-4edb-86f9-8bd82ddee4dd"
          ],
          "failures": [
            "071b7d64-a476-4f73-97ed-4ba9f87c63f1",
            "fe404669-cc5b-4f74-9fae-a9dc357f6f4e",
            "153e343e-4c5d-4207-b292-98de689627e5",
            "38fa626a-5c64-4c1d-a6ee-b36897dfa929"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b447c075-2fe1-40af-9216-e6e475789e38",
          "title": "clamp.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/clamp.test.js",
          "file": "/tests/clamp.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "clamp null in range, should throw error",
              "fullTitle": "clamp.js test clamp null in range, should throw error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _clamp[\"default\"])(null, 1, 10);\n}, 'Invalid Argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/clamp.test.js:8:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "a5e3151a-d969-434b-9daf-caeed408d510",
              "parentUUID": "b447c075-2fe1-40af-9216-e6e475789e38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clamp undefined in range, should throw error",
              "fullTitle": "clamp.js test clamp undefined in range, should throw error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _clamp[\"default\"])(undefined, 1, 10);\n}, 'Invalid Argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/clamp.test.js:14:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "a115e53f-9a63-4a0f-90ef-97a3df3f00b7",
              "parentUUID": "b447c075-2fe1-40af-9216-e6e475789e38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clamp without parameters, should throw error",
              "fullTitle": "clamp.js test clamp without parameters, should throw error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _clamp[\"default\"])();\n}, 'Invalid Argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/clamp.test.js:20:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "ec6fba0c-d468-4a9d-adac-b9b047305d74",
              "parentUUID": "b447c075-2fe1-40af-9216-e6e475789e38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clamp number in incorrect range, should thrown error",
              "fullTitle": "clamp.js test clamp number in incorrect range, should thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _clamp[\"default\"])(10, 100, 1);\n}, 'Invalid Range');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/clamp.test.js:26:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "59458729-218c-49a3-a4e3-50ab9baee69b",
              "parentUUID": "b447c075-2fe1-40af-9216-e6e475789e38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clamp number in range without lower, should thrown error",
              "fullTitle": "clamp.js test clamp number in range without lower, should thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _clamp[\"default\"])(10, null, 1);\n}, 'Invalid Range');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/clamp.test.js:32:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "c6668ca0-f22b-4452-ab71-0dcd9ad858de",
              "parentUUID": "b447c075-2fe1-40af-9216-e6e475789e38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clamp number in range without upper, should thrown error",
              "fullTitle": "clamp.js test clamp number in range without upper, should thrown error",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _clamp[\"default\"])(10, 1);\n}, 'Invalid Range');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/clamp.test.js:38:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "e737f781-ce39-4d28-b1dc-a0203ede7337",
              "parentUUID": "b447c075-2fe1-40af-9216-e6e475789e38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clamp number in range, return number itself",
              "fullTitle": "clamp.js test clamp number in range, return number itself",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _clamp[\"default\"])(42, 0, 1337), 42);",
              "err": {
                "message": "AssertionError: expected 0 to equal 42",
                "estack": "AssertionError: expected 0 to equal 42\n    at Context.<anonymous> (tests/clamp.test.js:44:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- 0\n+ 42\n"
              },
              "uuid": "cb52d9ee-2310-4f36-b65f-503cd9cb8b1f",
              "parentUUID": "b447c075-2fe1-40af-9216-e6e475789e38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clamp number less than range, return range lowest number",
              "fullTitle": "clamp.js test clamp number less than range, return range lowest number",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _clamp[\"default\"])(42, 1337, 9000), 1337);",
              "err": {},
              "uuid": "1c4b485c-4f2b-48f5-9206-73806f4e95c0",
              "parentUUID": "b447c075-2fe1-40af-9216-e6e475789e38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clamp number greater than range, return range largest number",
              "fullTitle": "clamp.js test clamp number greater than range, return range largest number",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _clamp[\"default\"])(42, 0, 10), 10);",
              "err": {
                "message": "AssertionError: expected 0 to equal 10",
                "estack": "AssertionError: expected 0 to equal 10\n    at Context.<anonymous> (tests/clamp.test.js:52:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- 0\n+ 10\n"
              },
              "uuid": "084879cc-469b-4f07-8996-e4bb82d4f2a8",
              "parentUUID": "b447c075-2fe1-40af-9216-e6e475789e38",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c4b485c-4f2b-48f5-9206-73806f4e95c0"
          ],
          "failures": [
            "a5e3151a-d969-434b-9daf-caeed408d510",
            "a115e53f-9a63-4a0f-90ef-97a3df3f00b7",
            "ec6fba0c-d468-4a9d-adac-b9b047305d74",
            "59458729-218c-49a3-a4e3-50ab9baee69b",
            "c6668ca0-f22b-4452-ab71-0dcd9ad858de",
            "e737f781-ce39-4d28-b1dc-a0203ede7337",
            "cb52d9ee-2310-4f36-b65f-503cd9cb8b1f",
            "084879cc-469b-4f07-8996-e4bb82d4f2a8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3c8cc2e6-5048-46d1-a194-20cd8408bfe2",
          "title": "compact.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/compact.test.js",
          "file": "/tests/compact.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "compact an empty array, return empty array",
              "fullTitle": "compact.js test compact an empty array, return empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _compact[\"default\"])([]), []);",
              "err": {},
              "uuid": "299954dc-309c-4e94-8498-6dd5b735822b",
              "parentUUID": "3c8cc2e6-5048-46d1-a194-20cd8408bfe2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "compact null, expect throws error",
              "fullTitle": "compact.js test compact null, expect throws error",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throw\"](function () {\n  (0, _compact[\"default\"])(null);\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'object null is not iterable (cannot read property Symbol(Symbol.iterator))'",
                "estack": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'object null is not iterable (cannot read property Symbol(Symbol.iterator))'\n    at Context.<anonymous> (tests/compact.test.js:13:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- object null is not iterable (cannot read property Symbol(Symbol.iterator))\n+ Invalid argument\n"
              },
              "uuid": "520986a3-9e32-4ba2-8b49-b0e06b6b58fb",
              "parentUUID": "3c8cc2e6-5048-46d1-a194-20cd8408bfe2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "compact undefined, expect throws error",
              "fullTitle": "compact.js test compact undefined, expect throws error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throw\"](function () {\n  (0, _compact[\"default\"])(undefined);\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'undefined is not iterable (cannot read property Symbol(Symbol.iterator))'",
                "estack": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'undefined is not iterable (cannot read property Symbol(Symbol.iterator))'\n    at Context.<anonymous> (tests/compact.test.js:19:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- undefined is not iterable (cannot read property Symbol(Symbol.iterator))\n+ Invalid argument\n"
              },
              "uuid": "cbbb85f1-e287-4e42-9e35-f3d3ddbf99e3",
              "parentUUID": "3c8cc2e6-5048-46d1-a194-20cd8408bfe2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "compact string, expect throws error",
              "fullTitle": "compact.js test compact string, expect throws error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throw\"](function () {\n  (0, _compact[\"default\"])(\"Hello\");\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/compact.test.js:25:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "15668096-7e1e-4e7a-b6b4-6c92193e6dbe",
              "parentUUID": "3c8cc2e6-5048-46d1-a194-20cd8408bfe2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "compact object, expect throws error",
              "fullTitle": "compact.js test compact object, expect throws error",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throw\"](function () {\n  (0, _compact[\"default\"])({\n    foo: 'bar'\n  });\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'",
                "estack": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'\n    at Context.<anonymous> (tests/compact.test.js:31:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- Invalid attempt to iterate non-iterable instance.\n- In order to be iterable, non-array objects must have a [Symbol.iterator]() method.\n+ Invalid argument\n"
              },
              "uuid": "52435fb0-dde9-479d-866b-dbe9c2c52d77",
              "parentUUID": "3c8cc2e6-5048-46d1-a194-20cd8408bfe2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "compact an array with valid and falsey values, return array with valid values",
              "fullTitle": "compact.js test compact an array with valid and falsey values, return array with valid values",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _compact[\"default\"])([123, undefined, 'Hello', null, '', false, {\n  foo: 'bar'\n}, 0, 5.55]), [123, 'Hello', {\n  foo: 'bar'\n}, 5.55]);",
              "err": {
                "message": "AssertionError: expected [ Array(3) ] to deeply equal [ 123, 'Hello', { foo: 'bar' }, 5.55 ]",
                "estack": "AssertionError: expected [ Array(3) ] to deeply equal [ 123, 'Hello', { foo: 'bar' }, 5.55 ]\n    at Context.<anonymous> (tests/compact.test.js:37:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": " [\n+   123\n   \"Hello\"\n   {\n     \"foo\": \"bar\"\n   }\n"
              },
              "uuid": "9bde17cc-fd0e-4d59-ada0-3fdff293264e",
              "parentUUID": "3c8cc2e6-5048-46d1-a194-20cd8408bfe2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "299954dc-309c-4e94-8498-6dd5b735822b"
          ],
          "failures": [
            "520986a3-9e32-4ba2-8b49-b0e06b6b58fb",
            "cbbb85f1-e287-4e42-9e35-f3d3ddbf99e3",
            "15668096-7e1e-4e7a-b6b4-6c92193e6dbe",
            "52435fb0-dde9-479d-866b-dbe9c2c52d77",
            "9bde17cc-fd0e-4d59-ada0-3fdff293264e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eff63341-9f10-43af-98f2-d9e7b0b5f53b",
          "title": "countBy.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/countBy.test.js",
          "file": "/tests/countBy.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "countBy a valid array with valid iteratee, expect return compacted object",
              "fullTitle": "countBy.js test countBy a valid array with valid iteratee, expect return compacted object",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var countedObject = (0, _countBy[\"default\"])(USERS, function (user) {\n  return user.active;\n});\nassert.equal(countedObject[\"true\"], 2);\nassert.equal(countedObject[\"false\"], 1);",
              "err": {
                "message": "AssertionError: expected 1 to equal 2",
                "estack": "AssertionError: expected 1 to equal 2\n    at Context.<anonymous> (tests/countBy.test.js:15:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- 1\n+ 2\n"
              },
              "uuid": "fcc6b8b5-b004-4227-b4b2-85ad7624a9aa",
              "parentUUID": "eff63341-9f10-43af-98f2-d9e7b0b5f53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "countBy a valid array with invalid iteratee, expect return empty object",
              "fullTitle": "countBy.js test countBy a valid array with invalid iteratee, expect return empty object",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _countBy[\"default\"])(USERS, function (user) {\n  return user.title;\n}), {});",
              "err": {
                "message": "AssertionError: expected { undefined: 2 } to deeply equal {}",
                "estack": "AssertionError: expected { undefined: 2 } to deeply equal {}\n    at Context.<anonymous> (tests/countBy.test.js:20:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- {\n-   \"undefined\": 2\n- }\n+ {}\n"
              },
              "uuid": "1e5a4196-e75d-40eb-982e-6217fdf586c2",
              "parentUUID": "eff63341-9f10-43af-98f2-d9e7b0b5f53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "countBy a valid array with void return iteratee, expect return empty object",
              "fullTitle": "countBy.js test countBy a valid array with void return iteratee, expect return empty object",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _countBy[\"default\"])(USERS, function (user) {}), {});",
              "err": {
                "message": "AssertionError: expected { undefined: 2 } to deeply equal {}",
                "estack": "AssertionError: expected { undefined: 2 } to deeply equal {}\n    at Context.<anonymous> (tests/countBy.test.js:24:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- {\n-   \"undefined\": 2\n- }\n+ {}\n"
              },
              "uuid": "70ea5213-b6bf-497c-8cad-ebcc81a60ded",
              "parentUUID": "eff63341-9f10-43af-98f2-d9e7b0b5f53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "countBy a valid array without iterator, expect thrown message",
              "fullTitle": "countBy.js test countBy a valid array without iterator, expect thrown message",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _countBy[\"default\"])(USERS);\n}, 'Invalid Iteratee');",
              "err": {
                "message": "AssertionError: expected [Function] to throw error including 'Invalid Iteratee' but got 'iteratee is not a function'",
                "estack": "AssertionError: expected [Function] to throw error including 'Invalid Iteratee' but got 'iteratee is not a function'\n    at Context.<anonymous> (tests/countBy.test.js:28:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- iteratee is not a function\n+ Invalid Iteratee\n"
              },
              "uuid": "0ee169a3-900b-4673-bad9-6c7bbd050db8",
              "parentUUID": "eff63341-9f10-43af-98f2-d9e7b0b5f53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "countBy invalid array with valid iterator, expect thrown message",
              "fullTitle": "countBy.js test countBy invalid array with valid iterator, expect thrown message",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _countBy[\"default\"])(undefined, function (user) {\n    return user.active;\n  });\n}, 'Invalid Argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/countBy.test.js:34:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "c2ffd27c-d39d-4ce8-8f51-7e48e61dfe95",
              "parentUUID": "eff63341-9f10-43af-98f2-d9e7b0b5f53b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fcc6b8b5-b004-4227-b4b2-85ad7624a9aa",
            "1e5a4196-e75d-40eb-982e-6217fdf586c2",
            "70ea5213-b6bf-497c-8cad-ebcc81a60ded",
            "0ee169a3-900b-4673-bad9-6c7bbd050db8",
            "c2ffd27c-d39d-4ce8-8f51-7e48e61dfe95"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e9083ed0-956c-47bb-9dfd-cd679592d5ec",
          "title": "defaultTo.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/defaultTo.test.js",
          "file": "/tests/defaultTo.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "defaultTo null, expect return 2nd parameter",
              "fullTitle": "defaultTo.js test defaultTo null, expect return 2nd parameter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _defaultTo[\"default\"])(null, 100), 100);",
              "err": {},
              "uuid": "fbab80ae-320f-47ab-9723-0837de75e403",
              "parentUUID": "e9083ed0-956c-47bb-9dfd-cd679592d5ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "defaultTo NaN, expect return 2nd parameter",
              "fullTitle": "defaultTo.js test defaultTo NaN, expect return 2nd parameter",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _defaultTo[\"default\"])(NaN, 100), 100);",
              "err": {
                "message": "AssertionError: expected NaN to equal 100",
                "estack": "AssertionError: expected NaN to equal 100\n    at Context.<anonymous> (tests/defaultTo.test.js:12:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- NaN\n+ 100\n"
              },
              "uuid": "024bc108-7cad-442c-ac1e-2ac140caa417",
              "parentUUID": "e9083ed0-956c-47bb-9dfd-cd679592d5ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "defaultTo undefined, expect return 2nd parameter",
              "fullTitle": "defaultTo.js test defaultTo undefined, expect return 2nd parameter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _defaultTo[\"default\"])(undefined, 100), 100);",
              "err": {},
              "uuid": "c50bd252-99d8-42c8-b0d8-7bcde88378f0",
              "parentUUID": "e9083ed0-956c-47bb-9dfd-cd679592d5ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "defaultTo valid 1st parameter , expect return 1st parameter",
              "fullTitle": "defaultTo.js test defaultTo valid 1st parameter , expect return 1st parameter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _defaultTo[\"default\"])('foo', 100), 'foo');",
              "err": {},
              "uuid": "2ee03fcc-d25a-4df4-b317-a74da667e1b4",
              "parentUUID": "e9083ed0-956c-47bb-9dfd-cd679592d5ec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fbab80ae-320f-47ab-9723-0837de75e403",
            "c50bd252-99d8-42c8-b0d8-7bcde88378f0",
            "2ee03fcc-d25a-4df4-b317-a74da667e1b4"
          ],
          "failures": [
            "024bc108-7cad-442c-ac1e-2ac140caa417"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8580ac3f-50df-46e0-8cd2-e6c8631e825e",
          "title": "defaultToAny.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/defaultToAny.test.js",
          "file": "/tests/defaultToAny.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "defaultToAny null as 1st and 2nd parameters expect return last parameter",
              "fullTitle": "defaultToAny.js test defaultToAny null as 1st and 2nd parameters expect return last parameter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _defaultToAny[\"default\"])(null, null, 100), 100);",
              "err": {},
              "uuid": "c72b69b6-c861-478d-91ee-d3c544d5598f",
              "parentUUID": "8580ac3f-50df-46e0-8cd2-e6c8631e825e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "defaultToAny NaN, null as 2nd paramter, expect return last parameter",
              "fullTitle": "defaultToAny.js test defaultToAny NaN, null as 2nd paramter, expect return last parameter",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _defaultToAny[\"default\"])(NaN, null, 100), 100);",
              "err": {
                "message": "AssertionError: expected NaN to equal 100",
                "estack": "AssertionError: expected NaN to equal 100\n    at Context.<anonymous> (tests/defaultToAny.test.js:12:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- NaN\n+ 100\n"
              },
              "uuid": "c630d788-3f9a-47b8-b15f-aaf809ff5f13",
              "parentUUID": "8580ac3f-50df-46e0-8cd2-e6c8631e825e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "defaultToAny undefined as 1st parameter, null as 2nd paramter, NaN as 3rd parameter, expect return last parameter",
              "fullTitle": "defaultToAny.js test defaultToAny undefined as 1st parameter, null as 2nd paramter, NaN as 3rd parameter, expect return last parameter",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _defaultToAny[\"default\"])(undefined, null, NaN, 100), 100);",
              "err": {
                "message": "AssertionError: expected NaN to equal 100",
                "estack": "AssertionError: expected NaN to equal 100\n    at Context.<anonymous> (tests/defaultToAny.test.js:16:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- NaN\n+ 100\n"
              },
              "uuid": "20ef85e3-f6d4-40d2-9c75-40bd1b476cf6",
              "parentUUID": "8580ac3f-50df-46e0-8cd2-e6c8631e825e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "defaultToAny valid 1st parameter, return 1st parameter",
              "fullTitle": "defaultToAny.js test defaultToAny valid 1st parameter, return 1st parameter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _defaultToAny[\"default\"])(5.55, null, undefined), 5.55);",
              "err": {},
              "uuid": "16b7946b-d5ad-4173-bcc5-c9b5aa3d7baa",
              "parentUUID": "8580ac3f-50df-46e0-8cd2-e6c8631e825e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c72b69b6-c861-478d-91ee-d3c544d5598f",
            "16b7946b-d5ad-4173-bcc5-c9b5aa3d7baa"
          ],
          "failures": [
            "c630d788-3f9a-47b8-b15f-aaf809ff5f13",
            "20ef85e3-f6d4-40d2-9c75-40bd1b476cf6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7e33bce1-4399-48fc-b031-ffaf4e86a509",
          "title": "difference.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/difference.test.js",
          "file": "/tests/difference.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "difference [2, 1] and [2, 3], expect return [1]",
              "fullTitle": "difference.js test difference [2, 1] and [2, 3], expect return [1]",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _difference[\"default\"])([2, 1], [2, 3]), [1]);",
              "err": {},
              "uuid": "75ed2b54-bc65-41ad-81f9-f5317dc7ae26",
              "parentUUID": "7e33bce1-4399-48fc-b031-ffaf4e86a509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "difference [2, null] and [1, 2, null, 3], expect return []",
              "fullTitle": "difference.js test difference [2, null] and [1, 2, null, 3], expect return []",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _difference[\"default\"])([2, null], [1, 2, null, 3]), []);",
              "err": {},
              "uuid": "0f733635-be0f-4ede-9a8b-285ffd818e22",
              "parentUUID": "7e33bce1-4399-48fc-b031-ffaf4e86a509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "difference [] and [3, 4, 5], expect return []",
              "fullTitle": "difference.js test difference [] and [3, 4, 5], expect return []",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _difference[\"default\"])([], [3, 4, 5]), []);",
              "err": {},
              "uuid": "c62a7cbf-2a79-445c-94d0-4d17cec417a9",
              "parentUUID": "7e33bce1-4399-48fc-b031-ffaf4e86a509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "difference null and [3, 4, 5], expect return []",
              "fullTitle": "difference.js test difference null and [3, 4, 5], expect return []",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _difference[\"default\"])(null, [3, 4, 5]), []);",
              "err": {},
              "uuid": "d019c8c7-c5de-465a-bb13-ae8f526cd217",
              "parentUUID": "7e33bce1-4399-48fc-b031-ffaf4e86a509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "difference undefined and [3, 4, 5], expect return []",
              "fullTitle": "difference.js test difference undefined and [3, 4, 5], expect return []",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _difference[\"default\"])(undefined, [3, 4, 5]), []);",
              "err": {},
              "uuid": "51606529-f5f6-48c2-8180-48d4ed78ea47",
              "parentUUID": "7e33bce1-4399-48fc-b031-ffaf4e86a509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "difference not array type and [3, 4, 5], expect return []",
              "fullTitle": "difference.js test difference not array type and [3, 4, 5], expect return []",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _difference[\"default\"])({\n  foo: 'bar'\n}, [3, 4, 5]), []);",
              "err": {},
              "uuid": "eb9dde11-0cf8-4b1a-a222-eeb0c0175d5d",
              "parentUUID": "7e33bce1-4399-48fc-b031-ffaf4e86a509",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "75ed2b54-bc65-41ad-81f9-f5317dc7ae26",
            "0f733635-be0f-4ede-9a8b-285ffd818e22",
            "c62a7cbf-2a79-445c-94d0-4d17cec417a9",
            "d019c8c7-c5de-465a-bb13-ae8f526cd217",
            "51606529-f5f6-48c2-8180-48d4ed78ea47",
            "eb9dde11-0cf8-4b1a-a222-eeb0c0175d5d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ec1ff10b-ef2d-473a-80c9-acfca399be24",
          "title": "divide.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/divide.test.js",
          "file": "/tests/divide.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "divide 6 by 3, expect return 2",
              "fullTitle": "divide.js test divide 6 by 3, expect return 2",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _divide[\"default\"])(6, 3), 2);",
              "err": {
                "message": "AssertionError: expected 1 to equal 2",
                "estack": "AssertionError: expected 1 to equal 2\n    at Context.<anonymous> (tests/divide.test.js:8:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- 1\n+ 2\n"
              },
              "uuid": "4bd7c145-e087-4a62-9114-ad0a4020681a",
              "parentUUID": "ec1ff10b-ef2d-473a-80c9-acfca399be24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "divide 10 by 2, expect return 5",
              "fullTitle": "divide.js test divide 10 by 2, expect return 5",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _divide[\"default\"])(10, 5), 2);",
              "err": {
                "message": "AssertionError: expected 1 to equal 2",
                "estack": "AssertionError: expected 1 to equal 2\n    at Context.<anonymous> (tests/divide.test.js:12:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- 1\n+ 2\n"
              },
              "uuid": "ea0c6cbc-dccb-4e39-9bc3-7371e549bf91",
              "parentUUID": "ec1ff10b-ef2d-473a-80c9-acfca399be24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "divide '10' by 2, expect return 5",
              "fullTitle": "divide.js test divide '10' by 2, expect return 5",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _divide[\"default\"])('10', 5), 2);",
              "err": {
                "message": "AssertionError: expected 1 to equal 2",
                "estack": "AssertionError: expected 1 to equal 2\n    at Context.<anonymous> (tests/divide.test.js:16:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- 1\n+ 2\n"
              },
              "uuid": "eeefd1af-a4f3-4067-9f24-3c75b0547bf6",
              "parentUUID": "ec1ff10b-ef2d-473a-80c9-acfca399be24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "divide 6 by '3', expect return 2",
              "fullTitle": "divide.js test divide 6 by '3', expect return 2",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _divide[\"default\"])(6, '3'), 2);",
              "err": {
                "message": "AssertionError: expected 1 to equal 2",
                "estack": "AssertionError: expected 1 to equal 2\n    at Context.<anonymous> (tests/divide.test.js:20:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- 1\n+ 2\n"
              },
              "uuid": "df001175-9b39-4c03-8579-3052a96eb57f",
              "parentUUID": "ec1ff10b-ef2d-473a-80c9-acfca399be24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "divide 'foo' by 3, expect thrown error",
              "fullTitle": "divide.js test divide 'foo' by 3, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _divide[\"default\"])('foo', 3);\n}, 'Illegal Argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/divide.test.js:24:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "b979a49d-0fcd-4bfa-8206-afc3c5246611",
              "parentUUID": "ec1ff10b-ef2d-473a-80c9-acfca399be24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "divide null by 3, expect thrown error",
              "fullTitle": "divide.js test divide null by 3, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _divide[\"default\"])(null, 3);\n}, 'Illegal Argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/divide.test.js:30:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "0704b186-a75b-46af-9b65-82508c344972",
              "parentUUID": "ec1ff10b-ef2d-473a-80c9-acfca399be24",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4bd7c145-e087-4a62-9114-ad0a4020681a",
            "ea0c6cbc-dccb-4e39-9bc3-7371e549bf91",
            "eeefd1af-a4f3-4067-9f24-3c75b0547bf6",
            "df001175-9b39-4c03-8579-3052a96eb57f",
            "b979a49d-0fcd-4bfa-8206-afc3c5246611",
            "0704b186-a75b-46af-9b65-82508c344972"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c741a57c-82c9-40ce-b774-826519d13bc0",
          "title": "drop.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/drop.test.js",
          "file": "/tests/drop.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "drop [1, 2, 3] without n elements drop, default n is 1, expect [2, 3]",
              "fullTitle": "drop.js test drop [1, 2, 3] without n elements drop, default n is 1, expect [2, 3]",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _drop[\"default\"])([1, 2, 3]), [2, 3]);",
              "err": {},
              "uuid": "d36a003a-4987-49cf-9626-45effea70370",
              "parentUUID": "c741a57c-82c9-40ce-b774-826519d13bc0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "drop [1, 2, 3] and drop 2 elements, expect return [3]",
              "fullTitle": "drop.js test drop [1, 2, 3] and drop 2 elements, expect return [3]",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _drop[\"default\"])([1, 2, 3], 2), [3]);",
              "err": {},
              "uuid": "1349aeac-1c6c-41de-bc2a-10b6df6a5d9e",
              "parentUUID": "c741a57c-82c9-40ce-b774-826519d13bc0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "drop [1, 2, 3] and drop 5 elements, expect return []",
              "fullTitle": "drop.js test drop [1, 2, 3] and drop 5 elements, expect return []",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _drop[\"default\"])([1, 2, 3], 5), []);",
              "err": {},
              "uuid": "e1e02665-1dea-4fc3-86a4-4daf5b4220a7",
              "parentUUID": "c741a57c-82c9-40ce-b774-826519d13bc0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "drop [1, 2, 3] and drop 0 elements, expect return [1, 2, 3]",
              "fullTitle": "drop.js test drop [1, 2, 3] and drop 0 elements, expect return [1, 2, 3]",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _drop[\"default\"])([1, 2, 3], 0), [1, 2, 3]);",
              "err": {},
              "uuid": "35dca4a9-8f73-4d0c-8cd1-9178e1957963",
              "parentUUID": "c741a57c-82c9-40ce-b774-826519d13bc0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "drop [1, 2, 3] and drop -3 elements, expect return [1, 2, 3]",
              "fullTitle": "drop.js test drop [1, 2, 3] and drop -3 elements, expect return [1, 2, 3]",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _drop[\"default\"])([1, 2, 3], -3), [1, 2, 3]);",
              "err": {},
              "uuid": "5f727431-96fc-4054-82ce-51937ad6dab3",
              "parentUUID": "c741a57c-82c9-40ce-b774-826519d13bc0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "drop [] and drop 3 elements, expect return []",
              "fullTitle": "drop.js test drop [] and drop 3 elements, expect return []",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _drop[\"default\"])([], 3), []);",
              "err": {},
              "uuid": "b6a243e0-1d65-4e8e-9050-bee670cc0c02",
              "parentUUID": "c741a57c-82c9-40ce-b774-826519d13bc0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "drop false and drop 3 elements, expect thrown error",
              "fullTitle": "drop.js test drop false and drop 3 elements, expect thrown error",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _drop[\"default\"])(false, 3);\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/drop.test.js:32:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "02a67ed0-36db-4b9b-a802-c8921e2739b9",
              "parentUUID": "c741a57c-82c9-40ce-b774-826519d13bc0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "drop null and drop 10 elements, expect return []",
              "fullTitle": "drop.js test drop null and drop 10 elements, expect return []",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _drop[\"default\"])(null, 10), []);",
              "err": {},
              "uuid": "a402f266-f270-4a56-81de-a92a83b883db",
              "parentUUID": "c741a57c-82c9-40ce-b774-826519d13bc0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d36a003a-4987-49cf-9626-45effea70370",
            "1349aeac-1c6c-41de-bc2a-10b6df6a5d9e",
            "e1e02665-1dea-4fc3-86a4-4daf5b4220a7",
            "35dca4a9-8f73-4d0c-8cd1-9178e1957963",
            "5f727431-96fc-4054-82ce-51937ad6dab3",
            "b6a243e0-1d65-4e8e-9050-bee670cc0c02",
            "a402f266-f270-4a56-81de-a92a83b883db"
          ],
          "failures": [
            "02a67ed0-36db-4b9b-a802-c8921e2739b9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0340c9a9-0c4e-4644-9752-0c9c8c345ddb",
          "title": "endsWith.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/endsWith.test.js",
          "file": "/tests/endsWith.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "endsWith 'abc', expect 'c', return true ",
              "fullTitle": "endsWith.js test endsWith 'abc', expect 'c', return true ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _endsWith[\"default\"])('abc', 'c'), true);",
              "err": {},
              "uuid": "cc445e3a-09a1-49a6-8c58-4cff567d29cb",
              "parentUUID": "0340c9a9-0c4e-4644-9752-0c9c8c345ddb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "endsWith 'abc', expect 'b', return false ",
              "fullTitle": "endsWith.js test endsWith 'abc', expect 'b', return false ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _endsWith[\"default\"])('abc', 'b'), false);",
              "err": {},
              "uuid": "9721b60b-d6c5-4208-ae8d-687ffa539f64",
              "parentUUID": "0340c9a9-0c4e-4644-9752-0c9c8c345ddb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "endsWith 'abc', expect 'b' ends at position 1, return true ",
              "fullTitle": "endsWith.js test endsWith 'abc', expect 'b' ends at position 1, return true ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _endsWith[\"default\"])('abc', 'b', 1), false);",
              "err": {},
              "uuid": "85bc5a5b-2f93-4cdc-9546-e905134e5b42",
              "parentUUID": "0340c9a9-0c4e-4644-9752-0c9c8c345ddb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "endsWith 'abc', expect 'b' ends at position more than length, position is end of string, return false",
              "fullTitle": "endsWith.js test endsWith 'abc', expect 'b' ends at position more than length, position is end of string, return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _endsWith[\"default\"])('abc', 'b', 100), false);",
              "err": {},
              "uuid": "6586653f-6f77-4e33-b058-695d796cf5ad",
              "parentUUID": "0340c9a9-0c4e-4644-9752-0c9c8c345ddb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "endsWith 'abc', expect 'b' ends at negative position, position is start of string, return true",
              "fullTitle": "endsWith.js test endsWith 'abc', expect 'b' ends at negative position, position is start of string, return true",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual((0, _endsWith[\"default\"])('abc', 'a', -100), true);",
              "err": {
                "message": "AssertionError: expected false to equal true",
                "estack": "AssertionError: expected false to equal true\n    at Context.<anonymous> (tests/endsWith.test.js:24:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- false\n+ true\n"
              },
              "uuid": "0af26f72-ae03-4440-95da-48c18315d807",
              "parentUUID": "0340c9a9-0c4e-4644-9752-0c9c8c345ddb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "endsWith null, expect throwns error ",
              "fullTitle": "endsWith.js test endsWith null, expect throwns error ",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _endsWith[\"default\"])(null);\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'Cannot read property \\'length\\' of null'",
                "estack": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'Cannot read property \\'length\\' of null'\n    at Context.<anonymous> (tests/endsWith.test.js:28:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- Cannot read property 'length' of null\n+ Invalid argument\n"
              },
              "uuid": "abc063d8-8f3d-4643-93d0-3eb367f2a2bf",
              "parentUUID": "0340c9a9-0c4e-4644-9752-0c9c8c345ddb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "endsWith undefined, expect throwns error ",
              "fullTitle": "endsWith.js test endsWith undefined, expect throwns error ",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _endsWith[\"default\"])(undefined);\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'Cannot read property \\'length\\' of undefined'",
                "estack": "AssertionError: expected [Function] to throw error including 'Invalid argument' but got 'Cannot read property \\'length\\' of undefined'\n    at Context.<anonymous> (tests/endsWith.test.js:34:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- Cannot read property 'length' of undefined\n+ Invalid argument\n"
              },
              "uuid": "b16462ea-1a2d-4bde-a26c-3c3f95dbc0c6",
              "parentUUID": "0340c9a9-0c4e-4644-9752-0c9c8c345ddb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "endsWith incorrect type, expect throwns error ",
              "fullTitle": "endsWith.js test endsWith incorrect type, expect throwns error ",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _endsWith[\"default\"])(123);\n}, 'Invalid type');",
              "err": {
                "message": "AssertionError: expected [Function] to throw error including 'Invalid type' but got 'Cannot read property \\'length\\' of undefined'",
                "estack": "AssertionError: expected [Function] to throw error including 'Invalid type' but got 'Cannot read property \\'length\\' of undefined'\n    at Context.<anonymous> (tests/endsWith.test.js:40:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- Cannot read property 'length' of undefined\n+ Invalid type\n"
              },
              "uuid": "1b9ddcd0-5690-4cef-9b0e-466287e67400",
              "parentUUID": "0340c9a9-0c4e-4644-9752-0c9c8c345ddb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc445e3a-09a1-49a6-8c58-4cff567d29cb",
            "9721b60b-d6c5-4208-ae8d-687ffa539f64",
            "85bc5a5b-2f93-4cdc-9546-e905134e5b42",
            "6586653f-6f77-4e33-b058-695d796cf5ad"
          ],
          "failures": [
            "0af26f72-ae03-4440-95da-48c18315d807",
            "abc063d8-8f3d-4643-93d0-3eb367f2a2bf",
            "b16462ea-1a2d-4bde-a26c-3c3f95dbc0c6",
            "1b9ddcd0-5690-4cef-9b0e-466287e67400"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e2140179-acae-4eef-9cbd-c8493e916893",
          "title": "eq test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/eq.test.js",
          "file": "/tests/eq.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if same objects are compared",
              "fullTitle": "eq test should return true if same objects are compared",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var object = {\n  'a': 1\n};\nvar result = (0, _eq[\"default\"])(object, object);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "d30280d1-5269-4bba-8714-7d93f7dc4ccc",
              "parentUUID": "e2140179-acae-4eef-9cbd-c8493e916893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if same strings are compared",
              "fullTitle": "eq test should return true if same strings are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])('a', 'a')).to.be[\"true\"];",
              "err": {},
              "uuid": "2fbf2f4f-8353-4706-a326-ff8375671954",
              "parentUUID": "e2140179-acae-4eef-9cbd-c8493e916893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if same numbers are compared",
              "fullTitle": "eq test should return true if same numbers are compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])(123, 123)).to.be[\"true\"];",
              "err": {},
              "uuid": "58a372ce-eda4-48b9-b333-7e09185de93b",
              "parentUUID": "e2140179-acae-4eef-9cbd-c8493e916893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if values are not quivalent",
              "fullTitle": "eq test should return false if values are not quivalent",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _eq[\"default\"])('a', NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "9498d247-d071-4ebd-a844-c7b5be540e9a",
              "parentUUID": "e2140179-acae-4eef-9cbd-c8493e916893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if string and object is compared",
              "fullTitle": "eq test should return false if string and object is compared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var object = {\n  'a': 1\n};\nexpect((0, _eq[\"default\"])('a', object)).to.be[\"false\"];",
              "err": {},
              "uuid": "9e0b2d5a-decd-4372-b62f-f8bdd0e7955d",
              "parentUUID": "e2140179-acae-4eef-9cbd-c8493e916893",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d30280d1-5269-4bba-8714-7d93f7dc4ccc",
            "2fbf2f4f-8353-4706-a326-ff8375671954",
            "58a372ce-eda4-48b9-b333-7e09185de93b",
            "9498d247-d071-4ebd-a844-c7b5be540e9a",
            "9e0b2d5a-decd-4372-b62f-f8bdd0e7955d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "99120bda-e231-47ad-bee7-3bd8ece00972",
          "title": "every test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/every.test.js",
          "file": "/tests/every.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if all array elements pass the predicate check",
              "fullTitle": "every test should return true if all array elements pass the predicate check",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = ['1', 'yes'];\nvar result = (0, _every[\"default\"])(array, String);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "7c95be8f-4be3-4719-95d7-24af87d1fe43",
              "parentUUID": "99120bda-e231-47ad-bee7-3bd8ece00972",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for empty arrays",
              "fullTitle": "every test should return true for empty arrays",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [];\nvar result = (0, _every[\"default\"])(array, String);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "aea44113-391c-439c-8269-2a6cf431214f",
              "parentUUID": "99120bda-e231-47ad-bee7-3bd8ece00972",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if all array elements did not pass the predicate check",
              "fullTitle": "every test should return false if all array elements did not pass the predicate check",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [true, 1, null, 'yes'];\nvar result = (0, _every[\"default\"])(array, Boolean);\nexpect(result).to.be[\"false\"];",
              "err": {},
              "uuid": "dd24541e-54c9-4ebc-a5f0-29a6c945f5ac",
              "parentUUID": "99120bda-e231-47ad-bee7-3bd8ece00972",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return boolean if array is not passed",
              "fullTitle": "every test should not return boolean if array is not passed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _every[\"default\"])('abc', String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(123, Number)).to.not.equal('boolean');",
              "err": {},
              "uuid": "3ead2868-85fb-433d-9b88-33ca7d0cdf90",
              "parentUUID": "99120bda-e231-47ad-bee7-3bd8ece00972",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return boolean if null, NaN, undefined is passed",
              "fullTitle": "every test should not return boolean if null, NaN, undefined is passed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _every[\"default\"])(null, String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(NaN, String)).to.not.equal('boolean');\nexpect((0, _every[\"default\"])(undefined, String)).to.not.equal('boolean');",
              "err": {},
              "uuid": "b97108ff-0256-47cd-8deb-2529c700a11c",
              "parentUUID": "99120bda-e231-47ad-bee7-3bd8ece00972",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c95be8f-4be3-4719-95d7-24af87d1fe43",
            "aea44113-391c-439c-8269-2a6cf431214f",
            "dd24541e-54c9-4ebc-a5f0-29a6c945f5ac",
            "3ead2868-85fb-433d-9b88-33ca7d0cdf90",
            "b97108ff-0256-47cd-8deb-2529c700a11c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "393ed03e-ae1b-466a-90cc-b2fb85c9c4ab",
          "title": "filter.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/filter.test.js",
          "file": "/tests/filter.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "filter user list and take only active user, expect array of active users",
              "fullTitle": "filter.js test filter user list and take only active user, expect array of active users",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var filteredUser = (0, _filter[\"default\"])(USERS, function (_ref) {\n  var active = _ref.active;\n  return active;\n});\nassert.deepEqual(USERS[0], filteredUser[0]);",
              "err": {},
              "uuid": "70ba5fbd-f771-4786-af37-09d18f77abff",
              "parentUUID": "393ed03e-ae1b-466a-90cc-b2fb85c9c4ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "filter empty user list and take only active user, expect array of empty array",
              "fullTitle": "filter.js test filter empty user list and take only active user, expect array of empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _filter[\"default\"])([], function (_ref2) {\n  var active = _ref2.active;\n  return active;\n}), [[]]);",
              "err": {},
              "uuid": "cc6acdb4-f656-42a9-bfb3-9d8601923f74",
              "parentUUID": "393ed03e-ae1b-466a-90cc-b2fb85c9c4ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "filter empty user list with incorrect predicate, expect array of empty array",
              "fullTitle": "filter.js test filter empty user list with incorrect predicate, expect array of empty array",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _filter[\"default\"])(USERS, function (_ref3) {\n  var title = _ref3.title;\n  return title.length > 0;\n}), [[]]);",
              "err": {
                "message": "TypeError: Cannot read property 'length' of undefined",
                "estack": "TypeError: Cannot read property 'length' of undefined\n    at predicate (tests/filter.test.js:21:59)\n    at filter (src/filter.js:32:9)\n    at Context.<anonymous> (tests/filter.test.js:21:26)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "b5c80fea-f196-4290-a555-1be910c875d5",
              "parentUUID": "393ed03e-ae1b-466a-90cc-b2fb85c9c4ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "filter null, expect thrown error",
              "fullTitle": "filter.js test filter null, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _filter[\"default\"])(null, function (_ref4) {\n    var active = _ref4.active;\n    return active;\n  });\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/filter.test.js:25:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "11f0dc64-b496-4895-9034-fa40e42d939b",
              "parentUUID": "393ed03e-ae1b-466a-90cc-b2fb85c9c4ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "filter undefined, expect thrown error",
              "fullTitle": "filter.js test filter undefined, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _filter[\"default\"])(undefined, function (_ref5) {\n    var active = _ref5.active;\n    return active;\n  });\n}, 'Invalid argument');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/filter.test.js:31:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "3c8d370c-09de-413b-a720-c90da9ac6266",
              "parentUUID": "393ed03e-ae1b-466a-90cc-b2fb85c9c4ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "filter non array type, expect thrown error",
              "fullTitle": "filter.js test filter non array type, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _filter[\"default\"])('12345', function (_ref6) {\n    var active = _ref6.active;\n    return active;\n  });\n}, 'Invalid type of parameter');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/filter.test.js:37:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "ac7978a5-e2f8-478f-9820-7408297f58ef",
              "parentUUID": "393ed03e-ae1b-466a-90cc-b2fb85c9c4ab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70ba5fbd-f771-4786-af37-09d18f77abff",
            "cc6acdb4-f656-42a9-bfb3-9d8601923f74"
          ],
          "failures": [
            "b5c80fea-f196-4290-a555-1be910c875d5",
            "11f0dc64-b496-4895-9034-fa40e42d939b",
            "3c8d370c-09de-413b-a720-c90da9ac6266",
            "ac7978a5-e2f8-478f-9820-7408297f58ef"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a85f5da2-c5ed-475b-9078-df1805802fa5",
          "title": "isArguments test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isArguments.test.js",
          "file": "/tests/isArguments.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is an arguments object",
              "fullTitle": "isArguments test should return true if value is an arguments object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isArguments[\"default\"])(function () {\n  return arguments;\n}())).to.be[\"true\"];",
              "err": {},
              "uuid": "ca06d4e0-567f-49a4-a8a3-fd1119de76b7",
              "parentUUID": "a85f5da2-c5ed-475b-9078-df1805802fa5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not an arguments object",
              "fullTitle": "isArguments test should return false if value is not an arguments object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isArguments[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isArguments[\"default\"])(Function)).to.be[\"false\"];\nexpect((0, _isArguments[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isArguments[\"default\"])(Infinity)).to.be[\"false\"];\nexpect((0, _isArguments[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isArguments[\"default\"])(NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "ed3631f1-31ed-4b17-b597-a70c6c70f232",
              "parentUUID": "a85f5da2-c5ed-475b-9078-df1805802fa5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca06d4e0-567f-49a4-a8a3-fd1119de76b7",
            "ed3631f1-31ed-4b17-b597-a70c6c70f232"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4ebe658a-085e-4d34-8eca-738661d3b446",
          "title": "isArrayLike test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isArrayLike.test.js",
          "file": "/tests/isArrayLike.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is array-like",
              "fullTitle": "isArrayLike test should return true if value is array-like",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isArrayLike[\"default\"])([1, 2, 3])).to.be[\"true\"];\nexpect((0, _isArrayLike[\"default\"])('abc')).to.be[\"true\"];\nexpect((0, _isArrayLike[\"default\"])([])).to.be[\"true\"];",
              "err": {},
              "uuid": "a7721be9-cd89-4cb5-9ae5-f3d68567eeb1",
              "parentUUID": "4ebe658a-085e-4d34-8eca-738661d3b446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not an array-like",
              "fullTitle": "isArrayLike test should return false if value is not an array-like",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isArrayLike[\"default\"])(23)).to.be[\"false\"];\nexpect((0, _isArrayLike[\"default\"])(Function)).to.be[\"false\"];\nexpect((0, _isArrayLike[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isArrayLike[\"default\"])(Infinity)).to.be[\"false\"];\nexpect((0, _isArrayLike[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isArrayLike[\"default\"])(NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "93687936-3ca7-4c3b-9ab0-0e4b794eae0f",
              "parentUUID": "4ebe658a-085e-4d34-8eca-738661d3b446",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7721be9-cd89-4cb5-9ae5-f3d68567eeb1",
            "93687936-3ca7-4c3b-9ab0-0e4b794eae0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0465032e-728b-40d6-b2c2-fbce631a8bd4",
          "title": "isArrayLikeObject test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isArrayLikeObject.test.js",
          "file": "/tests/isArrayLikeObject.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is array-like object",
              "fullTitle": "isArrayLikeObject test should return true if value is array-like object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var a1 = {\n  length: 0\n};\nvar a2 = {\n  0: 'foo',\n  5: 'bar',\n  length: 6\n};\nexpect((0, _isArrayLikeObject[\"default\"])([1, 2, 3])).to.be[\"true\"];\nexpect((0, _isArrayLikeObject[\"default\"])(a1)).to.be[\"true\"];\nexpect((0, _isArrayLikeObject[\"default\"])(a2)).to.be[\"true\"];",
              "err": {},
              "uuid": "88a0279d-a296-4e22-b5ba-ba4636cff78b",
              "parentUUID": "0465032e-728b-40d6-b2c2-fbce631a8bd4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not an array-like object",
              "fullTitle": "isArrayLikeObject test should return false if value is not an array-like object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isArrayLikeObject[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isArrayLikeObject[\"default\"])(Function)).to.be[\"false\"];\nexpect((0, _isArrayLikeObject[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isArrayLikeObject[\"default\"])(Infinity)).to.be[\"false\"];\nexpect((0, _isArrayLikeObject[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isArrayLikeObject[\"default\"])(NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "af4dbcda-6173-459b-9a14-a28fab26c26c",
              "parentUUID": "0465032e-728b-40d6-b2c2-fbce631a8bd4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88a0279d-a296-4e22-b5ba-ba4636cff78b",
            "af4dbcda-6173-459b-9a14-a28fab26c26c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a98620ae-9e6a-44d8-98f2-0741ec9c3757",
          "title": "isBoolean test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isBoolean.test.js",
          "file": "/tests/isBoolean.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is Boolean",
              "fullTitle": "isBoolean test should return true if value is Boolean",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isBoolean[\"default\"])(true)).to.be[\"true\"];\nexpect((0, _isBoolean[\"default\"])(false)).to.be[\"true\"];",
              "err": {},
              "uuid": "57c962de-8194-48c6-84c4-e7c23ee4793b",
              "parentUUID": "a98620ae-9e6a-44d8-98f2-0741ec9c3757",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not Boolean",
              "fullTitle": "isBoolean test should return false if value is not Boolean",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isBoolean[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isBoolean[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isBoolean[\"default\"])(12)).to.be[\"false\"];\nexpect((0, _isBoolean[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isBoolean[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isBoolean[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "104c0e03-c779-4cef-a76c-2b8fadd4956a",
              "parentUUID": "a98620ae-9e6a-44d8-98f2-0741ec9c3757",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "57c962de-8194-48c6-84c4-e7c23ee4793b",
            "104c0e03-c779-4cef-a76c-2b8fadd4956a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e252b1cc-4da3-45fa-80eb-9d9df04828cb",
          "title": "isBuffer test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isBuffer.test.js",
          "file": "/tests/isBuffer.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is a Buffer",
              "fullTitle": "isBuffer test should return true if value is a Buffer",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isBuffer[\"default\"])(Buffer.from('abc'))).to.be[\"true\"];\nexpect((0, _isBuffer[\"default\"])(Buffer.alloc(2))).to.be[\"true\"];\nexpect((0, _isBuffer[\"default\"])(Buffer.from([1, 2, 3]))).to.be[\"true\"];",
              "err": {},
              "uuid": "1116be41-aabc-4436-9ab0-803492d2da2a",
              "parentUUID": "e252b1cc-4da3-45fa-80eb-9d9df04828cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not a Buffer",
              "fullTitle": "isBuffer test should return false if value is not a Buffer",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isBuffer[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isBuffer[\"default\"])(12)).to.be[\"false\"];\nexpect((0, _isBuffer[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isBuffer[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isBuffer[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "52bae053-bf30-4c40-b1bb-385f2e19c458",
              "parentUUID": "e252b1cc-4da3-45fa-80eb-9d9df04828cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1116be41-aabc-4436-9ab0-803492d2da2a",
            "52bae053-bf30-4c40-b1bb-385f2e19c458"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "27e8de41-32be-4596-9ac1-b534e885dd69",
          "title": "isDate test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isDate.test.js",
          "file": "/tests/isDate.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is a Date object",
              "fullTitle": "isDate test should return true if value is a Date object",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])(new Date())).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11, 24, 10, 33, 30, 0))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11, 24, 10, 33, 30))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11, 24, 10, 33))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11, 24, 10))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11, 24))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020, 11))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(2020))).to.be[\"true\"];\nexpect((0, _isDate[\"default\"])(new Date(\"October 13, 2014 11:13:00\"))).to.be[\"true\"];",
              "err": {},
              "uuid": "0bf62f6b-e0cd-47c6-acfe-0bf6af184905",
              "parentUUID": "27e8de41-32be-4596-9ac1-b534e885dd69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not a Date object",
              "fullTitle": "isDate test should return false if value is not a Date object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])('Mon April 23 2012')).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])(12)).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "67b7cd83-6d3e-45bf-a1a2-5965968f90ae",
              "parentUUID": "27e8de41-32be-4596-9ac1-b534e885dd69",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0bf62f6b-e0cd-47c6-acfe-0bf6af184905",
            "67b7cd83-6d3e-45bf-a1a2-5965968f90ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6af627e3-740b-4908-a1eb-76663c12361a",
          "title": "isEmpty test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isEmpty.test.js",
          "file": "/tests/isEmpty.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is Empty",
              "fullTitle": "isEmpty test should return true if value is Empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])(null)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(true)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(1)).to.be[\"true\"];\nexpect((0, _isEmpty[\"default\"])(undefined)).to.be[\"true\"];",
              "err": {},
              "uuid": "ea5e169f-6907-4209-bf55-4ebad6f275c1",
              "parentUUID": "6af627e3-740b-4908-a1eb-76663c12361a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not Empty",
              "fullTitle": "isEmpty test should return false if value is not Empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isEmpty[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isEmpty[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "f9f31b1c-a98c-4d17-b41d-0cef149aad55",
              "parentUUID": "6af627e3-740b-4908-a1eb-76663c12361a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea5e169f-6907-4209-bf55-4ebad6f275c1",
            "f9f31b1c-a98c-4d17-b41d-0cef149aad55"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "df55a783-8d50-4dbd-83c7-2c04acc5ea2a",
          "title": "isLength test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isLength.test.js",
          "file": "/tests/isLength.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is a valid length",
              "fullTitle": "isLength test should return true if value is a valid length",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isLength[\"default\"])(3)).to.be[\"true\"];\nexpect((0, _isLength[\"default\"])(Number.MAX_SAFE_INTEGER)).to.be[\"true\"];",
              "err": {},
              "uuid": "21918ff2-6fe4-49a2-829f-f1610b6cf89e",
              "parentUUID": "df55a783-8d50-4dbd-83c7-2c04acc5ea2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not a valid length",
              "fullTitle": "isLength test should return false if value is not a valid length",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isLength[\"default\"])(Number.MAX_VALUE)).to.be[\"false\"];\nexpect((0, _isLength[\"default\"])(Number.MIN_VALUE)).to.be[\"false\"];\nexpect((0, _isLength[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isLength[\"default\"])(Infinity)).to.be[\"false\"];\nexpect((0, _isLength[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isLength[\"default\"])(NaN)).to.be[\"false\"];\nexpect((0, _isLength[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isLength[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "395ec45d-c042-4862-80a2-6e4ead21bd9b",
              "parentUUID": "df55a783-8d50-4dbd-83c7-2c04acc5ea2a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21918ff2-6fe4-49a2-829f-f1610b6cf89e",
            "395ec45d-c042-4862-80a2-6e4ead21bd9b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c96bf36c-8e62-49ef-b4c1-823331b2c418",
          "title": "isObject test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isObject.test.js",
          "file": "/tests/isObject.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is an object",
              "fullTitle": "isObject test should return true if value is an object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isObject[\"default\"])({})).to.be[\"true\"];\nexpect((0, _isObject[\"default\"])({\n  'a': 1\n})).to.be[\"true\"];\nexpect((0, _isObject[\"default\"])([1, 2, 3])).to.be[\"true\"];\nexpect((0, _isObject[\"default\"])(Function)).to.be[\"true\"];\nexpect((0, _isObject[\"default\"])(new Number(0))).to.be[\"true\"];\nexpect((0, _isObject[\"default\"])(new String('a'))).to.be[\"true\"];",
              "err": {},
              "uuid": "007dfd33-5854-4143-a8bd-6daf1adac45f",
              "parentUUID": "c96bf36c-8e62-49ef-b4c1-823331b2c418",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not an object",
              "fullTitle": "isObject test should return false if value is not an object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isObject[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isObject[\"default\"])(Infinity)).to.be[\"false\"];\nexpect((0, _isObject[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isObject[\"default\"])(NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "adcb7fa2-441e-4040-83c0-50e19d5cea92",
              "parentUUID": "c96bf36c-8e62-49ef-b4c1-823331b2c418",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "007dfd33-5854-4143-a8bd-6daf1adac45f",
            "adcb7fa2-441e-4040-83c0-50e19d5cea92"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "81d8691c-62e1-485d-8041-abee5c779028",
          "title": "isObjectLike test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isObjectLike.test.js",
          "file": "/tests/isObjectLike.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is an object-like",
              "fullTitle": "isObjectLike test should return true if value is an object-like",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isObjectLike[\"default\"])({})).to.be[\"true\"];\nexpect((0, _isObjectLike[\"default\"])({\n  'a': 1\n})).to.be[\"true\"];\nexpect((0, _isObjectLike[\"default\"])([1, 2, 3])).to.be[\"true\"];\nexpect((0, _isObjectLike[\"default\"])(new Number(0))).to.be[\"true\"];\nexpect((0, _isObjectLike[\"default\"])(new String('a'))).to.be[\"true\"];",
              "err": {},
              "uuid": "7f693c98-145b-43e5-afb0-9ccb2cb16e19",
              "parentUUID": "81d8691c-62e1-485d-8041-abee5c779028",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not an object-like",
              "fullTitle": "isObjectLike test should return false if value is not an object-like",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isObjectLike[\"default\"])(Function)).to.be[\"false\"];\nexpect((0, _isObjectLike[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isObjectLike[\"default\"])(Infinity)).to.be[\"false\"];\nexpect((0, _isObjectLike[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isObjectLike[\"default\"])(NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "a1f07e9b-ff85-496f-b798-f9249b69d666",
              "parentUUID": "81d8691c-62e1-485d-8041-abee5c779028",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f693c98-145b-43e5-afb0-9ccb2cb16e19",
            "a1f07e9b-ff85-496f-b798-f9249b69d666"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "13766419-0545-4eee-b228-293a6ed8a589",
          "title": "isSymbol test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isSymbol.test.js",
          "file": "/tests/isSymbol.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is symbol",
              "fullTitle": "isSymbol test should return true if value is symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var sym = Symbol('foo');\nexpect((0, _isSymbol[\"default\"])(Symbol.iterator)).to.be[\"true\"];\nexpect((0, _isSymbol[\"default\"])(sym)).to.be[\"true\"];\nexpect((0, _isSymbol[\"default\"])(Object(sym))).to.be[\"true\"];",
              "err": {},
              "uuid": "2cb6a2e0-a51e-42fb-945a-b90f537fcc5c",
              "parentUUID": "13766419-0545-4eee-b228-293a6ed8a589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not a symbol",
              "fullTitle": "isSymbol test should return false if value is not a symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isSymbol[\"default\"])('abc')).to.be[\"false\"];\nexpect((0, _isSymbol[\"default\"])(Function)).to.be[\"false\"];\nexpect((0, _isSymbol[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isSymbol[\"default\"])(Infinity)).to.be[\"false\"];\nexpect((0, _isSymbol[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isSymbol[\"default\"])(NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "16c41782-0c64-4bd8-9d45-0f6116cc91de",
              "parentUUID": "13766419-0545-4eee-b228-293a6ed8a589",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2cb6a2e0-a51e-42fb-945a-b90f537fcc5c",
            "16c41782-0c64-4bd8-9d45-0f6116cc91de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bd2a6a7c-fdb8-486b-bac6-de4f61dc7f34",
          "title": "isTypedArray test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/isTypedArray.test.js",
          "file": "/tests/isTypedArray.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if value is a typed array",
              "fullTitle": "isTypedArray test should return true if value is a typed array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isTypedArray[\"default\"])(Int8Array.from('123'))).to.be[\"true\"];\nexpect((0, _isTypedArray[\"default\"])(Uint8Array.from('123'))).to.be[\"true\"];\nexpect((0, _isTypedArray[\"default\"])(Uint8ClampedArray.from('123'))).to.be[\"true\"];\nexpect((0, _isTypedArray[\"default\"])(Int16Array.from('123'))).to.be[\"true\"];\nexpect((0, _isTypedArray[\"default\"])(Uint16Array.from('123'))).to.be[\"true\"];\nexpect((0, _isTypedArray[\"default\"])(Int32Array.from('123'))).to.be[\"true\"];\nexpect((0, _isTypedArray[\"default\"])(Uint32Array.from('123'))).to.be[\"true\"];\nexpect((0, _isTypedArray[\"default\"])(BigInt64Array.from('123'))).to.be[\"true\"];\nexpect((0, _isTypedArray[\"default\"])(BigUint64Array.from('123'))).to.be[\"true\"];",
              "err": {},
              "uuid": "5530ceb2-5031-4239-a579-92cc1e0b1632",
              "parentUUID": "bd2a6a7c-fdb8-486b-bac6-de4f61dc7f34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if value is not a typed array",
              "fullTitle": "isTypedArray test should return false if value is not a typed array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isTypedArray[\"default\"])([])).to.be[\"false\"];\nexpect((0, _isTypedArray[\"default\"])([1, 2, 3])).to.be[\"false\"];\nexpect((0, _isTypedArray[\"default\"])(Function)).to.be[\"false\"];\nexpect((0, _isTypedArray[\"default\"])(null)).to.be[\"false\"];\nexpect((0, _isTypedArray[\"default\"])(Infinity)).to.be[\"false\"];\nexpect((0, _isTypedArray[\"default\"])(undefined)).to.be[\"false\"];\nexpect((0, _isTypedArray[\"default\"])(NaN)).to.be[\"false\"];",
              "err": {},
              "uuid": "433bbb62-644e-4241-b1b5-8f5db8a19d1b",
              "parentUUID": "bd2a6a7c-fdb8-486b-bac6-de4f61dc7f34",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5530ceb2-5031-4239-a579-92cc1e0b1632",
            "433bbb62-644e-4241-b1b5-8f5db8a19d1b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2eb79f20-94da-44c4-9111-b89b3719d8f2",
          "title": "keys.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/keys.test.js",
          "file": "/tests/keys.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "keys sample object, expect an array of object properties",
              "fullTitle": "keys.js test keys sample object, expect an array of object properties",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _keys[\"default\"])({\n  a: '1',\n  b: '2',\n  c: '3',\n  d: '4'\n})).to.include.members(['a', 'b', 'c', 'd']);",
              "err": {},
              "uuid": "7da4b4c1-08cd-448a-ab75-69a86f519881",
              "parentUUID": "2eb79f20-94da-44c4-9111-b89b3719d8f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "keys empty object, expect an empty array",
              "fullTitle": "keys.js test keys empty object, expect an empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _keys[\"default\"])({}), []);",
              "err": {},
              "uuid": "66fdabd2-dffb-4a3e-9d5b-407bf18a4392",
              "parentUUID": "2eb79f20-94da-44c4-9111-b89b3719d8f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "keys a string, expect an array with values of character index",
              "fullTitle": "keys.js test keys a string, expect an array with values of character index",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _keys[\"default\"])('abcd')).to.include.members(['0', '1', '2', '3']);",
              "err": {},
              "uuid": "6501f74f-8731-4309-8c8b-85cc0b251cf8",
              "parentUUID": "2eb79f20-94da-44c4-9111-b89b3719d8f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "keys a number, expect an empty array",
              "fullTitle": "keys.js test keys a number, expect an empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _keys[\"default\"])(100), []);",
              "err": {},
              "uuid": "04abebd6-7f91-4e3b-8c2a-ce4e36aeafd1",
              "parentUUID": "2eb79f20-94da-44c4-9111-b89b3719d8f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "keys null, expect thrown error",
              "fullTitle": "keys.js test keys null, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _keys[\"default\"])(null);\n}, 'Invalid arguments');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/keys.test.js:30:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "980ee571-4159-499c-a97d-53b8870b3141",
              "parentUUID": "2eb79f20-94da-44c4-9111-b89b3719d8f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "keys undefined, expect thrown error",
              "fullTitle": "keys.js test keys undefined, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _keys[\"default\"])(undefined);\n}, 'Invalid arguments');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/keys.test.js:36:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "929ad55c-f65a-44b6-8852-0e4add1cfaa9",
              "parentUUID": "2eb79f20-94da-44c4-9111-b89b3719d8f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "keys undefined, expect thrown error",
              "fullTitle": "keys.js test keys undefined, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _keys[\"default\"])(undefined);\n}, 'Invalid arguments');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/keys.test.js:42:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "375f378d-5169-4eda-ac72-396e2cffb83b",
              "parentUUID": "2eb79f20-94da-44c4-9111-b89b3719d8f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7da4b4c1-08cd-448a-ab75-69a86f519881",
            "66fdabd2-dffb-4a3e-9d5b-407bf18a4392",
            "6501f74f-8731-4309-8c8b-85cc0b251cf8",
            "04abebd6-7f91-4e3b-8c2a-ce4e36aeafd1"
          ],
          "failures": [
            "980ee571-4159-499c-a97d-53b8870b3141",
            "929ad55c-f65a-44b6-8852-0e4add1cfaa9",
            "375f378d-5169-4eda-ac72-396e2cffb83b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4533af21-7a66-4cfd-a429-9f940dd74d2b",
          "title": "map.js test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/map.test.js",
          "file": "/tests/map.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "map double array of number, expect array with double value",
              "fullTitle": "map.js test map double array of number, expect array with double value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _map[\"default\"])([1, 2, 3, 4], function (num) {\n  return num * 2;\n}), [2, 4, 6, 8]);",
              "err": {},
              "uuid": "f2132ff8-423a-458d-8dc0-4936fe20852c",
              "parentUUID": "4533af21-7a66-4cfd-a429-9f940dd74d2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "map empty array, expect an empty array",
              "fullTitle": "map.js test map empty array, expect an empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _map[\"default\"])([], function (num) {\n  return num * 2;\n}), []);",
              "err": {},
              "uuid": "0501090a-8672-408e-8eb3-51df0a972a74",
              "parentUUID": "4533af21-7a66-4cfd-a429-9f940dd74d2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "map an array without iteratee, expect the same array",
              "fullTitle": "map.js test map an array without iteratee, expect the same array",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.deepEqual((0, _map[\"default\"])([1, 2, 3]), [1, 2, 3]);",
              "err": {
                "message": "TypeError: iteratee is not a function",
                "estack": "TypeError: iteratee is not a function\n    at map (src/map.js:25:21)\n    at Context.<anonymous> (tests/map.test.js:24:13)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "847fe5cb-8562-4655-902d-6a136d0440f9",
              "parentUUID": "4533af21-7a66-4cfd-a429-9f940dd74d2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "map string, expect thrown error",
              "fullTitle": "map.js test map string, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _map[\"default\"])('123', function (_char) {\n    return _char.toUpperCase();\n  });\n}, 'Invalid type parameter');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/map.test.js:30:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "e5ff849d-03ff-424e-b4d3-797e5ff924ac",
              "parentUUID": "4533af21-7a66-4cfd-a429-9f940dd74d2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "map number, expect thrown error",
              "fullTitle": "map.js test map number, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _map[\"default\"])(5000, function (num) {\n    return num * 3;\n  });\n}, 'Invalid type parameter');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/map.test.js:36:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "7a88f0e2-c384-4fe6-9d85-4ff03df7e5d3",
              "parentUUID": "4533af21-7a66-4cfd-a429-9f940dd74d2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "map null, expect thrown error",
              "fullTitle": "map.js test map null, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _map[\"default\"])(null);\n}, 'Invalid arguments');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/map.test.js:42:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "f9df2148-03de-4cd6-a8ca-a99adf97567b",
              "parentUUID": "4533af21-7a66-4cfd-a429-9f940dd74d2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "map undefined, expect thrown error",
              "fullTitle": "map.js test map undefined, expect thrown error",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert[\"throws\"](function () {\n  (0, _map[\"default\"])(undefined);\n}, 'Invalid arguments');",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.<anonymous> (tests/map.test.js:48:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "afd896e7-16cd-4eef-ba0b-770a048b9888",
              "parentUUID": "4533af21-7a66-4cfd-a429-9f940dd74d2b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2132ff8-423a-458d-8dc0-4936fe20852c",
            "0501090a-8672-408e-8eb3-51df0a972a74"
          ],
          "failures": [
            "847fe5cb-8562-4655-902d-6a136d0440f9",
            "e5ff849d-03ff-424e-b4d3-797e5ff924ac",
            "7a88f0e2-c384-4fe6-9d85-4ff03df7e5d3",
            "f9df2148-03de-4cd6-a8ca-a99adf97567b",
            "afd896e7-16cd-4eef-ba0b-770a048b9888"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7d3e60e2-348c-409d-a98b-43d51633883b",
          "title": "Test toFinite.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/toFinite.test.js",
          "file": "/tests/toFinite.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return NAN",
              "fullTitle": "Test toFinite.js function Give null to method, return NAN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])(null)).to.eql(0);",
              "err": {},
              "uuid": "f4949f6c-e04e-444b-83a7-5a9709edeb19",
              "parentUUID": "7d3e60e2-348c-409d-a98b-43d51633883b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, return NaN",
              "fullTitle": "Test toFinite.js function Give undefined to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])(undefined)).to.eql(0);",
              "err": {},
              "uuid": "e2df163d-732b-4640-9145-f2454e8110b0",
              "parentUUID": "7d3e60e2-348c-409d-a98b-43d51633883b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give invalid number string to method, return NaN",
              "fullTitle": "Test toFinite.js function Give invalid number string to method, return NaN",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toFinite[\"default\"])('a string with a value')).to.eql(0);",
              "err": {},
              "uuid": "277307ee-361b-42c5-8152-91a6199bd7b2",
              "parentUUID": "7d3e60e2-348c-409d-a98b-43d51633883b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give Hexadecimals number string to method, return converted base 10",
              "fullTitle": "Test toFinite.js function Give Hexadecimals number string to method, return converted base 10",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal((0, _toFinite[\"default\"])('0xabcdef'), 11259375);",
              "err": {},
              "uuid": "5654ec8f-e15f-4468-a93e-b9b63a46e596",
              "parentUUID": "7d3e60e2-348c-409d-a98b-43d51633883b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid number to method, return number type and same value",
              "fullTitle": "Test toFinite.js function Give valid number to method, return number type and same value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toFinite[\"default\"])(3.44532);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 3.44532);",
              "err": {},
              "uuid": "f75de055-7b13-4153-8d56-0db0c7f4bd22",
              "parentUUID": "7d3e60e2-348c-409d-a98b-43d51633883b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give maximum int value to method, return number type and converted value",
              "fullTitle": "Test toFinite.js function Give maximum int value to method, return number type and converted value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toFinite[\"default\"])(Infinity);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 1.7976931348623157e+308);",
              "err": {},
              "uuid": "39a183e5-0288-4624-ba7f-de09022b4165",
              "parentUUID": "7d3e60e2-348c-409d-a98b-43d51633883b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f4949f6c-e04e-444b-83a7-5a9709edeb19",
            "e2df163d-732b-4640-9145-f2454e8110b0",
            "277307ee-361b-42c5-8152-91a6199bd7b2",
            "5654ec8f-e15f-4468-a93e-b9b63a46e596",
            "f75de055-7b13-4153-8d56-0db0c7f4bd22",
            "39a183e5-0288-4624-ba7f-de09022b4165"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bacf1f29-345e-48ca-ac3f-1c8dd0becc7c",
          "title": "Test toNumber.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/toNumber.test.js",
          "file": "/tests/toNumber.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, return NAN",
              "fullTitle": "Test toNumber.js function Give null to method, return NAN",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])(null)).to.be.NaN;",
              "err": {
                "message": "AssertionError: expected 0 to be NaN",
                "estack": "AssertionError: expected 0 to be NaN\n    at Context.<anonymous> (tests/toNumber.test.js:11:9)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "a01c1e73-c89e-4703-9eaf-9540d0c8f70f",
              "parentUUID": "bacf1f29-345e-48ca-ac3f-1c8dd0becc7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, return NaN",
              "fullTitle": "Test toNumber.js function Give undefined to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])(undefined)).to.be.NaN;",
              "err": {},
              "uuid": "1af63ae6-d24a-4c36-9b72-35aa9650e4d1",
              "parentUUID": "bacf1f29-345e-48ca-ac3f-1c8dd0becc7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give an ojbect to method, return NaN",
              "fullTitle": "Test toNumber.js function Give an ojbect to method, return NaN",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])({\n  a: 'foo'\n})).to.be.NaN;",
              "err": {},
              "uuid": "3f7b56d6-2475-4bb9-bdba-842e76fb4db5",
              "parentUUID": "bacf1f29-345e-48ca-ac3f-1c8dd0becc7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give invalid number string to method, return NaN",
              "fullTitle": "Test toNumber.js function Give invalid number string to method, return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])('Hello world!')).to.be.NaN;",
              "err": {},
              "uuid": "57501157-a139-44d1-9a7a-70310483d0c5",
              "parentUUID": "bacf1f29-345e-48ca-ac3f-1c8dd0becc7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give Hexadecimals number string to method, return converted base 10",
              "fullTitle": "Test toNumber.js function Give Hexadecimals number string to method, return converted base 10",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal((0, _toNumber[\"default\"])('0xabcdef'), 11259375);",
              "err": {},
              "uuid": "24e4e919-213a-4a0b-ad55-666012755301",
              "parentUUID": "bacf1f29-345e-48ca-ac3f-1c8dd0becc7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give bad Hexadecimals number, return NaN",
              "fullTitle": "Test toNumber.js function Give bad Hexadecimals number, return NaN",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])('-0xabcdef')).to.be.NaN;",
              "err": {},
              "uuid": "a52f7bfc-e221-434e-9cc7-700b1d5098bb",
              "parentUUID": "bacf1f29-345e-48ca-ac3f-1c8dd0becc7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give binary number string to method, return converted base 10",
              "fullTitle": "Test toNumber.js function Give binary number string to method, return converted base 10",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.equal((0, _toNumber[\"default\"])('1010'), 10);",
              "err": {
                "message": "AssertionError: expected 1010 to equal 10",
                "estack": "AssertionError: expected 1010 to equal 10\n    at Context.<anonymous> (tests/toNumber.test.js:35:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": "- 1010\n+ 10\n"
              },
              "uuid": "e78bec37-af17-495e-bb94-75f06400b157",
              "parentUUID": "bacf1f29-345e-48ca-ac3f-1c8dd0becc7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give valid number string to method, return number type and same value",
              "fullTitle": "Test toNumber.js function Give valid number string to method, return number type and same value",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var convertedValue = (0, _toNumber[\"default\"])(500);\nassert.isNumber(convertedValue);\nassert.equal(convertedValue, 500);",
              "err": {},
              "uuid": "850f4eab-20fd-401d-836c-24051fd910a7",
              "parentUUID": "bacf1f29-345e-48ca-ac3f-1c8dd0becc7c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1af63ae6-d24a-4c36-9b72-35aa9650e4d1",
            "3f7b56d6-2475-4bb9-bdba-842e76fb4db5",
            "57501157-a139-44d1-9a7a-70310483d0c5",
            "24e4e919-213a-4a0b-ad55-666012755301",
            "a52f7bfc-e221-434e-9cc7-700b1d5098bb",
            "850f4eab-20fd-401d-836c-24051fd910a7"
          ],
          "failures": [
            "a01c1e73-c89e-4703-9eaf-9540d0c8f70f",
            "e78bec37-af17-495e-bb94-75f06400b157"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "df9c157e-4a77-434a-9a97-6328385422a9",
          "title": "toString test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/toString.test.js",
          "file": "/tests/toString.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should preserved -0",
              "fullTitle": "toString test should preserved -0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(-0)).to.equal('-0');",
              "err": {},
              "uuid": "b0416555-dfbb-4d4b-b6c4-3163a91e086c",
              "parentUUID": "df9c157e-4a77-434a-9a97-6328385422a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert array into a string",
              "fullTitle": "toString test should convert array into a string",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])([1, 2, 3])).to.equal('1,2,3');",
              "err": {},
              "uuid": "c640f67e-497d-4c0a-a9ea-092faf5144e1",
              "parentUUID": "df9c157e-4a77-434a-9a97-6328385422a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, undefined, boolean, NaN",
              "fullTitle": "toString test should not return string for null, undefined, boolean, NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(null)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(true)).to.not.equal('string');\nexpect((0, _toString[\"default\"])(NaN)).to.not.equal('string');",
              "err": {},
              "uuid": "06b1ab3c-cd29-44d9-a313-a1758f529d5c",
              "parentUUID": "df9c157e-4a77-434a-9a97-6328385422a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return string for number, object, string",
              "fullTitle": "toString test should return string for number, object, string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(123)).to.be.a('string');\nexpect((0, _toString[\"default\"])({\n  'a': 1\n})).to.be.a('string');\nexpect((0, _toString[\"default\"])('abc')).to.be.a('string');",
              "err": {},
              "uuid": "0386a94f-1d04-47a8-8263-f0d12615a9d1",
              "parentUUID": "df9c157e-4a77-434a-9a97-6328385422a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b0416555-dfbb-4d4b-b6c4-3163a91e086c",
            "c640f67e-497d-4c0a-a9ea-092faf5144e1",
            "06b1ab3c-cd29-44d9-a313-a1758f529d5c",
            "0386a94f-1d04-47a8-8263-f0d12615a9d1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c9f254e9-69f1-4946-9431-d493c77a1a48",
          "title": "upperFirst test",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/upperFirst.test.js",
          "file": "/tests/upperFirst.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert fred into Fred",
              "fullTitle": "upperFirst test should convert fred into Fred",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])('fred')).to.equal('Fred');",
              "err": {},
              "uuid": "269b5377-599d-456f-95e6-76d9a34511ae",
              "parentUUID": "c9f254e9-69f1-4946-9431-d493c77a1a48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert FRED into FRED",
              "fullTitle": "upperFirst test should convert FRED into FRED",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])('FRED')).to.equal('FRED');",
              "err": {},
              "uuid": "e75292aa-1cc6-4f5a-b868-30cda3849214",
              "parentUUID": "c9f254e9-69f1-4946-9431-d493c77a1a48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "upperFirst should return string",
              "fullTitle": "upperFirst test upperFirst should return string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _upperFirst[\"default\"])('fred');\nexpect(result).to.be.a('string');",
              "err": {},
              "uuid": "df1a87e9-1b7a-4897-9f0c-549101df599c",
              "parentUUID": "c9f254e9-69f1-4946-9431-d493c77a1a48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return string for null, undefined, NaN",
              "fullTitle": "upperFirst test should not return string for null, undefined, NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _upperFirst[\"default\"])(null)).to.not.equal('string');\nexpect((0, _upperFirst[\"default\"])(undefined)).to.not.equal('string');\nexpect((0, _upperFirst[\"default\"])(NaN)).to.not.equal('string');",
              "err": {},
              "uuid": "235884e1-f5ce-4b31-93fd-db35a841224b",
              "parentUUID": "c9f254e9-69f1-4946-9431-d493c77a1a48",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "269b5377-599d-456f-95e6-76d9a34511ae",
            "e75292aa-1cc6-4f5a-b868-30cda3849214",
            "df1a87e9-1b7a-4897-9f0c-549101df599c",
            "235884e1-f5ce-4b31-93fd-db35a841224b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e8c28bbe-5d9e-4285-89c8-8fe3e2f59cbf",
          "title": "Test word.js function",
          "fullFile": "/Users/nghi.thanh/tuni/COMP.SE.200-2020-2021-1-Software-Testing/tests/words.test.js",
          "file": "/tests/words.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Give null to method, method is failed because match method of String is missing",
              "fullTitle": "Test word.js function Give null to method, method is failed because match method of String is missing",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function () {\n  (0, _words[\"default\"])(null, null);\n}).to[\"throw\"](TypeError);",
              "err": {},
              "uuid": "38c472dd-34cb-4a39-b714-9d8c9f02609e",
              "parentUUID": "e8c28bbe-5d9e-4285-89c8-8fe3e2f59cbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give undefined to method, method is failed because match method of String is missing",
              "fullTitle": "Test word.js function Give undefined to method, method is failed because match method of String is missing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function () {\n  (0, _words[\"default\"])(undefined, null);\n}).to[\"throw\"](TypeError);",
              "err": {},
              "uuid": "8eabe300-d459-462a-99f9-32ef33c40a58",
              "parentUUID": "e8c28bbe-5d9e-4285-89c8-8fe3e2f59cbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give empty string without pattern, return empty array",
              "fullTitle": "Test word.js function Give empty string without pattern, return empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _words[\"default\"])('')).to.be.instanceOf(Array).that.eql([]);",
              "err": {},
              "uuid": "42767718-d9f4-4207-98df-ac28fd53e5bd",
              "parentUUID": "e8c28bbe-5d9e-4285-89c8-8fe3e2f59cbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give sample valid string, return array with splitted words and remove all special chars",
              "fullTitle": "Test word.js function Give sample valid string, return array with splitted words and remove all special chars",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _words[\"default\"])('abc.a abc abb')).to.be.instanceOf(Array).that.eql(['abc', 'a', 'abc', 'abb']);\nexpect((0, _words[\"default\"])('abc.a a,bc ab|b')).to.be.instanceOf(Array).that.eql(['abc', 'a', 'a', 'bc', 'ab', 'b']);",
              "err": {},
              "uuid": "887ddd65-a2b9-47b4-92d8-477b757086ab",
              "parentUUID": "e8c28bbe-5d9e-4285-89c8-8fe3e2f59cbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Give sample valid string, return array with splitted words match patterns",
              "fullTitle": "Test word.js function Give sample valid string, return array with splitted words match patterns",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var SPLIT_WORDS_BY_SPACE_AND_COMMA = /[^, ]+/g;\nexpect((0, _words[\"default\"])('abc.a ab,c abb', SPLIT_WORDS_BY_SPACE_AND_COMMA)).to.be.instanceOf(Array).that.eql(['abc.a', 'ab', 'c', 'abb']);",
              "err": {},
              "uuid": "dc3f74a7-bad6-4ac3-8eba-056ee8f41117",
              "parentUUID": "e8c28bbe-5d9e-4285-89c8-8fe3e2f59cbf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38c472dd-34cb-4a39-b714-9d8c9f02609e",
            "8eabe300-d459-462a-99f9-32ef33c40a58",
            "42767718-d9f4-4207-98df-ac28fd53e5bd",
            "887ddd65-a2b9-47b4-92d8-477b757086ab",
            "dc3f74a7-bad6-4ac3-8eba-056ee8f41117"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportFilename": "index"
      },
      "version": "5.1.0"
    }
  }
}